
TreeOp { name: "HASH_JOIN", timing: 0.00217, cardinality: 177065, extra_info: "INNER\nmc.company_id = cn.id\n", children: [TreeOp { name: "PROJECTION", timing: 4.5e-5, cardinality: 198519, extra_info: "#1\n#2\n", children: [TreeOp { name: "FILTER", timing: 0.055375, cardinality: 198519, extra_info: "((mc.note ~~ '%(200%)%') AND (contains(mc.note, '(USA)') OR contains(mc.note, '(worldwide)')))", children: [TreeOp { name: "SEQ_SCAN", timing: 0.00576, cardinality: 2609129, extra_info: "movie_companies\n[INFOSEPARATOR]\nnote\nmovie_id\ncompany_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_companies", attributes: [movie_companies.note, movie_companies.movie_id, movie_companies.company_id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1, .#2] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.002229, cardinality: 84843, extra_info: "company_name\n[INFOSEPARATOR]\ncountry_code\nid\n[INFOSEPARATOR]\nFilters: country_code=[us] AND country_code IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "company_name", attributes: [company_name.country_code, company_name.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.company_id, right_attr: cn.id }] })) }
[(Name("mc"), [Name("company_id")], [Name("movie_id")]), (Name("cn"), [Name("id")], [])]
[Lookup([0 @ mc.company_id = 0 @ cn.id)])]

TreeOp { name: "HASH_JOIN", timing: 0.020423, cardinality: 40, extra_info: "INNER\nn.id = an.person_id\nci.person_id = an.person_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.069619, cardinality: 30, extra_info: "INNER\nci.person_role_id = chn.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.015159, cardinality: 30, extra_info: "INNER\nci.movie_id = t.id\nmc.movie_id = t.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 4e-6, cardinality: 82, extra_info: "INNER\nci.role_id = rt.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.0039, cardinality: 82, extra_info: "INNER\nci.movie_id = mc.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.013347, cardinality: 453, extra_info: "INNER\nci.person_id = n.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.156765, cardinality: 713828, extra_info: "cast_info\n[INFOSEPARATOR]\nnote\nmovie_id\nrole_id\nperson_id\nperson_role_id\n[INFOSEPARATOR]\nFilters: note=(voice) AND note IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "cast_info", attributes: [cast_info.note, cast_info.movie_id, cast_info.role_id, cast_info.person_id, cast_info.person_role_id] })) }, TreeOp { name: "PROJECTION", timing: 1e-6, cardinality: 5409, extra_info: "#1\n#2\n", children: [TreeOp { name: "FILTER", timing: 0.010388, cardinality: 5409, extra_info: "contains(n.name, 'Angel')", children: [TreeOp { name: "SEQ_SCAN", timing: 0.007695, cardinality: 961555, extra_info: "name\n[INFOSEPARATOR]\ngender\nname\nid\n[INFOSEPARATOR]\nFilters: gender=f AND gender IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "name", attributes: [name.gender, name.name, name.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1, .#2] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: ci.person_id, right_attr: n.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.00217, cardinality: 177065, extra_info: "INNER\nmc.company_id = cn.id\n", children: [TreeOp { name: "PROJECTION", timing: 4.5e-5, cardinality: 198519, extra_info: "#1\n#2\n", children: [TreeOp { name: "FILTER", timing: 0.055375, cardinality: 198519, extra_info: "((mc.note ~~ '%(200%)%') AND (contains(mc.note, '(USA)') OR contains(mc.note, '(worldwide)')))", children: [TreeOp { name: "SEQ_SCAN", timing: 0.00576, cardinality: 2609129, extra_info: "movie_companies\n[INFOSEPARATOR]\nnote\nmovie_id\ncompany_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_companies", attributes: [movie_companies.note, movie_companies.movie_id, movie_companies.company_id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1, .#2] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.002229, cardinality: 84843, extra_info: "company_name\n[INFOSEPARATOR]\ncountry_code\nid\n[INFOSEPARATOR]\nFilters: country_code=[us] AND country_code IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "company_name", attributes: [company_name.country_code, company_name.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.company_id, right_attr: cn.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: ci.movie_id, right_attr: mc.movie_id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 3e-6, cardinality: 1, extra_info: "role_type\n[INFOSEPARATOR]\nrole\nid\n[INFOSEPARATOR]\nFilters: role=actress AND role IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "role_type", attributes: [role_type.role, role_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: ci.role_id, right_attr: rt.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.032017, cardinality: 512825, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\nid\ntitle\n[INFOSEPARATOR]\nFilters: production_year>=2007 AND production_year<=2010 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.id, title.title] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: ci.movie_id, right_attr: t.id }, Equalizer { left_attr: mc.movie_id, right_attr: t.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.020705, cardinality: 3140339, extra_info: "char_name\n[INFOSEPARATOR]\nid\nname", children: [], attr: Some(Scan(ScanAttr { table_name: "char_name", attributes: [char_name.id, char_name.name] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: ci.person_role_id, right_attr: chn.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.004572, cardinality: 901343, extra_info: "aka_name\n[INFOSEPARATOR]\nperson_id\nname", children: [], attr: Some(Scan(ScanAttr { table_name: "aka_name", attributes: [aka_name.person_id, aka_name.name] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: n.id, right_attr: an.person_id }, Equalizer { left_attr: ci.person_id, right_attr: an.person_id }] })) }
[(Name("ci"), [Name("person_id"), Name("movie_id"), Name("role_id"), Name("person_role_id")], []), (Name("n"), [Name("id")], [Name("name")]), (Node(TreeOp { name: "HASH_JOIN", timing: 0.00217, cardinality: 177065, extra_info: "INNER\nmc.company_id = cn.id\n", children: [TreeOp { name: "PROJECTION", timing: 4.5e-5, cardinality: 198519, extra_info: "#1\n#2\n", children: [TreeOp { name: "FILTER", timing: 0.055375, cardinality: 198519, extra_info: "((mc.note ~~ '%(200%)%') AND (contains(mc.note, '(USA)') OR contains(mc.note, '(worldwide)')))", children: [TreeOp { name: "SEQ_SCAN", timing: 0.00576, cardinality: 2609129, extra_info: "movie_companies\n[INFOSEPARATOR]\nnote\nmovie_id\ncompany_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_companies", attributes: [movie_companies.note, movie_companies.movie_id, movie_companies.company_id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1, .#2] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.002229, cardinality: 84843, extra_info: "company_name\n[INFOSEPARATOR]\ncountry_code\nid\n[INFOSEPARATOR]\nFilters: country_code=[us] AND country_code IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "company_name", attributes: [company_name.country_code, company_name.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.company_id, right_attr: cn.id }] })) }), [Id(1)], [Id(0)]), (Name("rt"), [Name("id")], []), (Name("t"), [Name("id")], [Name("title")]), (Name("chn"), [Name("id")], [Name("name")]), (Name("an"), [Name("person_id")], [Name("name")])]
[Lookup([2 @ ci.role_id = 2 @ rt.id), 0 @ ci.person_id = 0 @ n.id), 1 @ ci.movie_id = 1 @ mc.movie_id), 1 @ ci.movie_id = 3 @ t.id), 0 @ ci.person_id = 5 @ an.person_id), 3 @ ci.person_role_id = 4 @ chn.id)])]
