
TreeOp { name: "HASH_JOIN", timing: 0.000496, cardinality: 40854, extra_info: "INNER\nmi_idx.info_type_id = it2.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000652, cardinality: 164629, extra_info: "INNER\nt.kind_id = kt.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.025075, cardinality: 209854, extra_info: "INNER\nt.id = mi_idx.movie_id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.027675, cardinality: 662065, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\nkind_id\nid\ntitle\n[INFOSEPARATOR]\nFilters: production_year>2008 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.kind_id, title.id, title.title] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.012941, cardinality: 1172960, extra_info: "movie_info_idx\n[INFOSEPARATOR]\ninfo\nmovie_id\ninfo_type_id\n[INFOSEPARATOR]\nFilters: info<7.0 AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info_idx", attributes: [movie_info_idx.info, movie_info_idx.movie_id, movie_info_idx.info_type_id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: mi_idx.movie_id }] })) }, TreeOp { name: "PROJECTION", timing: 1e-6, cardinality: 2, extra_info: "#1\n", children: [TreeOp { name: "FILTER", timing: 6e-6, cardinality: 2, extra_info: "(kt.kind = 'movie' OR kt.kind = 'episode')", children: [TreeOp { name: "SEQ_SCAN", timing: 5e-6, cardinality: 7, extra_info: "kind_type\n[INFOSEPARATOR]\nkind\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "kind_type", attributes: [kind_type.kind, kind_type.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.kind_id, right_attr: kt.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 5e-6, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=rating AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi_idx.info_type_id, right_attr: it2.id }] })) }
[(Name("t"), [Name("id"), Name("kind_id")], [Name("title")]), (Name("mi_idx"), [Name("movie_id"), Name("info_type_id")], [Name("info")]), (Name("kt"), [Name("id")], []), (Name("it2"), [Name("id")], [])]
[Lookup([0 @ t.id = 0 @ mi_idx.movie_id), 1 @ t.kind_id = 1 @ kt.id)]), Intersect([mi_idx.info_type_id @ 0), it2.id @ 2)])]

TreeOp { name: "HASH_JOIN", timing: 0.011573, cardinality: 6816, extra_info: "INNER\nmc.movie_id = mi_idx.movie_id\nmc.movie_id = t.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000646, cardinality: 248388, extra_info: "INNER\nmc.company_type_id = ct.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.004932, cardinality: 248388, extra_info: "INNER\nmc.company_id = cn.id\n", children: [TreeOp { name: "PROJECTION", timing: 6.6e-5, cardinality: 303271, extra_info: "#1\n#2\n#3\n", children: [TreeOp { name: "FILTER", timing: 0.047995, cardinality: 303271, extra_info: "((mc.note ~~ '%(200%)%') AND NOT(contains(mc.note, '(USA)')))", children: [TreeOp { name: "SEQ_SCAN", timing: 0.006142, cardinality: 2609129, extra_info: "movie_companies\n[INFOSEPARATOR]\nnote\nmovie_id\ncompany_type_id\ncompany_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_companies", attributes: [movie_companies.note, movie_companies.movie_id, movie_companies.company_type_id, movie_companies.company_id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1, .#2, .#3] })) }, TreeOp { name: "PROJECTION", timing: 9e-6, cardinality: 126230, extra_info: "#1\n#2\n", children: [TreeOp { name: "FILTER", timing: 0.001117, cardinality: 126230, extra_info: "cn.country_code != '[us]'", children: [TreeOp { name: "SEQ_SCAN", timing: 0.002248, cardinality: 234997, extra_info: "company_name\n[INFOSEPARATOR]\ncountry_code\nid\nname", children: [], attr: Some(Scan(ScanAttr { table_name: "company_name", attributes: [company_name.country_code, company_name.id, company_name.name] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1, .#2] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.company_id, right_attr: cn.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 1e-6, cardinality: 4, extra_info: "company_type\n[INFOSEPARATOR]\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "company_type", attributes: [company_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.company_type_id, right_attr: ct.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.000496, cardinality: 40854, extra_info: "INNER\nmi_idx.info_type_id = it2.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000652, cardinality: 164629, extra_info: "INNER\nt.kind_id = kt.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.025075, cardinality: 209854, extra_info: "INNER\nt.id = mi_idx.movie_id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.027675, cardinality: 662065, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\nkind_id\nid\ntitle\n[INFOSEPARATOR]\nFilters: production_year>2008 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.kind_id, title.id, title.title] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.012941, cardinality: 1172960, extra_info: "movie_info_idx\n[INFOSEPARATOR]\ninfo\nmovie_id\ninfo_type_id\n[INFOSEPARATOR]\nFilters: info<7.0 AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info_idx", attributes: [movie_info_idx.info, movie_info_idx.movie_id, movie_info_idx.info_type_id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: mi_idx.movie_id }] })) }, TreeOp { name: "PROJECTION", timing: 1e-6, cardinality: 2, extra_info: "#1\n", children: [TreeOp { name: "FILTER", timing: 6e-6, cardinality: 2, extra_info: "(kt.kind = 'movie' OR kt.kind = 'episode')", children: [TreeOp { name: "SEQ_SCAN", timing: 5e-6, cardinality: 7, extra_info: "kind_type\n[INFOSEPARATOR]\nkind\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "kind_type", attributes: [kind_type.kind, kind_type.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.kind_id, right_attr: kt.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 5e-6, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=rating AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi_idx.info_type_id, right_attr: it2.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.movie_id, right_attr: mi_idx.movie_id }, Equalizer { left_attr: mc.movie_id, right_attr: t.id }] })) }
[(Name("mc"), [Name("company_id"), Name("company_type_id"), Name("movie_id")], []), (Name("cn"), [Name("id")], [Name("name")]), (Name("ct"), [Name("id")], []), (Node(TreeOp { name: "HASH_JOIN", timing: 0.000496, cardinality: 40854, extra_info: "INNER\nmi_idx.info_type_id = it2.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000652, cardinality: 164629, extra_info: "INNER\nt.kind_id = kt.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.025075, cardinality: 209854, extra_info: "INNER\nt.id = mi_idx.movie_id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.027675, cardinality: 662065, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\nkind_id\nid\ntitle\n[INFOSEPARATOR]\nFilters: production_year>2008 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.kind_id, title.id, title.title] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.012941, cardinality: 1172960, extra_info: "movie_info_idx\n[INFOSEPARATOR]\ninfo\nmovie_id\ninfo_type_id\n[INFOSEPARATOR]\nFilters: info<7.0 AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info_idx", attributes: [movie_info_idx.info, movie_info_idx.movie_id, movie_info_idx.info_type_id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: mi_idx.movie_id }] })) }, TreeOp { name: "PROJECTION", timing: 1e-6, cardinality: 2, extra_info: "#1\n", children: [TreeOp { name: "FILTER", timing: 6e-6, cardinality: 2, extra_info: "(kt.kind = 'movie' OR kt.kind = 'episode')", children: [TreeOp { name: "SEQ_SCAN", timing: 5e-6, cardinality: 7, extra_info: "kind_type\n[INFOSEPARATOR]\nkind\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "kind_type", attributes: [kind_type.kind, kind_type.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.kind_id, right_attr: kt.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 5e-6, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=rating AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi_idx.info_type_id, right_attr: it2.id }] })) }), [Id(0)], [Id(1), Id(2), Id(3), Id(4)])]
[Lookup([0 @ mc.company_id = 0 @ cn.id), 1 @ mc.company_type_id = 1 @ ct.id), 2 @ mc.movie_id = 2 @ t.id)])]

TreeOp { name: "HASH_JOIN", timing: 0.00067, cardinality: 2958, extra_info: "INNER\nmk.movie_id = mc.movie_id\nmk.movie_id = t.id\nmk.movie_id = mi_idx.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.003836, cardinality: 37091, extra_info: "INNER\nmk.keyword_id = k.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.00078, cardinality: 4523930, extra_info: "movie_keyword\n[INFOSEPARATOR]\nmovie_id\nkeyword_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_keyword", attributes: [movie_keyword.movie_id, movie_keyword.keyword_id] })) }, TreeOp { name: "PROJECTION", timing: 0.0, cardinality: 3, extra_info: "#1\n", children: [TreeOp { name: "FILTER", timing: 0.001106, cardinality: 3, extra_info: "(k.keyword = 'murder' OR k.keyword = 'murder-in-title' OR k.keyword = 'blood' OR k.keyword = 'violence')", children: [TreeOp { name: "SEQ_SCAN", timing: 0.000957, cardinality: 134170, extra_info: "keyword\n[INFOSEPARATOR]\nkeyword\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "keyword", attributes: [keyword.keyword, keyword.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mk.keyword_id, right_attr: k.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.011573, cardinality: 6816, extra_info: "INNER\nmc.movie_id = mi_idx.movie_id\nmc.movie_id = t.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000646, cardinality: 248388, extra_info: "INNER\nmc.company_type_id = ct.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.004932, cardinality: 248388, extra_info: "INNER\nmc.company_id = cn.id\n", children: [TreeOp { name: "PROJECTION", timing: 6.6e-5, cardinality: 303271, extra_info: "#1\n#2\n#3\n", children: [TreeOp { name: "FILTER", timing: 0.047995, cardinality: 303271, extra_info: "((mc.note ~~ '%(200%)%') AND NOT(contains(mc.note, '(USA)')))", children: [TreeOp { name: "SEQ_SCAN", timing: 0.006142, cardinality: 2609129, extra_info: "movie_companies\n[INFOSEPARATOR]\nnote\nmovie_id\ncompany_type_id\ncompany_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_companies", attributes: [movie_companies.note, movie_companies.movie_id, movie_companies.company_type_id, movie_companies.company_id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1, .#2, .#3] })) }, TreeOp { name: "PROJECTION", timing: 9e-6, cardinality: 126230, extra_info: "#1\n#2\n", children: [TreeOp { name: "FILTER", timing: 0.001117, cardinality: 126230, extra_info: "cn.country_code != '[us]'", children: [TreeOp { name: "SEQ_SCAN", timing: 0.002248, cardinality: 234997, extra_info: "company_name\n[INFOSEPARATOR]\ncountry_code\nid\nname", children: [], attr: Some(Scan(ScanAttr { table_name: "company_name", attributes: [company_name.country_code, company_name.id, company_name.name] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1, .#2] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.company_id, right_attr: cn.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 1e-6, cardinality: 4, extra_info: "company_type\n[INFOSEPARATOR]\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "company_type", attributes: [company_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.company_type_id, right_attr: ct.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.000496, cardinality: 40854, extra_info: "INNER\nmi_idx.info_type_id = it2.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000652, cardinality: 164629, extra_info: "INNER\nt.kind_id = kt.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.025075, cardinality: 209854, extra_info: "INNER\nt.id = mi_idx.movie_id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.027675, cardinality: 662065, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\nkind_id\nid\ntitle\n[INFOSEPARATOR]\nFilters: production_year>2008 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.kind_id, title.id, title.title] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.012941, cardinality: 1172960, extra_info: "movie_info_idx\n[INFOSEPARATOR]\ninfo\nmovie_id\ninfo_type_id\n[INFOSEPARATOR]\nFilters: info<7.0 AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info_idx", attributes: [movie_info_idx.info, movie_info_idx.movie_id, movie_info_idx.info_type_id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: mi_idx.movie_id }] })) }, TreeOp { name: "PROJECTION", timing: 1e-6, cardinality: 2, extra_info: "#1\n", children: [TreeOp { name: "FILTER", timing: 6e-6, cardinality: 2, extra_info: "(kt.kind = 'movie' OR kt.kind = 'episode')", children: [TreeOp { name: "SEQ_SCAN", timing: 5e-6, cardinality: 7, extra_info: "kind_type\n[INFOSEPARATOR]\nkind\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "kind_type", attributes: [kind_type.kind, kind_type.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.kind_id, right_attr: kt.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 5e-6, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=rating AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi_idx.info_type_id, right_attr: it2.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.movie_id, right_attr: mi_idx.movie_id }, Equalizer { left_attr: mc.movie_id, right_attr: t.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mk.movie_id, right_attr: mc.movie_id }, Equalizer { left_attr: mk.movie_id, right_attr: t.id }, Equalizer { left_attr: mk.movie_id, right_attr: mi_idx.movie_id }] })) }
[(Name("mk"), [Name("keyword_id"), Name("movie_id")], []), (Name("k"), [Name("id")], []), (Node(TreeOp { name: "HASH_JOIN", timing: 0.011573, cardinality: 6816, extra_info: "INNER\nmc.movie_id = mi_idx.movie_id\nmc.movie_id = t.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000646, cardinality: 248388, extra_info: "INNER\nmc.company_type_id = ct.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.004932, cardinality: 248388, extra_info: "INNER\nmc.company_id = cn.id\n", children: [TreeOp { name: "PROJECTION", timing: 6.6e-5, cardinality: 303271, extra_info: "#1\n#2\n#3\n", children: [TreeOp { name: "FILTER", timing: 0.047995, cardinality: 303271, extra_info: "((mc.note ~~ '%(200%)%') AND NOT(contains(mc.note, '(USA)')))", children: [TreeOp { name: "SEQ_SCAN", timing: 0.006142, cardinality: 2609129, extra_info: "movie_companies\n[INFOSEPARATOR]\nnote\nmovie_id\ncompany_type_id\ncompany_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_companies", attributes: [movie_companies.note, movie_companies.movie_id, movie_companies.company_type_id, movie_companies.company_id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1, .#2, .#3] })) }, TreeOp { name: "PROJECTION", timing: 9e-6, cardinality: 126230, extra_info: "#1\n#2\n", children: [TreeOp { name: "FILTER", timing: 0.001117, cardinality: 126230, extra_info: "cn.country_code != '[us]'", children: [TreeOp { name: "SEQ_SCAN", timing: 0.002248, cardinality: 234997, extra_info: "company_name\n[INFOSEPARATOR]\ncountry_code\nid\nname", children: [], attr: Some(Scan(ScanAttr { table_name: "company_name", attributes: [company_name.country_code, company_name.id, company_name.name] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1, .#2] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.company_id, right_attr: cn.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 1e-6, cardinality: 4, extra_info: "company_type\n[INFOSEPARATOR]\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "company_type", attributes: [company_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.company_type_id, right_attr: ct.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.000496, cardinality: 40854, extra_info: "INNER\nmi_idx.info_type_id = it2.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000652, cardinality: 164629, extra_info: "INNER\nt.kind_id = kt.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.025075, cardinality: 209854, extra_info: "INNER\nt.id = mi_idx.movie_id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.027675, cardinality: 662065, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\nkind_id\nid\ntitle\n[INFOSEPARATOR]\nFilters: production_year>2008 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.kind_id, title.id, title.title] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.012941, cardinality: 1172960, extra_info: "movie_info_idx\n[INFOSEPARATOR]\ninfo\nmovie_id\ninfo_type_id\n[INFOSEPARATOR]\nFilters: info<7.0 AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info_idx", attributes: [movie_info_idx.info, movie_info_idx.movie_id, movie_info_idx.info_type_id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: mi_idx.movie_id }] })) }, TreeOp { name: "PROJECTION", timing: 1e-6, cardinality: 2, extra_info: "#1\n", children: [TreeOp { name: "FILTER", timing: 6e-6, cardinality: 2, extra_info: "(kt.kind = 'movie' OR kt.kind = 'episode')", children: [TreeOp { name: "SEQ_SCAN", timing: 5e-6, cardinality: 7, extra_info: "kind_type\n[INFOSEPARATOR]\nkind\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "kind_type", attributes: [kind_type.kind, kind_type.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.kind_id, right_attr: kt.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 5e-6, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=rating AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi_idx.info_type_id, right_attr: it2.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.movie_id, right_attr: mi_idx.movie_id }, Equalizer { left_attr: mc.movie_id, right_attr: t.id }] })) }), [Id(2)], [Id(0), Id(1), Id(3), Id(4), Id(5), Id(6), Id(7)])]
[Lookup([0 @ mk.keyword_id = 0 @ k.id), 1 @ mk.movie_id = 1 @ mc.movie_id)])]

TreeOp { name: "HASH_JOIN", timing: 0.013764, cardinality: 2851, extra_info: "INNER\nmi.movie_id = mc.movie_id\nmi.movie_id = t.id\nmi.movie_id = mk.movie_id\nmi.movie_id = mi_idx.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.001441, cardinality: 588764, extra_info: "INNER\nmi.info_type_id = it1.id\n", children: [TreeOp { name: "PROJECTION", timing: 7e-5, cardinality: 669336, extra_info: "#1\n#2\n", children: [TreeOp { name: "FILTER", timing: 0.084958, cardinality: 669336, extra_info: "(mi.info = 'Germany' OR mi.info = 'German' OR mi.info = 'USA' OR mi.info = 'American')", children: [TreeOp { name: "SEQ_SCAN", timing: 0.085347, cardinality: 14835720, extra_info: "movie_info\n[INFOSEPARATOR]\ninfo\nmovie_id\ninfo_type_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info", attributes: [movie_info.info, movie_info.movie_id, movie_info.info_type_id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1, .#2] })) }, TreeOp { name: "SEQ_SCAN", timing: 7e-6, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=countries AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi.info_type_id, right_attr: it1.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.00067, cardinality: 2958, extra_info: "INNER\nmk.movie_id = mc.movie_id\nmk.movie_id = t.id\nmk.movie_id = mi_idx.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.003836, cardinality: 37091, extra_info: "INNER\nmk.keyword_id = k.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.00078, cardinality: 4523930, extra_info: "movie_keyword\n[INFOSEPARATOR]\nmovie_id\nkeyword_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_keyword", attributes: [movie_keyword.movie_id, movie_keyword.keyword_id] })) }, TreeOp { name: "PROJECTION", timing: 0.0, cardinality: 3, extra_info: "#1\n", children: [TreeOp { name: "FILTER", timing: 0.001106, cardinality: 3, extra_info: "(k.keyword = 'murder' OR k.keyword = 'murder-in-title' OR k.keyword = 'blood' OR k.keyword = 'violence')", children: [TreeOp { name: "SEQ_SCAN", timing: 0.000957, cardinality: 134170, extra_info: "keyword\n[INFOSEPARATOR]\nkeyword\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "keyword", attributes: [keyword.keyword, keyword.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mk.keyword_id, right_attr: k.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.011573, cardinality: 6816, extra_info: "INNER\nmc.movie_id = mi_idx.movie_id\nmc.movie_id = t.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000646, cardinality: 248388, extra_info: "INNER\nmc.company_type_id = ct.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.004932, cardinality: 248388, extra_info: "INNER\nmc.company_id = cn.id\n", children: [TreeOp { name: "PROJECTION", timing: 6.6e-5, cardinality: 303271, extra_info: "#1\n#2\n#3\n", children: [TreeOp { name: "FILTER", timing: 0.047995, cardinality: 303271, extra_info: "((mc.note ~~ '%(200%)%') AND NOT(contains(mc.note, '(USA)')))", children: [TreeOp { name: "SEQ_SCAN", timing: 0.006142, cardinality: 2609129, extra_info: "movie_companies\n[INFOSEPARATOR]\nnote\nmovie_id\ncompany_type_id\ncompany_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_companies", attributes: [movie_companies.note, movie_companies.movie_id, movie_companies.company_type_id, movie_companies.company_id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1, .#2, .#3] })) }, TreeOp { name: "PROJECTION", timing: 9e-6, cardinality: 126230, extra_info: "#1\n#2\n", children: [TreeOp { name: "FILTER", timing: 0.001117, cardinality: 126230, extra_info: "cn.country_code != '[us]'", children: [TreeOp { name: "SEQ_SCAN", timing: 0.002248, cardinality: 234997, extra_info: "company_name\n[INFOSEPARATOR]\ncountry_code\nid\nname", children: [], attr: Some(Scan(ScanAttr { table_name: "company_name", attributes: [company_name.country_code, company_name.id, company_name.name] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1, .#2] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.company_id, right_attr: cn.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 1e-6, cardinality: 4, extra_info: "company_type\n[INFOSEPARATOR]\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "company_type", attributes: [company_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.company_type_id, right_attr: ct.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.000496, cardinality: 40854, extra_info: "INNER\nmi_idx.info_type_id = it2.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000652, cardinality: 164629, extra_info: "INNER\nt.kind_id = kt.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.025075, cardinality: 209854, extra_info: "INNER\nt.id = mi_idx.movie_id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.027675, cardinality: 662065, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\nkind_id\nid\ntitle\n[INFOSEPARATOR]\nFilters: production_year>2008 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.kind_id, title.id, title.title] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.012941, cardinality: 1172960, extra_info: "movie_info_idx\n[INFOSEPARATOR]\ninfo\nmovie_id\ninfo_type_id\n[INFOSEPARATOR]\nFilters: info<7.0 AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info_idx", attributes: [movie_info_idx.info, movie_info_idx.movie_id, movie_info_idx.info_type_id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: mi_idx.movie_id }] })) }, TreeOp { name: "PROJECTION", timing: 1e-6, cardinality: 2, extra_info: "#1\n", children: [TreeOp { name: "FILTER", timing: 6e-6, cardinality: 2, extra_info: "(kt.kind = 'movie' OR kt.kind = 'episode')", children: [TreeOp { name: "SEQ_SCAN", timing: 5e-6, cardinality: 7, extra_info: "kind_type\n[INFOSEPARATOR]\nkind\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "kind_type", attributes: [kind_type.kind, kind_type.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.kind_id, right_attr: kt.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 5e-6, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=rating AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi_idx.info_type_id, right_attr: it2.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.movie_id, right_attr: mi_idx.movie_id }, Equalizer { left_attr: mc.movie_id, right_attr: t.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mk.movie_id, right_attr: mc.movie_id }, Equalizer { left_attr: mk.movie_id, right_attr: t.id }, Equalizer { left_attr: mk.movie_id, right_attr: mi_idx.movie_id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi.movie_id, right_attr: mc.movie_id }, Equalizer { left_attr: mi.movie_id, right_attr: t.id }, Equalizer { left_attr: mi.movie_id, right_attr: mk.movie_id }, Equalizer { left_attr: mi.movie_id, right_attr: mi_idx.movie_id }] })) }
[(Name("mi"), [Name("info_type_id"), Name("movie_id")], []), (Name("it1"), [Name("id")], []), (Node(TreeOp { name: "HASH_JOIN", timing: 0.00067, cardinality: 2958, extra_info: "INNER\nmk.movie_id = mc.movie_id\nmk.movie_id = t.id\nmk.movie_id = mi_idx.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.003836, cardinality: 37091, extra_info: "INNER\nmk.keyword_id = k.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.00078, cardinality: 4523930, extra_info: "movie_keyword\n[INFOSEPARATOR]\nmovie_id\nkeyword_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_keyword", attributes: [movie_keyword.movie_id, movie_keyword.keyword_id] })) }, TreeOp { name: "PROJECTION", timing: 0.0, cardinality: 3, extra_info: "#1\n", children: [TreeOp { name: "FILTER", timing: 0.001106, cardinality: 3, extra_info: "(k.keyword = 'murder' OR k.keyword = 'murder-in-title' OR k.keyword = 'blood' OR k.keyword = 'violence')", children: [TreeOp { name: "SEQ_SCAN", timing: 0.000957, cardinality: 134170, extra_info: "keyword\n[INFOSEPARATOR]\nkeyword\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "keyword", attributes: [keyword.keyword, keyword.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mk.keyword_id, right_attr: k.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.011573, cardinality: 6816, extra_info: "INNER\nmc.movie_id = mi_idx.movie_id\nmc.movie_id = t.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000646, cardinality: 248388, extra_info: "INNER\nmc.company_type_id = ct.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.004932, cardinality: 248388, extra_info: "INNER\nmc.company_id = cn.id\n", children: [TreeOp { name: "PROJECTION", timing: 6.6e-5, cardinality: 303271, extra_info: "#1\n#2\n#3\n", children: [TreeOp { name: "FILTER", timing: 0.047995, cardinality: 303271, extra_info: "((mc.note ~~ '%(200%)%') AND NOT(contains(mc.note, '(USA)')))", children: [TreeOp { name: "SEQ_SCAN", timing: 0.006142, cardinality: 2609129, extra_info: "movie_companies\n[INFOSEPARATOR]\nnote\nmovie_id\ncompany_type_id\ncompany_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_companies", attributes: [movie_companies.note, movie_companies.movie_id, movie_companies.company_type_id, movie_companies.company_id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1, .#2, .#3] })) }, TreeOp { name: "PROJECTION", timing: 9e-6, cardinality: 126230, extra_info: "#1\n#2\n", children: [TreeOp { name: "FILTER", timing: 0.001117, cardinality: 126230, extra_info: "cn.country_code != '[us]'", children: [TreeOp { name: "SEQ_SCAN", timing: 0.002248, cardinality: 234997, extra_info: "company_name\n[INFOSEPARATOR]\ncountry_code\nid\nname", children: [], attr: Some(Scan(ScanAttr { table_name: "company_name", attributes: [company_name.country_code, company_name.id, company_name.name] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1, .#2] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.company_id, right_attr: cn.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 1e-6, cardinality: 4, extra_info: "company_type\n[INFOSEPARATOR]\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "company_type", attributes: [company_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.company_type_id, right_attr: ct.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.000496, cardinality: 40854, extra_info: "INNER\nmi_idx.info_type_id = it2.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000652, cardinality: 164629, extra_info: "INNER\nt.kind_id = kt.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.025075, cardinality: 209854, extra_info: "INNER\nt.id = mi_idx.movie_id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.027675, cardinality: 662065, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\nkind_id\nid\ntitle\n[INFOSEPARATOR]\nFilters: production_year>2008 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.kind_id, title.id, title.title] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.012941, cardinality: 1172960, extra_info: "movie_info_idx\n[INFOSEPARATOR]\ninfo\nmovie_id\ninfo_type_id\n[INFOSEPARATOR]\nFilters: info<7.0 AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info_idx", attributes: [movie_info_idx.info, movie_info_idx.movie_id, movie_info_idx.info_type_id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: mi_idx.movie_id }] })) }, TreeOp { name: "PROJECTION", timing: 1e-6, cardinality: 2, extra_info: "#1\n", children: [TreeOp { name: "FILTER", timing: 6e-6, cardinality: 2, extra_info: "(kt.kind = 'movie' OR kt.kind = 'episode')", children: [TreeOp { name: "SEQ_SCAN", timing: 5e-6, cardinality: 7, extra_info: "kind_type\n[INFOSEPARATOR]\nkind\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "kind_type", attributes: [kind_type.kind, kind_type.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.kind_id, right_attr: kt.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 5e-6, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=rating AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi_idx.info_type_id, right_attr: it2.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.movie_id, right_attr: mi_idx.movie_id }, Equalizer { left_attr: mc.movie_id, right_attr: t.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mk.movie_id, right_attr: mc.movie_id }, Equalizer { left_attr: mk.movie_id, right_attr: t.id }, Equalizer { left_attr: mk.movie_id, right_attr: mi_idx.movie_id }] })) }), [Id(1)], [Id(0), Id(2), Id(3), Id(4), Id(5), Id(6), Id(7), Id(8)])]
[Lookup([0 @ mi.info_type_id = 0 @ it1.id), 1 @ mi.movie_id = 1 @ mi_idx.movie_id)])]
