let mc = load[{<id: int, movie_id: int, company_id: int, company_type_id: int, note: string> -> int}]("/Users/s2522996/Documents/free-join/data/imdb_csv/movie_companies.csv")
let t = load[{<id: int, title: string, imdb_index: string, kind_id: int, production_year: int, imdb_id: string, phonetic_code: string, episode_of_id: int, season_nr: int, episode_nr: int, series_years: string, md5sum: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/10c/t.csv")
let ct = load[{<id: int, kind: string> -> int}]("/Users/s2522996/Documents/free-join/data/imdb_csv/company_type.csv")
let cn = load[{<id: int, name: string, country_code: string, imdb_id: string, name_pcode_nf: string, name_pcode_sf: string, md5sum: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/10c/cn.csv")
let ci = load[{<id: int, person_id: int, movie_id: int, person_role_id: int, note: string, nr_order: int, role_id: int> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/10c/ci.csv")
let rt = load[{<id: int, role: string> -> int}]("/Users/s2522996/Documents/free-join/data/imdb_csv/role_type.csv")
let chn = load[{<id: int, name: string, imdb_index: string, imdb_id: int, name_pcode_cf: string, surname_pcode: string, md5sum: string> -> int}]("/Users/s2522996/Documents/free-join/data/imdb_csv/char_name.csv")


let interm0_trie0 = sum(<x0, mc_trie1> <- mc_trie0)
	let t_trie1 = t_trie0(x0) in
	if (t_trie1 != {}) then
		sum(<x1, mc_trie2> <- mc_trie1)
			let ct_trie1 = ct_trie0(x1) in
			if (ct_trie1 != {}) then
				sum(<x2, mc_trie3> <- mc_trie2)
					let cn_trie1 = cn_trie0(x2) in
					if (cn_trie1 != {}) then
						sum(<mc_tuple, _> <- mc_trie3)
							sum(<t_tuple, _> <- t_trie1)
								{ <col0=mc_tuple.movie_id, col1=mc_tuple.company_type_id, col2=mc_tuple.company_id, col3=t_tuple.title> -> true }
					else
						{}
			else
				{}
	else
		{}
in


sum(<x0, ci_trie1> <- ci_trie0)
	let rt_trie1 = rt_trie0(x0) in
	if (rt_trie1 != {}) then
		sum(<x1, ci_trie2> <- ci_trie1)
			let interm0_trie1 = interm0_trie0(x1) in
			if (interm0_trie1 != {}) then
				sum(<x2, ci_trie3> <- ci_trie2)
					let chn_trie1 = chn_trie0(x2) in
					if (chn_trie1 != {}) then
						let mn_interm0_col1 = sum(<interm0_tuple, _> <- interm0_trie1) interm0_tuple.col1 in
						let mn_interm0_col2 = sum(<interm0_tuple, _> <- interm0_trie1) interm0_tuple.col2 in
						let mn_interm0_col3 = sum(<interm0_tuple, _> <- interm0_trie1) interm0_tuple.col3 in
						let mn_chn_name = sum(<chn_tuple, _> <- chn_trie1) chn_tuple.name in
						<col3=mn_interm0_col1, col4=mn_interm0_col2, col5=mn_interm0_col3, col6=mn_chn_name>
					else
						<col3={}, col4={}, col5={}, col6={}>
			else
				{}
	else
		{}


