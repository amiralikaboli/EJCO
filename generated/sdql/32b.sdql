let t1 = load[{<id: int, title: string, imdb_index: string, kind_id: int, production_year: int, imdb_id: string, phonetic_code: string, episode_of_id: int, season_nr: int, episode_nr: int, series_years: string, md5sum: string> -> int}]("/Users/s2522996/Documents/free-join/data/imdb_csv/title.csv")
let ml = load[{<id: int, movie_id: int, linked_movie_id: int, link_type_id: int> -> int}]("/Users/s2522996/Documents/free-join/data/imdb_csv/movie_link.csv")
let t2 = load[{<id: int, title: string, imdb_index: string, kind_id: int, production_year: int, imdb_id: string, phonetic_code: string, episode_of_id: int, season_nr: int, episode_nr: int, series_years: string, md5sum: string> -> int}]("/Users/s2522996/Documents/free-join/data/imdb_csv/title.csv")
let mk = load[{<id: int, movie_id: int, keyword_id: int> -> int}]("/Users/s2522996/Documents/free-join/data/imdb_csv/movie_keyword.csv")
let lt = load[{<id: int, link: string> -> int}]("/Users/s2522996/Documents/free-join/data/imdb_csv/link_type.csv")
let k = load[{<id: int, keyword: string, phonetic_code: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/32b/k.csv")


let interm0_trie0 = sum(<x0, t1_trie1> <- t1_trie0)
	let ml_trie1 = ml_trie0(x0) in
	if (ml_trie1 != {}) then
		sum(<x1, ml_trie2> <- ml_trie1)
			let t2_trie1 = t2_trie0(x1) in
			if (t2_trie1 != {}) then
				sum(<t1_tuple, _> <- t1_trie1)
					sum(<ml_tuple, _> <- ml_trie2)
						sum(<t2_tuple, _> <- t2_trie1)
							{ <col0=t1_tuple.id, col1=t1_tuple.title, col2=ml_tuple.linked_movie_id, col3=ml_tuple.link_type_id, col4=t2_tuple.title> -> true }
			else
				{}
	else
		{}
in


sum(<x0, mk_trie1> <- mk_trie0)
	let interm0_trie1 = interm0_trie0(x0) in
	if (interm0_trie1 != {}) then
		sum(<x1, interm0_trie2> <- interm0_trie1)
			let lt_trie1 = lt_trie0(x1) in
			if (lt_trie1 != {}) then
				sum(<x2, mk_trie2> <- mk_trie1)
					let k_trie1 = k_trie0(x2) in
					if (k_trie1 != {}) then
						let mn_interm0_col1 = sum(<interm0_tuple, _> <- interm0_trie2) interm0_tuple.col1 in
						let mn_interm0_col2 = sum(<interm0_tuple, _> <- interm0_trie2) interm0_tuple.col2 in
						let mn_interm0_col4 = sum(<interm0_tuple, _> <- interm0_trie2) interm0_tuple.col4 in
						let mn_lt_link = sum(<lt_tuple, _> <- lt_trie1) lt_tuple.link in
						<col3=mn_interm0_col1, col4=mn_interm0_col2, col5=mn_interm0_col4, col6=mn_lt_link>
					else
						<col3={}, col4={}, col5={}, col6={}>
			else
				{}
	else
		{}


