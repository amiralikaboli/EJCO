
TreeOp { name: "HASH_JOIN", timing: 0.000352, cardinality: 24592, extra_info: "INNER\ncc.status_id = cct2.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000136, cardinality: 135086, extra_info: "INNER\ncc.subject_id = cct1.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 3.5e-5, cardinality: 135086, extra_info: "complete_cast\n[INFOSEPARATOR]\nmovie_id\nsubject_id\nstatus_id", children: [], attr: Some(Scan(ScanAttr { table_name: "complete_cast", attributes: [complete_cast.movie_id, complete_cast.subject_id, complete_cast.status_id] })) }, TreeOp { name: "PROJECTION", timing: 0.0, cardinality: 2, extra_info: "#1\n", children: [TreeOp { name: "FILTER", timing: 3e-6, cardinality: 2, extra_info: "(cct1.kind = 'cast' OR cct1.kind = 'crew')", children: [TreeOp { name: "SEQ_SCAN", timing: 2e-6, cardinality: 4, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.subject_id, right_attr: cct1.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 1e-6, cardinality: 1, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=complete+verified AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.status_id, right_attr: cct2.id }] })) }
[(Name("cc"), [Name("subject_id"), Name("status_id")], [Name("movie_id")]), (Name("cct1"), [Name("id")], []), (Name("cct2"), [Name("id")], [])]
[Lookup([0 @ cc.subject_id = 0 @ cct1.id), 1 @ cc.status_id = 1 @ cct2.id)])]

TreeOp { name: "HASH_JOIN", timing: 0.005991, cardinality: 23558, extra_info: "INNER\nmi_idx.movie_id = cc.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.001436, cardinality: 459925, extra_info: "INNER\nmi_idx.info_type_id = it2.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.006411, cardinality: 1380035, extra_info: "movie_info_idx\n[INFOSEPARATOR]\nmovie_id\ninfo_type_id\ninfo", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info_idx", attributes: [movie_info_idx.movie_id, movie_info_idx.info_type_id, movie_info_idx.info] })) }, TreeOp { name: "SEQ_SCAN", timing: 2e-6, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=votes AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi_idx.info_type_id, right_attr: it2.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.000352, cardinality: 24592, extra_info: "INNER\ncc.status_id = cct2.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000136, cardinality: 135086, extra_info: "INNER\ncc.subject_id = cct1.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 3.5e-5, cardinality: 135086, extra_info: "complete_cast\n[INFOSEPARATOR]\nmovie_id\nsubject_id\nstatus_id", children: [], attr: Some(Scan(ScanAttr { table_name: "complete_cast", attributes: [complete_cast.movie_id, complete_cast.subject_id, complete_cast.status_id] })) }, TreeOp { name: "PROJECTION", timing: 0.0, cardinality: 2, extra_info: "#1\n", children: [TreeOp { name: "FILTER", timing: 3e-6, cardinality: 2, extra_info: "(cct1.kind = 'cast' OR cct1.kind = 'crew')", children: [TreeOp { name: "SEQ_SCAN", timing: 2e-6, cardinality: 4, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.subject_id, right_attr: cct1.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 1e-6, cardinality: 1, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=complete+verified AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.status_id, right_attr: cct2.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi_idx.movie_id, right_attr: cc.movie_id }] })) }
[(Name("mi_idx"), [Name("info_type_id"), Name("movie_id")], [Name("info")]), (Name("it2"), [Name("id")], []), (Node(TreeOp { name: "HASH_JOIN", timing: 0.000352, cardinality: 24592, extra_info: "INNER\ncc.status_id = cct2.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000136, cardinality: 135086, extra_info: "INNER\ncc.subject_id = cct1.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 3.5e-5, cardinality: 135086, extra_info: "complete_cast\n[INFOSEPARATOR]\nmovie_id\nsubject_id\nstatus_id", children: [], attr: Some(Scan(ScanAttr { table_name: "complete_cast", attributes: [complete_cast.movie_id, complete_cast.subject_id, complete_cast.status_id] })) }, TreeOp { name: "PROJECTION", timing: 0.0, cardinality: 2, extra_info: "#1\n", children: [TreeOp { name: "FILTER", timing: 3e-6, cardinality: 2, extra_info: "(cct1.kind = 'cast' OR cct1.kind = 'crew')", children: [TreeOp { name: "SEQ_SCAN", timing: 2e-6, cardinality: 4, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.subject_id, right_attr: cct1.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 1e-6, cardinality: 1, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=complete+verified AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.status_id, right_attr: cct2.id }] })) }), [Id(2)], [Id(0), Id(1)])]
[Lookup([0 @ mi_idx.info_type_id = 0 @ it2.id), 1 @ mi_idx.movie_id = 1 @ cc.movie_id)])]

TreeOp { name: "HASH_JOIN", timing: 0.040879, cardinality: 1875, extra_info: "INNER\nt.id = cc.movie_id\nt.id = mi_idx.movie_id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.029937, cardinality: 1381453, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\nid\ntitle\n[INFOSEPARATOR]\nFilters: production_year>2000 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.id, title.title] })) }, TreeOp { name: "HASH_JOIN", timing: 0.005991, cardinality: 23558, extra_info: "INNER\nmi_idx.movie_id = cc.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.001436, cardinality: 459925, extra_info: "INNER\nmi_idx.info_type_id = it2.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.006411, cardinality: 1380035, extra_info: "movie_info_idx\n[INFOSEPARATOR]\nmovie_id\ninfo_type_id\ninfo", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info_idx", attributes: [movie_info_idx.movie_id, movie_info_idx.info_type_id, movie_info_idx.info] })) }, TreeOp { name: "SEQ_SCAN", timing: 2e-6, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=votes AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi_idx.info_type_id, right_attr: it2.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.000352, cardinality: 24592, extra_info: "INNER\ncc.status_id = cct2.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000136, cardinality: 135086, extra_info: "INNER\ncc.subject_id = cct1.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 3.5e-5, cardinality: 135086, extra_info: "complete_cast\n[INFOSEPARATOR]\nmovie_id\nsubject_id\nstatus_id", children: [], attr: Some(Scan(ScanAttr { table_name: "complete_cast", attributes: [complete_cast.movie_id, complete_cast.subject_id, complete_cast.status_id] })) }, TreeOp { name: "PROJECTION", timing: 0.0, cardinality: 2, extra_info: "#1\n", children: [TreeOp { name: "FILTER", timing: 3e-6, cardinality: 2, extra_info: "(cct1.kind = 'cast' OR cct1.kind = 'crew')", children: [TreeOp { name: "SEQ_SCAN", timing: 2e-6, cardinality: 4, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.subject_id, right_attr: cct1.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 1e-6, cardinality: 1, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=complete+verified AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.status_id, right_attr: cct2.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi_idx.movie_id, right_attr: cc.movie_id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: cc.movie_id }, Equalizer { left_attr: t.id, right_attr: mi_idx.movie_id }] })) }
[(Name("t"), [Name("id")], [Name("title")]), (Node(TreeOp { name: "HASH_JOIN", timing: 0.005991, cardinality: 23558, extra_info: "INNER\nmi_idx.movie_id = cc.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.001436, cardinality: 459925, extra_info: "INNER\nmi_idx.info_type_id = it2.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.006411, cardinality: 1380035, extra_info: "movie_info_idx\n[INFOSEPARATOR]\nmovie_id\ninfo_type_id\ninfo", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info_idx", attributes: [movie_info_idx.movie_id, movie_info_idx.info_type_id, movie_info_idx.info] })) }, TreeOp { name: "SEQ_SCAN", timing: 2e-6, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=votes AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi_idx.info_type_id, right_attr: it2.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.000352, cardinality: 24592, extra_info: "INNER\ncc.status_id = cct2.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000136, cardinality: 135086, extra_info: "INNER\ncc.subject_id = cct1.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 3.5e-5, cardinality: 135086, extra_info: "complete_cast\n[INFOSEPARATOR]\nmovie_id\nsubject_id\nstatus_id", children: [], attr: Some(Scan(ScanAttr { table_name: "complete_cast", attributes: [complete_cast.movie_id, complete_cast.subject_id, complete_cast.status_id] })) }, TreeOp { name: "PROJECTION", timing: 0.0, cardinality: 2, extra_info: "#1\n", children: [TreeOp { name: "FILTER", timing: 3e-6, cardinality: 2, extra_info: "(cct1.kind = 'cast' OR cct1.kind = 'crew')", children: [TreeOp { name: "SEQ_SCAN", timing: 2e-6, cardinality: 4, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.subject_id, right_attr: cct1.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 1e-6, cardinality: 1, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=complete+verified AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.status_id, right_attr: cct2.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi_idx.movie_id, right_attr: cc.movie_id }] })) }), [Id(1)], [Id(0), Id(2), Id(3), Id(4)])]
[Lookup([0 @ t.id = 0 @ cc.movie_id)])]

TreeOp { name: "HASH_JOIN", timing: 0.000423, cardinality: 2023, extra_info: "INNER\nmk.movie_id = cc.movie_id\nmk.movie_id = t.id\nmk.movie_id = mi_idx.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.004209, cardinality: 76714, extra_info: "INNER\nmk.keyword_id = k.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.000831, cardinality: 4523930, extra_info: "movie_keyword\n[INFOSEPARATOR]\nmovie_id\nkeyword_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_keyword", attributes: [movie_keyword.movie_id, movie_keyword.keyword_id] })) }, TreeOp { name: "PROJECTION", timing: 0.0, cardinality: 7, extra_info: "#1\n", children: [TreeOp { name: "FILTER", timing: 6.8e-5, cardinality: 7, extra_info: "IN (...)", children: [TreeOp { name: "HASH_JOIN", timing: 0.002121, cardinality: 134170, extra_info: "MARK\nk.keyword = #0\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.000944, cardinality: 134170, extra_info: "keyword\n[INFOSEPARATOR]\nkeyword\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "keyword", attributes: [keyword.keyword, keyword.id] })) }, TreeOp { name: "CHUNK_SCAN", timing: 0.0, cardinality: 7, extra_info: "", children: [], attr: None }], attr: None }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mk.keyword_id, right_attr: k.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.040879, cardinality: 1875, extra_info: "INNER\nt.id = cc.movie_id\nt.id = mi_idx.movie_id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.029937, cardinality: 1381453, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\nid\ntitle\n[INFOSEPARATOR]\nFilters: production_year>2000 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.id, title.title] })) }, TreeOp { name: "HASH_JOIN", timing: 0.005991, cardinality: 23558, extra_info: "INNER\nmi_idx.movie_id = cc.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.001436, cardinality: 459925, extra_info: "INNER\nmi_idx.info_type_id = it2.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.006411, cardinality: 1380035, extra_info: "movie_info_idx\n[INFOSEPARATOR]\nmovie_id\ninfo_type_id\ninfo", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info_idx", attributes: [movie_info_idx.movie_id, movie_info_idx.info_type_id, movie_info_idx.info] })) }, TreeOp { name: "SEQ_SCAN", timing: 2e-6, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=votes AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi_idx.info_type_id, right_attr: it2.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.000352, cardinality: 24592, extra_info: "INNER\ncc.status_id = cct2.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000136, cardinality: 135086, extra_info: "INNER\ncc.subject_id = cct1.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 3.5e-5, cardinality: 135086, extra_info: "complete_cast\n[INFOSEPARATOR]\nmovie_id\nsubject_id\nstatus_id", children: [], attr: Some(Scan(ScanAttr { table_name: "complete_cast", attributes: [complete_cast.movie_id, complete_cast.subject_id, complete_cast.status_id] })) }, TreeOp { name: "PROJECTION", timing: 0.0, cardinality: 2, extra_info: "#1\n", children: [TreeOp { name: "FILTER", timing: 3e-6, cardinality: 2, extra_info: "(cct1.kind = 'cast' OR cct1.kind = 'crew')", children: [TreeOp { name: "SEQ_SCAN", timing: 2e-6, cardinality: 4, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.subject_id, right_attr: cct1.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 1e-6, cardinality: 1, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=complete+verified AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.status_id, right_attr: cct2.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi_idx.movie_id, right_attr: cc.movie_id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: cc.movie_id }, Equalizer { left_attr: t.id, right_attr: mi_idx.movie_id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mk.movie_id, right_attr: cc.movie_id }, Equalizer { left_attr: mk.movie_id, right_attr: t.id }, Equalizer { left_attr: mk.movie_id, right_attr: mi_idx.movie_id }] })) }
[(Name("mk"), [Name("keyword_id"), Name("movie_id")], []), (Name("k"), [Name("id")], []), (Node(TreeOp { name: "HASH_JOIN", timing: 0.040879, cardinality: 1875, extra_info: "INNER\nt.id = cc.movie_id\nt.id = mi_idx.movie_id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.029937, cardinality: 1381453, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\nid\ntitle\n[INFOSEPARATOR]\nFilters: production_year>2000 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.id, title.title] })) }, TreeOp { name: "HASH_JOIN", timing: 0.005991, cardinality: 23558, extra_info: "INNER\nmi_idx.movie_id = cc.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.001436, cardinality: 459925, extra_info: "INNER\nmi_idx.info_type_id = it2.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.006411, cardinality: 1380035, extra_info: "movie_info_idx\n[INFOSEPARATOR]\nmovie_id\ninfo_type_id\ninfo", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info_idx", attributes: [movie_info_idx.movie_id, movie_info_idx.info_type_id, movie_info_idx.info] })) }, TreeOp { name: "SEQ_SCAN", timing: 2e-6, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=votes AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi_idx.info_type_id, right_attr: it2.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.000352, cardinality: 24592, extra_info: "INNER\ncc.status_id = cct2.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000136, cardinality: 135086, extra_info: "INNER\ncc.subject_id = cct1.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 3.5e-5, cardinality: 135086, extra_info: "complete_cast\n[INFOSEPARATOR]\nmovie_id\nsubject_id\nstatus_id", children: [], attr: Some(Scan(ScanAttr { table_name: "complete_cast", attributes: [complete_cast.movie_id, complete_cast.subject_id, complete_cast.status_id] })) }, TreeOp { name: "PROJECTION", timing: 0.0, cardinality: 2, extra_info: "#1\n", children: [TreeOp { name: "FILTER", timing: 3e-6, cardinality: 2, extra_info: "(cct1.kind = 'cast' OR cct1.kind = 'crew')", children: [TreeOp { name: "SEQ_SCAN", timing: 2e-6, cardinality: 4, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.subject_id, right_attr: cct1.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 1e-6, cardinality: 1, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=complete+verified AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.status_id, right_attr: cct2.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi_idx.movie_id, right_attr: cc.movie_id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: cc.movie_id }, Equalizer { left_attr: t.id, right_attr: mi_idx.movie_id }] })) }), [Id(0)], [Id(1), Id(2), Id(3), Id(4), Id(5)])]
[Lookup([0 @ mk.keyword_id = 0 @ k.id), 1 @ mk.movie_id = 1 @ t.id)])]

TreeOp { name: "HASH_JOIN", timing: 0.002133, cardinality: 1161, extra_info: "INNER\nmi.movie_id = cc.movie_id\nmi.movie_id = t.id\nmi.movie_id = mk.movie_id\nmi.movie_id = mi_idx.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000282, cardinality: 72258, extra_info: "INNER\nmi.info_type_id = it1.id\n", children: [TreeOp { name: "FILTER", timing: 0.046669, cardinality: 73047, extra_info: "(mi.info = 'Horror' OR mi.info = 'Thriller')", children: [TreeOp { name: "SEQ_SCAN", timing: 0.084212, cardinality: 14835720, extra_info: "movie_info\n[INFOSEPARATOR]\ninfo\nmovie_id\ninfo_type_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info", attributes: [movie_info.info, movie_info.movie_id, movie_info.info_type_id] })) }], attr: Some(Filter) }, TreeOp { name: "SEQ_SCAN", timing: 1e-5, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=genres AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi.info_type_id, right_attr: it1.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.000423, cardinality: 2023, extra_info: "INNER\nmk.movie_id = cc.movie_id\nmk.movie_id = t.id\nmk.movie_id = mi_idx.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.004209, cardinality: 76714, extra_info: "INNER\nmk.keyword_id = k.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.000831, cardinality: 4523930, extra_info: "movie_keyword\n[INFOSEPARATOR]\nmovie_id\nkeyword_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_keyword", attributes: [movie_keyword.movie_id, movie_keyword.keyword_id] })) }, TreeOp { name: "PROJECTION", timing: 0.0, cardinality: 7, extra_info: "#1\n", children: [TreeOp { name: "FILTER", timing: 6.8e-5, cardinality: 7, extra_info: "IN (...)", children: [TreeOp { name: "HASH_JOIN", timing: 0.002121, cardinality: 134170, extra_info: "MARK\nk.keyword = #0\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.000944, cardinality: 134170, extra_info: "keyword\n[INFOSEPARATOR]\nkeyword\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "keyword", attributes: [keyword.keyword, keyword.id] })) }, TreeOp { name: "CHUNK_SCAN", timing: 0.0, cardinality: 7, extra_info: "", children: [], attr: None }], attr: None }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mk.keyword_id, right_attr: k.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.040879, cardinality: 1875, extra_info: "INNER\nt.id = cc.movie_id\nt.id = mi_idx.movie_id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.029937, cardinality: 1381453, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\nid\ntitle\n[INFOSEPARATOR]\nFilters: production_year>2000 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.id, title.title] })) }, TreeOp { name: "HASH_JOIN", timing: 0.005991, cardinality: 23558, extra_info: "INNER\nmi_idx.movie_id = cc.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.001436, cardinality: 459925, extra_info: "INNER\nmi_idx.info_type_id = it2.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.006411, cardinality: 1380035, extra_info: "movie_info_idx\n[INFOSEPARATOR]\nmovie_id\ninfo_type_id\ninfo", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info_idx", attributes: [movie_info_idx.movie_id, movie_info_idx.info_type_id, movie_info_idx.info] })) }, TreeOp { name: "SEQ_SCAN", timing: 2e-6, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=votes AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi_idx.info_type_id, right_attr: it2.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.000352, cardinality: 24592, extra_info: "INNER\ncc.status_id = cct2.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000136, cardinality: 135086, extra_info: "INNER\ncc.subject_id = cct1.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 3.5e-5, cardinality: 135086, extra_info: "complete_cast\n[INFOSEPARATOR]\nmovie_id\nsubject_id\nstatus_id", children: [], attr: Some(Scan(ScanAttr { table_name: "complete_cast", attributes: [complete_cast.movie_id, complete_cast.subject_id, complete_cast.status_id] })) }, TreeOp { name: "PROJECTION", timing: 0.0, cardinality: 2, extra_info: "#1\n", children: [TreeOp { name: "FILTER", timing: 3e-6, cardinality: 2, extra_info: "(cct1.kind = 'cast' OR cct1.kind = 'crew')", children: [TreeOp { name: "SEQ_SCAN", timing: 2e-6, cardinality: 4, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.subject_id, right_attr: cct1.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 1e-6, cardinality: 1, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=complete+verified AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.status_id, right_attr: cct2.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi_idx.movie_id, right_attr: cc.movie_id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: cc.movie_id }, Equalizer { left_attr: t.id, right_attr: mi_idx.movie_id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mk.movie_id, right_attr: cc.movie_id }, Equalizer { left_attr: mk.movie_id, right_attr: t.id }, Equalizer { left_attr: mk.movie_id, right_attr: mi_idx.movie_id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi.movie_id, right_attr: cc.movie_id }, Equalizer { left_attr: mi.movie_id, right_attr: t.id }, Equalizer { left_attr: mi.movie_id, right_attr: mk.movie_id }, Equalizer { left_attr: mi.movie_id, right_attr: mi_idx.movie_id }] })) }
[(Name("mi"), [Name("info_type_id"), Name("movie_id")], [Name("info")]), (Name("it1"), [Name("id")], []), (Node(TreeOp { name: "HASH_JOIN", timing: 0.000423, cardinality: 2023, extra_info: "INNER\nmk.movie_id = cc.movie_id\nmk.movie_id = t.id\nmk.movie_id = mi_idx.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.004209, cardinality: 76714, extra_info: "INNER\nmk.keyword_id = k.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.000831, cardinality: 4523930, extra_info: "movie_keyword\n[INFOSEPARATOR]\nmovie_id\nkeyword_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_keyword", attributes: [movie_keyword.movie_id, movie_keyword.keyword_id] })) }, TreeOp { name: "PROJECTION", timing: 0.0, cardinality: 7, extra_info: "#1\n", children: [TreeOp { name: "FILTER", timing: 6.8e-5, cardinality: 7, extra_info: "IN (...)", children: [TreeOp { name: "HASH_JOIN", timing: 0.002121, cardinality: 134170, extra_info: "MARK\nk.keyword = #0\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.000944, cardinality: 134170, extra_info: "keyword\n[INFOSEPARATOR]\nkeyword\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "keyword", attributes: [keyword.keyword, keyword.id] })) }, TreeOp { name: "CHUNK_SCAN", timing: 0.0, cardinality: 7, extra_info: "", children: [], attr: None }], attr: None }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mk.keyword_id, right_attr: k.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.040879, cardinality: 1875, extra_info: "INNER\nt.id = cc.movie_id\nt.id = mi_idx.movie_id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.029937, cardinality: 1381453, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\nid\ntitle\n[INFOSEPARATOR]\nFilters: production_year>2000 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.id, title.title] })) }, TreeOp { name: "HASH_JOIN", timing: 0.005991, cardinality: 23558, extra_info: "INNER\nmi_idx.movie_id = cc.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.001436, cardinality: 459925, extra_info: "INNER\nmi_idx.info_type_id = it2.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.006411, cardinality: 1380035, extra_info: "movie_info_idx\n[INFOSEPARATOR]\nmovie_id\ninfo_type_id\ninfo", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info_idx", attributes: [movie_info_idx.movie_id, movie_info_idx.info_type_id, movie_info_idx.info] })) }, TreeOp { name: "SEQ_SCAN", timing: 2e-6, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=votes AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi_idx.info_type_id, right_attr: it2.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.000352, cardinality: 24592, extra_info: "INNER\ncc.status_id = cct2.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000136, cardinality: 135086, extra_info: "INNER\ncc.subject_id = cct1.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 3.5e-5, cardinality: 135086, extra_info: "complete_cast\n[INFOSEPARATOR]\nmovie_id\nsubject_id\nstatus_id", children: [], attr: Some(Scan(ScanAttr { table_name: "complete_cast", attributes: [complete_cast.movie_id, complete_cast.subject_id, complete_cast.status_id] })) }, TreeOp { name: "PROJECTION", timing: 0.0, cardinality: 2, extra_info: "#1\n", children: [TreeOp { name: "FILTER", timing: 3e-6, cardinality: 2, extra_info: "(cct1.kind = 'cast' OR cct1.kind = 'crew')", children: [TreeOp { name: "SEQ_SCAN", timing: 2e-6, cardinality: 4, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.subject_id, right_attr: cct1.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 1e-6, cardinality: 1, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=complete+verified AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.status_id, right_attr: cct2.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi_idx.movie_id, right_attr: cc.movie_id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: cc.movie_id }, Equalizer { left_attr: t.id, right_attr: mi_idx.movie_id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mk.movie_id, right_attr: cc.movie_id }, Equalizer { left_attr: mk.movie_id, right_attr: t.id }, Equalizer { left_attr: mk.movie_id, right_attr: mi_idx.movie_id }] })) }), [Id(1)], [Id(0), Id(2), Id(3), Id(4), Id(5), Id(6)])]
[Lookup([0 @ mi.info_type_id = 0 @ it1.id), 1 @ mi.movie_id = 1 @ cc.movie_id)])]

TreeOp { name: "HASH_JOIN", timing: 0.006073, cardinality: 757, extra_info: "INNER\nci.movie_id = cc.movie_id\nci.movie_id = t.id\nci.movie_id = mk.movie_id\nci.movie_id = mi_idx.movie_id\nci.movie_id = mi.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.056245, cardinality: 558518, extra_info: "INNER\nci.person_id = n.id\n", children: [TreeOp { name: "PROJECTION", timing: 0.000115, cardinality: 1244716, extra_info: "#1\n#2\n", children: [TreeOp { name: "FILTER", timing: 0.022452, cardinality: 1244716, extra_info: "IN (...)", children: [TreeOp { name: "HASH_JOIN", timing: 0.253403, cardinality: 36244344, extra_info: "MARK\nci.note = #0\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.109342, cardinality: 36244344, extra_info: "cast_info\n[INFOSEPARATOR]\nnote\nmovie_id\nperson_id", children: [], attr: Some(Scan(ScanAttr { table_name: "cast_info", attributes: [cast_info.note, cast_info.movie_id, cast_info.person_id] })) }, TreeOp { name: "CHUNK_SCAN", timing: 0.0, cardinality: 5, extra_info: "", children: [], attr: None }], attr: None }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1, .#2] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.015524, cardinality: 1739579, extra_info: "name\n[INFOSEPARATOR]\ngender\nid\nname\n[INFOSEPARATOR]\nFilters: gender=m AND gender IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "name", attributes: [name.gender, name.id, name.name] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: ci.person_id, right_attr: n.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.002133, cardinality: 1161, extra_info: "INNER\nmi.movie_id = cc.movie_id\nmi.movie_id = t.id\nmi.movie_id = mk.movie_id\nmi.movie_id = mi_idx.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000282, cardinality: 72258, extra_info: "INNER\nmi.info_type_id = it1.id\n", children: [TreeOp { name: "FILTER", timing: 0.046669, cardinality: 73047, extra_info: "(mi.info = 'Horror' OR mi.info = 'Thriller')", children: [TreeOp { name: "SEQ_SCAN", timing: 0.084212, cardinality: 14835720, extra_info: "movie_info\n[INFOSEPARATOR]\ninfo\nmovie_id\ninfo_type_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info", attributes: [movie_info.info, movie_info.movie_id, movie_info.info_type_id] })) }], attr: Some(Filter) }, TreeOp { name: "SEQ_SCAN", timing: 1e-5, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=genres AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi.info_type_id, right_attr: it1.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.000423, cardinality: 2023, extra_info: "INNER\nmk.movie_id = cc.movie_id\nmk.movie_id = t.id\nmk.movie_id = mi_idx.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.004209, cardinality: 76714, extra_info: "INNER\nmk.keyword_id = k.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.000831, cardinality: 4523930, extra_info: "movie_keyword\n[INFOSEPARATOR]\nmovie_id\nkeyword_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_keyword", attributes: [movie_keyword.movie_id, movie_keyword.keyword_id] })) }, TreeOp { name: "PROJECTION", timing: 0.0, cardinality: 7, extra_info: "#1\n", children: [TreeOp { name: "FILTER", timing: 6.8e-5, cardinality: 7, extra_info: "IN (...)", children: [TreeOp { name: "HASH_JOIN", timing: 0.002121, cardinality: 134170, extra_info: "MARK\nk.keyword = #0\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.000944, cardinality: 134170, extra_info: "keyword\n[INFOSEPARATOR]\nkeyword\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "keyword", attributes: [keyword.keyword, keyword.id] })) }, TreeOp { name: "CHUNK_SCAN", timing: 0.0, cardinality: 7, extra_info: "", children: [], attr: None }], attr: None }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mk.keyword_id, right_attr: k.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.040879, cardinality: 1875, extra_info: "INNER\nt.id = cc.movie_id\nt.id = mi_idx.movie_id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.029937, cardinality: 1381453, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\nid\ntitle\n[INFOSEPARATOR]\nFilters: production_year>2000 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.id, title.title] })) }, TreeOp { name: "HASH_JOIN", timing: 0.005991, cardinality: 23558, extra_info: "INNER\nmi_idx.movie_id = cc.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.001436, cardinality: 459925, extra_info: "INNER\nmi_idx.info_type_id = it2.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.006411, cardinality: 1380035, extra_info: "movie_info_idx\n[INFOSEPARATOR]\nmovie_id\ninfo_type_id\ninfo", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info_idx", attributes: [movie_info_idx.movie_id, movie_info_idx.info_type_id, movie_info_idx.info] })) }, TreeOp { name: "SEQ_SCAN", timing: 2e-6, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=votes AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi_idx.info_type_id, right_attr: it2.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.000352, cardinality: 24592, extra_info: "INNER\ncc.status_id = cct2.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000136, cardinality: 135086, extra_info: "INNER\ncc.subject_id = cct1.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 3.5e-5, cardinality: 135086, extra_info: "complete_cast\n[INFOSEPARATOR]\nmovie_id\nsubject_id\nstatus_id", children: [], attr: Some(Scan(ScanAttr { table_name: "complete_cast", attributes: [complete_cast.movie_id, complete_cast.subject_id, complete_cast.status_id] })) }, TreeOp { name: "PROJECTION", timing: 0.0, cardinality: 2, extra_info: "#1\n", children: [TreeOp { name: "FILTER", timing: 3e-6, cardinality: 2, extra_info: "(cct1.kind = 'cast' OR cct1.kind = 'crew')", children: [TreeOp { name: "SEQ_SCAN", timing: 2e-6, cardinality: 4, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.subject_id, right_attr: cct1.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 1e-6, cardinality: 1, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=complete+verified AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.status_id, right_attr: cct2.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi_idx.movie_id, right_attr: cc.movie_id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: cc.movie_id }, Equalizer { left_attr: t.id, right_attr: mi_idx.movie_id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mk.movie_id, right_attr: cc.movie_id }, Equalizer { left_attr: mk.movie_id, right_attr: t.id }, Equalizer { left_attr: mk.movie_id, right_attr: mi_idx.movie_id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi.movie_id, right_attr: cc.movie_id }, Equalizer { left_attr: mi.movie_id, right_attr: t.id }, Equalizer { left_attr: mi.movie_id, right_attr: mk.movie_id }, Equalizer { left_attr: mi.movie_id, right_attr: mi_idx.movie_id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: ci.movie_id, right_attr: cc.movie_id }, Equalizer { left_attr: ci.movie_id, right_attr: t.id }, Equalizer { left_attr: ci.movie_id, right_attr: mk.movie_id }, Equalizer { left_attr: ci.movie_id, right_attr: mi_idx.movie_id }, Equalizer { left_attr: ci.movie_id, right_attr: mi.movie_id }] })) }
[(Name("ci"), [Name("person_id"), Name("movie_id")], []), (Name("n"), [Name("id")], [Name("name")]), (Node(TreeOp { name: "HASH_JOIN", timing: 0.002133, cardinality: 1161, extra_info: "INNER\nmi.movie_id = cc.movie_id\nmi.movie_id = t.id\nmi.movie_id = mk.movie_id\nmi.movie_id = mi_idx.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000282, cardinality: 72258, extra_info: "INNER\nmi.info_type_id = it1.id\n", children: [TreeOp { name: "FILTER", timing: 0.046669, cardinality: 73047, extra_info: "(mi.info = 'Horror' OR mi.info = 'Thriller')", children: [TreeOp { name: "SEQ_SCAN", timing: 0.084212, cardinality: 14835720, extra_info: "movie_info\n[INFOSEPARATOR]\ninfo\nmovie_id\ninfo_type_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info", attributes: [movie_info.info, movie_info.movie_id, movie_info.info_type_id] })) }], attr: Some(Filter) }, TreeOp { name: "SEQ_SCAN", timing: 1e-5, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=genres AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi.info_type_id, right_attr: it1.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.000423, cardinality: 2023, extra_info: "INNER\nmk.movie_id = cc.movie_id\nmk.movie_id = t.id\nmk.movie_id = mi_idx.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.004209, cardinality: 76714, extra_info: "INNER\nmk.keyword_id = k.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.000831, cardinality: 4523930, extra_info: "movie_keyword\n[INFOSEPARATOR]\nmovie_id\nkeyword_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_keyword", attributes: [movie_keyword.movie_id, movie_keyword.keyword_id] })) }, TreeOp { name: "PROJECTION", timing: 0.0, cardinality: 7, extra_info: "#1\n", children: [TreeOp { name: "FILTER", timing: 6.8e-5, cardinality: 7, extra_info: "IN (...)", children: [TreeOp { name: "HASH_JOIN", timing: 0.002121, cardinality: 134170, extra_info: "MARK\nk.keyword = #0\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.000944, cardinality: 134170, extra_info: "keyword\n[INFOSEPARATOR]\nkeyword\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "keyword", attributes: [keyword.keyword, keyword.id] })) }, TreeOp { name: "CHUNK_SCAN", timing: 0.0, cardinality: 7, extra_info: "", children: [], attr: None }], attr: None }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mk.keyword_id, right_attr: k.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.040879, cardinality: 1875, extra_info: "INNER\nt.id = cc.movie_id\nt.id = mi_idx.movie_id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.029937, cardinality: 1381453, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\nid\ntitle\n[INFOSEPARATOR]\nFilters: production_year>2000 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.id, title.title] })) }, TreeOp { name: "HASH_JOIN", timing: 0.005991, cardinality: 23558, extra_info: "INNER\nmi_idx.movie_id = cc.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.001436, cardinality: 459925, extra_info: "INNER\nmi_idx.info_type_id = it2.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.006411, cardinality: 1380035, extra_info: "movie_info_idx\n[INFOSEPARATOR]\nmovie_id\ninfo_type_id\ninfo", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info_idx", attributes: [movie_info_idx.movie_id, movie_info_idx.info_type_id, movie_info_idx.info] })) }, TreeOp { name: "SEQ_SCAN", timing: 2e-6, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=votes AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi_idx.info_type_id, right_attr: it2.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.000352, cardinality: 24592, extra_info: "INNER\ncc.status_id = cct2.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000136, cardinality: 135086, extra_info: "INNER\ncc.subject_id = cct1.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 3.5e-5, cardinality: 135086, extra_info: "complete_cast\n[INFOSEPARATOR]\nmovie_id\nsubject_id\nstatus_id", children: [], attr: Some(Scan(ScanAttr { table_name: "complete_cast", attributes: [complete_cast.movie_id, complete_cast.subject_id, complete_cast.status_id] })) }, TreeOp { name: "PROJECTION", timing: 0.0, cardinality: 2, extra_info: "#1\n", children: [TreeOp { name: "FILTER", timing: 3e-6, cardinality: 2, extra_info: "(cct1.kind = 'cast' OR cct1.kind = 'crew')", children: [TreeOp { name: "SEQ_SCAN", timing: 2e-6, cardinality: 4, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.subject_id, right_attr: cct1.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 1e-6, cardinality: 1, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=complete+verified AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.status_id, right_attr: cct2.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi_idx.movie_id, right_attr: cc.movie_id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: cc.movie_id }, Equalizer { left_attr: t.id, right_attr: mi_idx.movie_id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mk.movie_id, right_attr: cc.movie_id }, Equalizer { left_attr: mk.movie_id, right_attr: t.id }, Equalizer { left_attr: mk.movie_id, right_attr: mi_idx.movie_id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi.movie_id, right_attr: cc.movie_id }, Equalizer { left_attr: mi.movie_id, right_attr: t.id }, Equalizer { left_attr: mi.movie_id, right_attr: mk.movie_id }, Equalizer { left_attr: mi.movie_id, right_attr: mi_idx.movie_id }] })) }), [Id(1)], [Id(0), Id(2), Id(3), Id(4), Id(5), Id(6), Id(7), Id(8)])]
[Lookup([0 @ ci.person_id = 0 @ n.id), 1 @ ci.movie_id = 1 @ t.id)])]
