let interm0_trie0 = sum(<x0, n_trie1> in n_trie0) {
	if (x0 in pi_trie0) {
		let pi_trie1 = pi_trie0(x0)
		sum(<x1, pi_trie2> in pi_trie1) {
			if (x1 in it_trie0) {
				let it_trie1 = it_trie0(x1)
				sum(<n_off, _> in n_trie1) {
					sum(<pi_off, _> in pi_trie2) {
						{ <n_id[n_off], n_name[n_off], pi_info_type_id[pi_off], pi_info[pi_off]> -> true }
					}
				}
			}
		}
	}
}
----------------------------------------------------------------------------------------------------
let interm1_trie0 = sum(<x0, t_trie1> in t_trie0) {
	if (x0 in ml_trie0) {
		let ml_trie1 = ml_trie0(x0)
		sum(<x1, ml_trie2> in ml_trie1) {
			if (x1 in lt_trie0) {
				let lt_trie1 = lt_trie0(x1)
				sum(<t_off, _> in t_trie1) {
					sum(<ml_off, _> in ml_trie2) {
						{ <t_id[t_off], ml_link_type_id[ml_off]> -> true }
					}
				}
			}
		}
	}
}
----------------------------------------------------------------------------------------------------
sum(<x0, ci_trie1> in ci_trie0) {
	if (x0 in interm1_trie0) {
		let interm1_trie1 = interm1_trie0(x0)
		sum(<x1, ci_trie2> in ci_trie1) {
			if (x1 in interm0_trie0 && x1 in an_trie0) {
				let interm0_trie1 = interm0_trie0(x1)
				let an_trie1 = an_trie0(x1)
				let mn_interm1_col1 = sum(<interm1_off, _> in interm1_trie1) { interm1_col1[interm1_off] }
				let mn_interm0_col1 = sum(<interm0_off, _> in interm0_trie1) { interm0_col1[interm0_off] }
				let mn_interm0_col2 = sum(<interm0_off, _> in interm0_trie1) { interm0_col2[interm0_off] }
				let mn_interm0_col3 = sum(<interm0_off, _> in interm0_trie1) { interm0_col3[interm0_off] }
			}
		}
	}
}
----------------------------------------------------------------------------------------------------
