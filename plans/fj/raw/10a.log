
TreeOp { name: "HASH_JOIN", timing: 0.002937, cardinality: 4539, extra_info: "INNER\nmc.company_id = cn.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.001996, cardinality: 829639, extra_info: "INNER\nmc.company_type_id = ct.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.062765, cardinality: 829639, extra_info: "INNER\nmc.movie_id = t.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.000879, cardinality: 2609129, extra_info: "movie_companies\n[INFOSEPARATOR]\nmovie_id\ncompany_id\ncompany_type_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_companies", attributes: [movie_companies.movie_id, movie_companies.company_id, movie_companies.company_type_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.034206, cardinality: 1012920, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\nid\ntitle\n[INFOSEPARATOR]\nFilters: production_year>2005 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.id, title.title] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.movie_id, right_attr: t.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 5e-6, cardinality: 4, extra_info: "company_type\n[INFOSEPARATOR]\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "company_type", attributes: [company_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.company_type_id, right_attr: ct.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.001716, cardinality: 1361, extra_info: "company_name\n[INFOSEPARATOR]\ncountry_code\nid\n[INFOSEPARATOR]\nFilters: country_code=[ru] AND country_code IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "company_name", attributes: [company_name.country_code, company_name.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.company_id, right_attr: cn.id }] })) }
[(Name("mc"), [Name("movie_id"), Name("company_type_id"), Name("company_id")], []), (Name("t"), [Name("id")], [Name("title")]), (Name("ct"), [Name("id")], []), (Name("cn"), [Name("id")], [])]
[Lookup([1 @ mc.company_type_id = 1 @ ct.id), 2 @ mc.company_id = 2 @ cn.id), 0 @ mc.movie_id = 0 @ t.id)])]

TreeOp { name: "HASH_JOIN", timing: 0.09107, cardinality: 104, extra_info: "INNER\nci.person_role_id = chn.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000871, cardinality: 112, extra_info: "INNER\nci.movie_id = t.id\nci.movie_id = mc.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000129, cardinality: 25874, extra_info: "INNER\nci.role_id = rt.id\n", children: [TreeOp { name: "PROJECTION", timing: 1e-5, cardinality: 32288, extra_info: "#1\n#2\n#3\n", children: [TreeOp { name: "FILTER", timing: 0.294617, cardinality: 32288, extra_info: "(contains(ci.note, '(voice)') AND contains(ci.note, '(uncredited)'))", children: [TreeOp { name: "SEQ_SCAN", timing: 0.115183, cardinality: 36244344, extra_info: "cast_info\n[INFOSEPARATOR]\nnote\nmovie_id\nperson_role_id\nrole_id", children: [], attr: Some(Scan(ScanAttr { table_name: "cast_info", attributes: [cast_info.note, cast_info.movie_id, cast_info.person_role_id, cast_info.role_id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1, .#2, .#3] })) }, TreeOp { name: "SEQ_SCAN", timing: 2.6e-5, cardinality: 1, extra_info: "role_type\n[INFOSEPARATOR]\nrole\nid\n[INFOSEPARATOR]\nFilters: role=actor AND role IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "role_type", attributes: [role_type.role, role_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: ci.role_id, right_attr: rt.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.002937, cardinality: 4539, extra_info: "INNER\nmc.company_id = cn.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.001996, cardinality: 829639, extra_info: "INNER\nmc.company_type_id = ct.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.062765, cardinality: 829639, extra_info: "INNER\nmc.movie_id = t.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.000879, cardinality: 2609129, extra_info: "movie_companies\n[INFOSEPARATOR]\nmovie_id\ncompany_id\ncompany_type_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_companies", attributes: [movie_companies.movie_id, movie_companies.company_id, movie_companies.company_type_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.034206, cardinality: 1012920, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\nid\ntitle\n[INFOSEPARATOR]\nFilters: production_year>2005 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.id, title.title] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.movie_id, right_attr: t.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 5e-6, cardinality: 4, extra_info: "company_type\n[INFOSEPARATOR]\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "company_type", attributes: [company_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.company_type_id, right_attr: ct.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.001716, cardinality: 1361, extra_info: "company_name\n[INFOSEPARATOR]\ncountry_code\nid\n[INFOSEPARATOR]\nFilters: country_code=[ru] AND country_code IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "company_name", attributes: [company_name.country_code, company_name.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.company_id, right_attr: cn.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: ci.movie_id, right_attr: t.id }, Equalizer { left_attr: ci.movie_id, right_attr: mc.movie_id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.025499, cardinality: 3140339, extra_info: "char_name\n[INFOSEPARATOR]\nid\nname", children: [], attr: Some(Scan(ScanAttr { table_name: "char_name", attributes: [char_name.id, char_name.name] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: ci.person_role_id, right_attr: chn.id }] })) }
[(Name("ci"), [Name("role_id"), Name("movie_id"), Name("person_role_id")], []), (Name("rt"), [Name("id")], []), (Node(TreeOp { name: "HASH_JOIN", timing: 0.002937, cardinality: 4539, extra_info: "INNER\nmc.company_id = cn.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.001996, cardinality: 829639, extra_info: "INNER\nmc.company_type_id = ct.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.062765, cardinality: 829639, extra_info: "INNER\nmc.movie_id = t.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.000879, cardinality: 2609129, extra_info: "movie_companies\n[INFOSEPARATOR]\nmovie_id\ncompany_id\ncompany_type_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_companies", attributes: [movie_companies.movie_id, movie_companies.company_id, movie_companies.company_type_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.034206, cardinality: 1012920, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\nid\ntitle\n[INFOSEPARATOR]\nFilters: production_year>2005 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.id, title.title] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.movie_id, right_attr: t.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 5e-6, cardinality: 4, extra_info: "company_type\n[INFOSEPARATOR]\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "company_type", attributes: [company_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.company_type_id, right_attr: ct.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.001716, cardinality: 1361, extra_info: "company_name\n[INFOSEPARATOR]\ncountry_code\nid\n[INFOSEPARATOR]\nFilters: country_code=[ru] AND country_code IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "company_name", attributes: [company_name.country_code, company_name.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.company_id, right_attr: cn.id }] })) }), [Id(0)], [Id(1), Id(2), Id(3)]), (Name("chn"), [Name("id")], [Name("name")])]
[Lookup([0 @ ci.role_id = 0 @ rt.id), 1 @ ci.movie_id = 1 @ mc.movie_id), 2 @ ci.person_role_id = 2 @ chn.id)])]
