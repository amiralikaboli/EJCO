let mk = load[{<id: int, movie_id: int, keyword_id: int> -> int}]("/Users/s2522996/Documents/free-join/data/imdb_csv/movie_keyword.csv")
let t = load[{<id: int, title: string, imdb_index: string, kind_id: int, production_year: int, imdb_id: string, phonetic_code: string, episode_of_id: int, season_nr: int, episode_nr: int, series_years: string, md5sum: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/14b/t.csv")
let mi_idx = load[{<id: int, movie_id: int, info_type_id: int, info: string, note: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/14b/mi_idx.csv")
let mi = load[{<id: int, movie_id: int, info_type_id: int, info: string, note: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/14b/mi.csv")
let kt = load[{<id: int, kind: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/14b/kt.csv")
let k = load[{<id: int, keyword: string, phonetic_code: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/14b/k.csv")
let it2 = load[{<id: int, info: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/14b/it2.csv")
let it1 = load[{<id: int, info: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/14b/it1.csv")


let interm0_trie0 = sum(<x0, mk_trie1> <- mk_trie0)
	let t_trie1 = t_trie0(x0) in
	let mi_idx_trie1 = mi_idx_trie0(x0) in
	if (t_trie1 != {} && mi_idx_trie1 != {}) then
		sum(<mk_tuple, _> <- mk_trie1)
			sum(<t_tuple, _> <- t_trie1)
				sum(<mi_idx_tuple, _> <- mi_idx_trie1)
					{ <col0=mk_tuple.movie_id, col1=mk_tuple.keyword_id, col2=t_tuple.title, col3=t_tuple.kind_id, col4=mi_idx_tuple.info_type_id, col5=mi_idx_tuple.info> -> true }
	else
		{}
in


sum(<x0, mi_trie1> <- mi_trie0)
	let interm0_trie1 = interm0_trie0(x0) in
	if (interm0_trie1 != {}) then
		sum(<x1, interm0_trie2> <- interm0_trie1)
			let kt_trie1 = kt_trie0(x1) in
			if (kt_trie1 != {}) then
				sum(<x2, interm0_trie3> <- interm0_trie2)
					let k_trie1 = k_trie0(x2) in
					if (k_trie1 != {}) then
						sum(<x3, interm0_trie4> <- interm0_trie3)
							let it2_trie1 = it2_trie0(x3) in
							if (it2_trie1 != {}) then
								sum(<x4, mi_trie2> <- mi_trie1)
									let it1_trie1 = it1_trie0(x4) in
									if (it1_trie1 != {}) then
										let mn_interm0_col2 = sum(<interm0_tuple, _> <- interm0_trie4) interm0_tuple.col2 in
										let mn_interm0_col5 = sum(<interm0_tuple, _> <- interm0_trie4) interm0_tuple.col5 in
										<col5=mn_interm0_col2, col6=mn_interm0_col5>
									else
										<col5={}, col6={}>
							else
								{}
					else
						{}
			else
				{}
	else
		{}


