let t = load[{<id: int, title: string, imdb_index: string, kind_id: int, production_year: int, imdb_id: string, phonetic_code: string, episode_of_id: int, season_nr: int, episode_nr: int, series_years: string, md5sum: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/12a/t.csv")
let mi_idx = load[{<id: int, movie_id: int, info_type_id: int, info: string, note: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/12a/mi_idx.csv")
let mi = load[{<id: int, movie_id: int, info_type_id: int, info: string, note: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/12a/mi.csv")
let mc = load[{<id: int, movie_id: int, company_id: int, company_type_id: int, note: string> -> int}]("/Users/s2522996/Documents/free-join/data/imdb_csv/movie_companies.csv")
let it2 = load[{<id: int, info: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/12a/it2.csv")
let it1 = load[{<id: int, info: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/12a/it1.csv")
let ct = load[{<id: int, kind: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/12a/ct.csv")
let cn = load[{<id: int, name: string, country_code: string, imdb_id: string, name_pcode_nf: string, name_pcode_sf: string, md5sum: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/12a/cn.csv")

let t_trie0 = sum(<t_tuple, _> <- t) { t_tuple.id -> t_tuple } in
let mi_idx_trie0 = sum(<mi_idx_tuple, _> <- mi_idx) { mi_idx_tuple.movie_id -> mi_idx_tuple } in
let mi_trie0 = sum(<mi_tuple, _> <- mi) { mi_tuple.movie_id -> { mi_tuple.info_type_id -> mi_tuple } } in
let mc_trie0 = sum(<mc_tuple, _> <- mc) { mc_tuple.movie_id -> { mc_tuple.company_type_id -> { mc_tuple.company_id -> mc_tuple } } } in
let it2_trie0 = sum(<it2_tuple, _> <- it2) { it2_tuple.id -> it2_tuple } in
let it1_trie0 = sum(<it1_tuple, _> <- it1) { it1_tuple.id -> it1_tuple } in
let ct_trie0 = sum(<ct_tuple, _> <- ct) { ct_tuple.id -> ct_tuple } in
let cn_trie0 = sum(<cn_tuple, _> <- cn) { cn_tuple.id -> cn_tuple } in

let interm0 = sum(<x0, t_trie1> <- t_trie0)
	let mi_idx_trie1 = mi_idx_trie0(x0) in
	if (mi_idx_trie1 != {}) then
		sum(<t_tuple, _> <- t_trie1)
			sum(<mi_idx_tuple, _> <- mi_idx_trie1)
				{ <col0=t_tuple.id, col1=t_tuple.title, col2=mi_idx_tuple.info_type_id, col3=mi_idx_tuple.info> -> true }
	else
		{}
in

sum(<x0, mi_trie1> <- mi_trie0)
	let interm0_trie1 = interm0_trie0(x0) in
	let mc_trie1 = mc_trie0(x0) in
	if (interm0_trie1 != {} && mc_trie1 != {}) then
		sum(<x1, interm0_trie2> <- interm0_trie1)
			let it2_trie1 = it2_trie0(x1) in
			if (it2_trie1 != {}) then
				sum(<x2, mi_trie2> <- mi_trie1)
					let it1_trie1 = it1_trie0(x2) in
					if (it1_trie1 != {}) then
						sum(<x3, mc_trie2> <- mc_trie1)
							let ct_trie1 = ct_trie0(x3) in
							if (ct_trie1 != {}) then
								sum(<x4, mc_trie3> <- mc_trie2)
									let cn_trie1 = cn_trie0(x4) in
									if (cn_trie1 != {}) then
										let mn_interm0_col1 = sum(<interm0_tuple, _> <- interm0_trie2) interm0_tuple.col1 in
										let mn_interm0_col3 = sum(<interm0_tuple, _> <- interm0_trie2) interm0_tuple.col3 in
										let mn_cn_name = sum(<cn_tuple, _> <- cn_trie1) cn_tuple.name in
										<col3=mn_interm0_col1, col4=mn_interm0_col3, col7=mn_cn_name>
									else
										<col3={}, col4={}, col7={}>
							else
								{}
					else
						{}
			else
				{}
	else
		{}

