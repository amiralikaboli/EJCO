
TreeOp { name: "HASH_JOIN", timing: 0.000287, cardinality: 17879, extra_info: "INNER\ncc.status_id = cct2.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000145, cardinality: 85941, extra_info: "INNER\ncc.subject_id = cct1.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 3.9e-5, cardinality: 135086, extra_info: "complete_cast\n[INFOSEPARATOR]\nmovie_id\nsubject_id\nstatus_id", children: [], attr: Some(Scan(ScanAttr { table_name: "complete_cast", attributes: [complete_cast.movie_id, complete_cast.subject_id, complete_cast.status_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 4e-6, cardinality: 1, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=cast AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.subject_id, right_attr: cct1.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 1e-6, cardinality: 1, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=complete+verified AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.status_id, right_attr: cct2.id }] })) }
[(Name("cc"), [Name("subject_id"), Name("status_id")], [Name("movie_id")]), (Name("cct1"), [Name("id")], []), (Name("cct2"), [Name("id")], [])]
[Lookup([0 @ cc.subject_id = 0 @ cct1.id), 1 @ cc.status_id = 1 @ cct2.id)])]

TreeOp { name: "HASH_JOIN", timing: 0.00968, cardinality: 1996, extra_info: "INNER\nt.id = cc.movie_id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.033412, cardinality: 1042800, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\nid\ntitle\n[INFOSEPARATOR]\nFilters: production_year>=2000 AND production_year<=2010 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.id, title.title] })) }, TreeOp { name: "HASH_JOIN", timing: 0.000287, cardinality: 17879, extra_info: "INNER\ncc.status_id = cct2.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000145, cardinality: 85941, extra_info: "INNER\ncc.subject_id = cct1.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 3.9e-5, cardinality: 135086, extra_info: "complete_cast\n[INFOSEPARATOR]\nmovie_id\nsubject_id\nstatus_id", children: [], attr: Some(Scan(ScanAttr { table_name: "complete_cast", attributes: [complete_cast.movie_id, complete_cast.subject_id, complete_cast.status_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 4e-6, cardinality: 1, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=cast AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.subject_id, right_attr: cct1.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 1e-6, cardinality: 1, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=complete+verified AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.status_id, right_attr: cct2.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: cc.movie_id }] })) }
[(Name("t"), [Name("id")], [Name("title")]), (Node(TreeOp { name: "HASH_JOIN", timing: 0.000287, cardinality: 17879, extra_info: "INNER\ncc.status_id = cct2.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000145, cardinality: 85941, extra_info: "INNER\ncc.subject_id = cct1.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 3.9e-5, cardinality: 135086, extra_info: "complete_cast\n[INFOSEPARATOR]\nmovie_id\nsubject_id\nstatus_id", children: [], attr: Some(Scan(ScanAttr { table_name: "complete_cast", attributes: [complete_cast.movie_id, complete_cast.subject_id, complete_cast.status_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 4e-6, cardinality: 1, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=cast AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.subject_id, right_attr: cct1.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 1e-6, cardinality: 1, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=complete+verified AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.status_id, right_attr: cct2.id }] })) }), [Id(2)], [Id(0), Id(1)])]
[Lookup([0 @ t.id = 0 @ cc.movie_id)])]

TreeOp { name: "HASH_JOIN", timing: 0.014492, cardinality: 7124, extra_info: "INNER\nmc.movie_id = cc.movie_id\nmc.movie_id = t.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.008254, cardinality: 1153798, extra_info: "INNER\nmc.company_id = cn.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.000548, cardinality: 2609129, extra_info: "movie_companies\n[INFOSEPARATOR]\nmovie_id\ncompany_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_companies", attributes: [movie_companies.movie_id, movie_companies.company_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.002241, cardinality: 84843, extra_info: "company_name\n[INFOSEPARATOR]\ncountry_code\nid\n[INFOSEPARATOR]\nFilters: country_code=[us] AND country_code IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "company_name", attributes: [company_name.country_code, company_name.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.company_id, right_attr: cn.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.00968, cardinality: 1996, extra_info: "INNER\nt.id = cc.movie_id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.033412, cardinality: 1042800, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\nid\ntitle\n[INFOSEPARATOR]\nFilters: production_year>=2000 AND production_year<=2010 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.id, title.title] })) }, TreeOp { name: "HASH_JOIN", timing: 0.000287, cardinality: 17879, extra_info: "INNER\ncc.status_id = cct2.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000145, cardinality: 85941, extra_info: "INNER\ncc.subject_id = cct1.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 3.9e-5, cardinality: 135086, extra_info: "complete_cast\n[INFOSEPARATOR]\nmovie_id\nsubject_id\nstatus_id", children: [], attr: Some(Scan(ScanAttr { table_name: "complete_cast", attributes: [complete_cast.movie_id, complete_cast.subject_id, complete_cast.status_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 4e-6, cardinality: 1, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=cast AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.subject_id, right_attr: cct1.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 1e-6, cardinality: 1, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=complete+verified AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.status_id, right_attr: cct2.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: cc.movie_id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.movie_id, right_attr: cc.movie_id }, Equalizer { left_attr: mc.movie_id, right_attr: t.id }] })) }
[(Name("mc"), [Name("company_id"), Name("movie_id")], []), (Name("cn"), [Name("id")], []), (Node(TreeOp { name: "HASH_JOIN", timing: 0.00968, cardinality: 1996, extra_info: "INNER\nt.id = cc.movie_id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.033412, cardinality: 1042800, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\nid\ntitle\n[INFOSEPARATOR]\nFilters: production_year>=2000 AND production_year<=2010 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.id, title.title] })) }, TreeOp { name: "HASH_JOIN", timing: 0.000287, cardinality: 17879, extra_info: "INNER\ncc.status_id = cct2.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000145, cardinality: 85941, extra_info: "INNER\ncc.subject_id = cct1.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 3.9e-5, cardinality: 135086, extra_info: "complete_cast\n[INFOSEPARATOR]\nmovie_id\nsubject_id\nstatus_id", children: [], attr: Some(Scan(ScanAttr { table_name: "complete_cast", attributes: [complete_cast.movie_id, complete_cast.subject_id, complete_cast.status_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 4e-6, cardinality: 1, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=cast AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.subject_id, right_attr: cct1.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 1e-6, cardinality: 1, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=complete+verified AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.status_id, right_attr: cct2.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: cc.movie_id }] })) }), [Id(0)], [Id(1), Id(2), Id(3)])]
[Lookup([0 @ mc.company_id = 0 @ cn.id), 1 @ mc.movie_id = 1 @ t.id)])]

TreeOp { name: "HASH_JOIN", timing: 0.000183, cardinality: 92, extra_info: "INNER\nmk.movie_id = cc.movie_id\nmk.movie_id = t.id\nmk.movie_id = mc.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.003635, cardinality: 414, extra_info: "INNER\nmk.keyword_id = k.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.000786, cardinality: 4523930, extra_info: "movie_keyword\n[INFOSEPARATOR]\nmovie_id\nkeyword_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_keyword", attributes: [movie_keyword.movie_id, movie_keyword.keyword_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.001389, cardinality: 1, extra_info: "keyword\n[INFOSEPARATOR]\nkeyword\nid\n[INFOSEPARATOR]\nFilters: keyword=computer-animation AND keyword IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "keyword", attributes: [keyword.keyword, keyword.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mk.keyword_id, right_attr: k.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.014492, cardinality: 7124, extra_info: "INNER\nmc.movie_id = cc.movie_id\nmc.movie_id = t.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.008254, cardinality: 1153798, extra_info: "INNER\nmc.company_id = cn.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.000548, cardinality: 2609129, extra_info: "movie_companies\n[INFOSEPARATOR]\nmovie_id\ncompany_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_companies", attributes: [movie_companies.movie_id, movie_companies.company_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.002241, cardinality: 84843, extra_info: "company_name\n[INFOSEPARATOR]\ncountry_code\nid\n[INFOSEPARATOR]\nFilters: country_code=[us] AND country_code IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "company_name", attributes: [company_name.country_code, company_name.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.company_id, right_attr: cn.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.00968, cardinality: 1996, extra_info: "INNER\nt.id = cc.movie_id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.033412, cardinality: 1042800, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\nid\ntitle\n[INFOSEPARATOR]\nFilters: production_year>=2000 AND production_year<=2010 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.id, title.title] })) }, TreeOp { name: "HASH_JOIN", timing: 0.000287, cardinality: 17879, extra_info: "INNER\ncc.status_id = cct2.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000145, cardinality: 85941, extra_info: "INNER\ncc.subject_id = cct1.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 3.9e-5, cardinality: 135086, extra_info: "complete_cast\n[INFOSEPARATOR]\nmovie_id\nsubject_id\nstatus_id", children: [], attr: Some(Scan(ScanAttr { table_name: "complete_cast", attributes: [complete_cast.movie_id, complete_cast.subject_id, complete_cast.status_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 4e-6, cardinality: 1, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=cast AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.subject_id, right_attr: cct1.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 1e-6, cardinality: 1, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=complete+verified AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.status_id, right_attr: cct2.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: cc.movie_id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.movie_id, right_attr: cc.movie_id }, Equalizer { left_attr: mc.movie_id, right_attr: t.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mk.movie_id, right_attr: cc.movie_id }, Equalizer { left_attr: mk.movie_id, right_attr: t.id }, Equalizer { left_attr: mk.movie_id, right_attr: mc.movie_id }] })) }
[(Name("mk"), [Name("keyword_id"), Name("movie_id")], []), (Name("k"), [Name("id")], []), (Node(TreeOp { name: "HASH_JOIN", timing: 0.014492, cardinality: 7124, extra_info: "INNER\nmc.movie_id = cc.movie_id\nmc.movie_id = t.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.008254, cardinality: 1153798, extra_info: "INNER\nmc.company_id = cn.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.000548, cardinality: 2609129, extra_info: "movie_companies\n[INFOSEPARATOR]\nmovie_id\ncompany_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_companies", attributes: [movie_companies.movie_id, movie_companies.company_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.002241, cardinality: 84843, extra_info: "company_name\n[INFOSEPARATOR]\ncountry_code\nid\n[INFOSEPARATOR]\nFilters: country_code=[us] AND country_code IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "company_name", attributes: [company_name.country_code, company_name.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.company_id, right_attr: cn.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.00968, cardinality: 1996, extra_info: "INNER\nt.id = cc.movie_id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.033412, cardinality: 1042800, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\nid\ntitle\n[INFOSEPARATOR]\nFilters: production_year>=2000 AND production_year<=2010 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.id, title.title] })) }, TreeOp { name: "HASH_JOIN", timing: 0.000287, cardinality: 17879, extra_info: "INNER\ncc.status_id = cct2.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000145, cardinality: 85941, extra_info: "INNER\ncc.subject_id = cct1.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 3.9e-5, cardinality: 135086, extra_info: "complete_cast\n[INFOSEPARATOR]\nmovie_id\nsubject_id\nstatus_id", children: [], attr: Some(Scan(ScanAttr { table_name: "complete_cast", attributes: [complete_cast.movie_id, complete_cast.subject_id, complete_cast.status_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 4e-6, cardinality: 1, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=cast AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.subject_id, right_attr: cct1.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 1e-6, cardinality: 1, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=complete+verified AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.status_id, right_attr: cct2.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: cc.movie_id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.movie_id, right_attr: cc.movie_id }, Equalizer { left_attr: mc.movie_id, right_attr: t.id }] })) }), [Id(1)], [Id(0), Id(2), Id(3), Id(4)])]
[Lookup([0 @ mk.keyword_id = 0 @ k.id), 1 @ mk.movie_id = 1 @ mc.movie_id)])]

TreeOp { name: "HASH_JOIN", timing: 0.00415, cardinality: 337, extra_info: "INNER\nmi.movie_id = cc.movie_id\nmi.movie_id = t.id\nmi.movie_id = mk.movie_id\nmi.movie_id = mc.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.001773, cardinality: 451039, extra_info: "INNER\nmi.info_type_id = it.id\n", children: [TreeOp { name: "PROJECTION", timing: 0.000107, cardinality: 451104, extra_info: "#1\n#2\n", children: [TreeOp { name: "FILTER", timing: 0.177442, cardinality: 451104, extra_info: "((mi.info ~~ 'Japan:%200%') OR (mi.info ~~ 'USA:%200%'))", children: [TreeOp { name: "SEQ_SCAN", timing: 0.085165, cardinality: 14835720, extra_info: "movie_info\n[INFOSEPARATOR]\ninfo\nmovie_id\ninfo_type_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info", attributes: [movie_info.info, movie_info.movie_id, movie_info.info_type_id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1, .#2] })) }, TreeOp { name: "SEQ_SCAN", timing: 2e-6, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=release dates AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi.info_type_id, right_attr: it.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.000183, cardinality: 92, extra_info: "INNER\nmk.movie_id = cc.movie_id\nmk.movie_id = t.id\nmk.movie_id = mc.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.003635, cardinality: 414, extra_info: "INNER\nmk.keyword_id = k.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.000786, cardinality: 4523930, extra_info: "movie_keyword\n[INFOSEPARATOR]\nmovie_id\nkeyword_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_keyword", attributes: [movie_keyword.movie_id, movie_keyword.keyword_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.001389, cardinality: 1, extra_info: "keyword\n[INFOSEPARATOR]\nkeyword\nid\n[INFOSEPARATOR]\nFilters: keyword=computer-animation AND keyword IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "keyword", attributes: [keyword.keyword, keyword.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mk.keyword_id, right_attr: k.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.014492, cardinality: 7124, extra_info: "INNER\nmc.movie_id = cc.movie_id\nmc.movie_id = t.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.008254, cardinality: 1153798, extra_info: "INNER\nmc.company_id = cn.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.000548, cardinality: 2609129, extra_info: "movie_companies\n[INFOSEPARATOR]\nmovie_id\ncompany_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_companies", attributes: [movie_companies.movie_id, movie_companies.company_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.002241, cardinality: 84843, extra_info: "company_name\n[INFOSEPARATOR]\ncountry_code\nid\n[INFOSEPARATOR]\nFilters: country_code=[us] AND country_code IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "company_name", attributes: [company_name.country_code, company_name.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.company_id, right_attr: cn.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.00968, cardinality: 1996, extra_info: "INNER\nt.id = cc.movie_id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.033412, cardinality: 1042800, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\nid\ntitle\n[INFOSEPARATOR]\nFilters: production_year>=2000 AND production_year<=2010 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.id, title.title] })) }, TreeOp { name: "HASH_JOIN", timing: 0.000287, cardinality: 17879, extra_info: "INNER\ncc.status_id = cct2.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000145, cardinality: 85941, extra_info: "INNER\ncc.subject_id = cct1.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 3.9e-5, cardinality: 135086, extra_info: "complete_cast\n[INFOSEPARATOR]\nmovie_id\nsubject_id\nstatus_id", children: [], attr: Some(Scan(ScanAttr { table_name: "complete_cast", attributes: [complete_cast.movie_id, complete_cast.subject_id, complete_cast.status_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 4e-6, cardinality: 1, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=cast AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.subject_id, right_attr: cct1.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 1e-6, cardinality: 1, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=complete+verified AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.status_id, right_attr: cct2.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: cc.movie_id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.movie_id, right_attr: cc.movie_id }, Equalizer { left_attr: mc.movie_id, right_attr: t.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mk.movie_id, right_attr: cc.movie_id }, Equalizer { left_attr: mk.movie_id, right_attr: t.id }, Equalizer { left_attr: mk.movie_id, right_attr: mc.movie_id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi.movie_id, right_attr: cc.movie_id }, Equalizer { left_attr: mi.movie_id, right_attr: t.id }, Equalizer { left_attr: mi.movie_id, right_attr: mk.movie_id }, Equalizer { left_attr: mi.movie_id, right_attr: mc.movie_id }] })) }
[(Name("mi"), [Name("info_type_id"), Name("movie_id")], []), (Name("it"), [Name("id")], []), (Node(TreeOp { name: "HASH_JOIN", timing: 0.000183, cardinality: 92, extra_info: "INNER\nmk.movie_id = cc.movie_id\nmk.movie_id = t.id\nmk.movie_id = mc.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.003635, cardinality: 414, extra_info: "INNER\nmk.keyword_id = k.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.000786, cardinality: 4523930, extra_info: "movie_keyword\n[INFOSEPARATOR]\nmovie_id\nkeyword_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_keyword", attributes: [movie_keyword.movie_id, movie_keyword.keyword_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.001389, cardinality: 1, extra_info: "keyword\n[INFOSEPARATOR]\nkeyword\nid\n[INFOSEPARATOR]\nFilters: keyword=computer-animation AND keyword IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "keyword", attributes: [keyword.keyword, keyword.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mk.keyword_id, right_attr: k.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.014492, cardinality: 7124, extra_info: "INNER\nmc.movie_id = cc.movie_id\nmc.movie_id = t.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.008254, cardinality: 1153798, extra_info: "INNER\nmc.company_id = cn.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.000548, cardinality: 2609129, extra_info: "movie_companies\n[INFOSEPARATOR]\nmovie_id\ncompany_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_companies", attributes: [movie_companies.movie_id, movie_companies.company_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.002241, cardinality: 84843, extra_info: "company_name\n[INFOSEPARATOR]\ncountry_code\nid\n[INFOSEPARATOR]\nFilters: country_code=[us] AND country_code IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "company_name", attributes: [company_name.country_code, company_name.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.company_id, right_attr: cn.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.00968, cardinality: 1996, extra_info: "INNER\nt.id = cc.movie_id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.033412, cardinality: 1042800, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\nid\ntitle\n[INFOSEPARATOR]\nFilters: production_year>=2000 AND production_year<=2010 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.id, title.title] })) }, TreeOp { name: "HASH_JOIN", timing: 0.000287, cardinality: 17879, extra_info: "INNER\ncc.status_id = cct2.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000145, cardinality: 85941, extra_info: "INNER\ncc.subject_id = cct1.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 3.9e-5, cardinality: 135086, extra_info: "complete_cast\n[INFOSEPARATOR]\nmovie_id\nsubject_id\nstatus_id", children: [], attr: Some(Scan(ScanAttr { table_name: "complete_cast", attributes: [complete_cast.movie_id, complete_cast.subject_id, complete_cast.status_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 4e-6, cardinality: 1, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=cast AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.subject_id, right_attr: cct1.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 1e-6, cardinality: 1, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=complete+verified AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.status_id, right_attr: cct2.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: cc.movie_id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.movie_id, right_attr: cc.movie_id }, Equalizer { left_attr: mc.movie_id, right_attr: t.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mk.movie_id, right_attr: cc.movie_id }, Equalizer { left_attr: mk.movie_id, right_attr: t.id }, Equalizer { left_attr: mk.movie_id, right_attr: mc.movie_id }] })) }), [Id(1)], [Id(0), Id(2), Id(3), Id(4), Id(5)])]
[Lookup([0 @ mi.info_type_id = 0 @ it.id), 1 @ mi.movie_id = 1 @ cc.movie_id)])]

TreeOp { name: "HASH_JOIN", timing: 0.012651, cardinality: 1068861, extra_info: "INNER\npi.info_type_id = it3.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.055362, cardinality: 4536141, extra_info: "INNER\npi.person_id = an.person_id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.000842, cardinality: 2963664, extra_info: "person_info\n[INFOSEPARATOR]\nperson_id\ninfo_type_id", children: [], attr: Some(Scan(ScanAttr { table_name: "person_info", attributes: [person_info.person_id, person_info.info_type_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.000112, cardinality: 901343, extra_info: "aka_name\n[INFOSEPARATOR]\nperson_id", children: [], attr: Some(Scan(ScanAttr { table_name: "aka_name", attributes: [aka_name.person_id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: pi.person_id, right_attr: an.person_id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 1.1e-5, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=trivia AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: pi.info_type_id, right_attr: it3.id }] })) }
[(Name("pi"), [Name("person_id"), Name("info_type_id")], []), (Name("an"), [Name("person_id")], []), (Name("it3"), [Name("id")], [])]
[Lookup([0 @ pi.person_id = 0 @ an.person_id), 1 @ pi.info_type_id = 1 @ it3.id)])]

TreeOp { name: "HASH_JOIN", timing: 0.029248, cardinality: 16105, extra_info: "INNER\nn.id = pi.person_id\nn.id = an.person_id\n", children: [TreeOp { name: "PROJECTION", timing: 3e-6, cardinality: 50011, extra_info: "#1\n#2\n", children: [TreeOp { name: "FILTER", timing: 0.010674, cardinality: 50011, extra_info: "contains(n.name, 'An')", children: [TreeOp { name: "SEQ_SCAN", timing: 0.00781, cardinality: 961555, extra_info: "name\n[INFOSEPARATOR]\ngender\nname\nid\n[INFOSEPARATOR]\nFilters: gender=f AND gender IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "name", attributes: [name.gender, name.name, name.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1, .#2] })) }, TreeOp { name: "HASH_JOIN", timing: 0.012651, cardinality: 1068861, extra_info: "INNER\npi.info_type_id = it3.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.055362, cardinality: 4536141, extra_info: "INNER\npi.person_id = an.person_id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.000842, cardinality: 2963664, extra_info: "person_info\n[INFOSEPARATOR]\nperson_id\ninfo_type_id", children: [], attr: Some(Scan(ScanAttr { table_name: "person_info", attributes: [person_info.person_id, person_info.info_type_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.000112, cardinality: 901343, extra_info: "aka_name\n[INFOSEPARATOR]\nperson_id", children: [], attr: Some(Scan(ScanAttr { table_name: "aka_name", attributes: [aka_name.person_id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: pi.person_id, right_attr: an.person_id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 1.1e-5, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=trivia AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: pi.info_type_id, right_attr: it3.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: n.id, right_attr: pi.person_id }, Equalizer { left_attr: n.id, right_attr: an.person_id }] })) }
[(Name("n"), [Name("id")], [Name("name")]), (Node(TreeOp { name: "HASH_JOIN", timing: 0.012651, cardinality: 1068861, extra_info: "INNER\npi.info_type_id = it3.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.055362, cardinality: 4536141, extra_info: "INNER\npi.person_id = an.person_id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.000842, cardinality: 2963664, extra_info: "person_info\n[INFOSEPARATOR]\nperson_id\ninfo_type_id", children: [], attr: Some(Scan(ScanAttr { table_name: "person_info", attributes: [person_info.person_id, person_info.info_type_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.000112, cardinality: 901343, extra_info: "aka_name\n[INFOSEPARATOR]\nperson_id", children: [], attr: Some(Scan(ScanAttr { table_name: "aka_name", attributes: [aka_name.person_id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: pi.person_id, right_attr: an.person_id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 1.1e-5, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=trivia AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: pi.info_type_id, right_attr: it3.id }] })) }), [Id(0)], [Id(1)])]
[Lookup([0 @ n.id = 0 @ pi.person_id)])]

TreeOp { name: "HASH_JOIN", timing: 0.000625, cardinality: 16308, extra_info: "INNER\nci.movie_id = cc.movie_id\nci.movie_id = t.id\nci.movie_id = mk.movie_id\nci.movie_id = mi.movie_id\nci.movie_id = mc.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.004445, cardinality: 49511, extra_info: "INNER\nci.person_id = an.person_id\nci.person_id = pi.person_id\nci.person_id = n.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.002875, cardinality: 255651, extra_info: "INNER\nci.role_id = rt.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.091551, cardinality: 801259, extra_info: "INNER\nci.person_role_id = chn.id\n", children: [TreeOp { name: "PROJECTION", timing: 0.000212, cardinality: 867477, extra_info: "#1\n#2\n#3\n#4\n", children: [TreeOp { name: "FILTER", timing: 0.24136, cardinality: 867477, extra_info: "(ci.note = '(voice)' OR ci.note = '(voice: Japanese version)' OR ci.note = '(voice) (uncredited)' OR ci.note = '(voice: English version)')", children: [TreeOp { name: "SEQ_SCAN", timing: 0.121804, cardinality: 36244344, extra_info: "cast_info\n[INFOSEPARATOR]\nnote\nmovie_id\nperson_id\nrole_id\nperson_role_id", children: [], attr: Some(Scan(ScanAttr { table_name: "cast_info", attributes: [cast_info.note, cast_info.movie_id, cast_info.person_id, cast_info.role_id, cast_info.person_role_id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1, .#2, .#3, .#4] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.021031, cardinality: 3140339, extra_info: "char_name\n[INFOSEPARATOR]\nid\nname", children: [], attr: Some(Scan(ScanAttr { table_name: "char_name", attributes: [char_name.id, char_name.name] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: ci.person_role_id, right_attr: chn.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 8e-6, cardinality: 1, extra_info: "role_type\n[INFOSEPARATOR]\nrole\nid\n[INFOSEPARATOR]\nFilters: role=actress AND role IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "role_type", attributes: [role_type.role, role_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: ci.role_id, right_attr: rt.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.029248, cardinality: 16105, extra_info: "INNER\nn.id = pi.person_id\nn.id = an.person_id\n", children: [TreeOp { name: "PROJECTION", timing: 3e-6, cardinality: 50011, extra_info: "#1\n#2\n", children: [TreeOp { name: "FILTER", timing: 0.010674, cardinality: 50011, extra_info: "contains(n.name, 'An')", children: [TreeOp { name: "SEQ_SCAN", timing: 0.00781, cardinality: 961555, extra_info: "name\n[INFOSEPARATOR]\ngender\nname\nid\n[INFOSEPARATOR]\nFilters: gender=f AND gender IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "name", attributes: [name.gender, name.name, name.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1, .#2] })) }, TreeOp { name: "HASH_JOIN", timing: 0.012651, cardinality: 1068861, extra_info: "INNER\npi.info_type_id = it3.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.055362, cardinality: 4536141, extra_info: "INNER\npi.person_id = an.person_id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.000842, cardinality: 2963664, extra_info: "person_info\n[INFOSEPARATOR]\nperson_id\ninfo_type_id", children: [], attr: Some(Scan(ScanAttr { table_name: "person_info", attributes: [person_info.person_id, person_info.info_type_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.000112, cardinality: 901343, extra_info: "aka_name\n[INFOSEPARATOR]\nperson_id", children: [], attr: Some(Scan(ScanAttr { table_name: "aka_name", attributes: [aka_name.person_id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: pi.person_id, right_attr: an.person_id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 1.1e-5, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=trivia AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: pi.info_type_id, right_attr: it3.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: n.id, right_attr: pi.person_id }, Equalizer { left_attr: n.id, right_attr: an.person_id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: ci.person_id, right_attr: an.person_id }, Equalizer { left_attr: ci.person_id, right_attr: pi.person_id }, Equalizer { left_attr: ci.person_id, right_attr: n.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.00415, cardinality: 337, extra_info: "INNER\nmi.movie_id = cc.movie_id\nmi.movie_id = t.id\nmi.movie_id = mk.movie_id\nmi.movie_id = mc.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.001773, cardinality: 451039, extra_info: "INNER\nmi.info_type_id = it.id\n", children: [TreeOp { name: "PROJECTION", timing: 0.000107, cardinality: 451104, extra_info: "#1\n#2\n", children: [TreeOp { name: "FILTER", timing: 0.177442, cardinality: 451104, extra_info: "((mi.info ~~ 'Japan:%200%') OR (mi.info ~~ 'USA:%200%'))", children: [TreeOp { name: "SEQ_SCAN", timing: 0.085165, cardinality: 14835720, extra_info: "movie_info\n[INFOSEPARATOR]\ninfo\nmovie_id\ninfo_type_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info", attributes: [movie_info.info, movie_info.movie_id, movie_info.info_type_id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1, .#2] })) }, TreeOp { name: "SEQ_SCAN", timing: 2e-6, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=release dates AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi.info_type_id, right_attr: it.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.000183, cardinality: 92, extra_info: "INNER\nmk.movie_id = cc.movie_id\nmk.movie_id = t.id\nmk.movie_id = mc.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.003635, cardinality: 414, extra_info: "INNER\nmk.keyword_id = k.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.000786, cardinality: 4523930, extra_info: "movie_keyword\n[INFOSEPARATOR]\nmovie_id\nkeyword_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_keyword", attributes: [movie_keyword.movie_id, movie_keyword.keyword_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.001389, cardinality: 1, extra_info: "keyword\n[INFOSEPARATOR]\nkeyword\nid\n[INFOSEPARATOR]\nFilters: keyword=computer-animation AND keyword IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "keyword", attributes: [keyword.keyword, keyword.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mk.keyword_id, right_attr: k.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.014492, cardinality: 7124, extra_info: "INNER\nmc.movie_id = cc.movie_id\nmc.movie_id = t.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.008254, cardinality: 1153798, extra_info: "INNER\nmc.company_id = cn.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.000548, cardinality: 2609129, extra_info: "movie_companies\n[INFOSEPARATOR]\nmovie_id\ncompany_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_companies", attributes: [movie_companies.movie_id, movie_companies.company_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.002241, cardinality: 84843, extra_info: "company_name\n[INFOSEPARATOR]\ncountry_code\nid\n[INFOSEPARATOR]\nFilters: country_code=[us] AND country_code IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "company_name", attributes: [company_name.country_code, company_name.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.company_id, right_attr: cn.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.00968, cardinality: 1996, extra_info: "INNER\nt.id = cc.movie_id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.033412, cardinality: 1042800, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\nid\ntitle\n[INFOSEPARATOR]\nFilters: production_year>=2000 AND production_year<=2010 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.id, title.title] })) }, TreeOp { name: "HASH_JOIN", timing: 0.000287, cardinality: 17879, extra_info: "INNER\ncc.status_id = cct2.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000145, cardinality: 85941, extra_info: "INNER\ncc.subject_id = cct1.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 3.9e-5, cardinality: 135086, extra_info: "complete_cast\n[INFOSEPARATOR]\nmovie_id\nsubject_id\nstatus_id", children: [], attr: Some(Scan(ScanAttr { table_name: "complete_cast", attributes: [complete_cast.movie_id, complete_cast.subject_id, complete_cast.status_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 4e-6, cardinality: 1, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=cast AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.subject_id, right_attr: cct1.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 1e-6, cardinality: 1, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=complete+verified AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.status_id, right_attr: cct2.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: cc.movie_id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.movie_id, right_attr: cc.movie_id }, Equalizer { left_attr: mc.movie_id, right_attr: t.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mk.movie_id, right_attr: cc.movie_id }, Equalizer { left_attr: mk.movie_id, right_attr: t.id }, Equalizer { left_attr: mk.movie_id, right_attr: mc.movie_id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi.movie_id, right_attr: cc.movie_id }, Equalizer { left_attr: mi.movie_id, right_attr: t.id }, Equalizer { left_attr: mi.movie_id, right_attr: mk.movie_id }, Equalizer { left_attr: mi.movie_id, right_attr: mc.movie_id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: ci.movie_id, right_attr: cc.movie_id }, Equalizer { left_attr: ci.movie_id, right_attr: t.id }, Equalizer { left_attr: ci.movie_id, right_attr: mk.movie_id }, Equalizer { left_attr: ci.movie_id, right_attr: mi.movie_id }, Equalizer { left_attr: ci.movie_id, right_attr: mc.movie_id }] })) }
[(Name("ci"), [Name("person_role_id"), Name("role_id"), Name("person_id"), Name("movie_id")], []), (Name("chn"), [Name("id")], [Name("name")]), (Name("rt"), [Name("id")], []), (Node(TreeOp { name: "HASH_JOIN", timing: 0.029248, cardinality: 16105, extra_info: "INNER\nn.id = pi.person_id\nn.id = an.person_id\n", children: [TreeOp { name: "PROJECTION", timing: 3e-6, cardinality: 50011, extra_info: "#1\n#2\n", children: [TreeOp { name: "FILTER", timing: 0.010674, cardinality: 50011, extra_info: "contains(n.name, 'An')", children: [TreeOp { name: "SEQ_SCAN", timing: 0.00781, cardinality: 961555, extra_info: "name\n[INFOSEPARATOR]\ngender\nname\nid\n[INFOSEPARATOR]\nFilters: gender=f AND gender IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "name", attributes: [name.gender, name.name, name.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1, .#2] })) }, TreeOp { name: "HASH_JOIN", timing: 0.012651, cardinality: 1068861, extra_info: "INNER\npi.info_type_id = it3.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.055362, cardinality: 4536141, extra_info: "INNER\npi.person_id = an.person_id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.000842, cardinality: 2963664, extra_info: "person_info\n[INFOSEPARATOR]\nperson_id\ninfo_type_id", children: [], attr: Some(Scan(ScanAttr { table_name: "person_info", attributes: [person_info.person_id, person_info.info_type_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.000112, cardinality: 901343, extra_info: "aka_name\n[INFOSEPARATOR]\nperson_id", children: [], attr: Some(Scan(ScanAttr { table_name: "aka_name", attributes: [aka_name.person_id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: pi.person_id, right_attr: an.person_id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 1.1e-5, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=trivia AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: pi.info_type_id, right_attr: it3.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: n.id, right_attr: pi.person_id }, Equalizer { left_attr: n.id, right_attr: an.person_id }] })) }), [Id(0)], [Id(1), Id(2)]), (Node(TreeOp { name: "HASH_JOIN", timing: 0.00415, cardinality: 337, extra_info: "INNER\nmi.movie_id = cc.movie_id\nmi.movie_id = t.id\nmi.movie_id = mk.movie_id\nmi.movie_id = mc.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.001773, cardinality: 451039, extra_info: "INNER\nmi.info_type_id = it.id\n", children: [TreeOp { name: "PROJECTION", timing: 0.000107, cardinality: 451104, extra_info: "#1\n#2\n", children: [TreeOp { name: "FILTER", timing: 0.177442, cardinality: 451104, extra_info: "((mi.info ~~ 'Japan:%200%') OR (mi.info ~~ 'USA:%200%'))", children: [TreeOp { name: "SEQ_SCAN", timing: 0.085165, cardinality: 14835720, extra_info: "movie_info\n[INFOSEPARATOR]\ninfo\nmovie_id\ninfo_type_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info", attributes: [movie_info.info, movie_info.movie_id, movie_info.info_type_id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1, .#2] })) }, TreeOp { name: "SEQ_SCAN", timing: 2e-6, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=release dates AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi.info_type_id, right_attr: it.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.000183, cardinality: 92, extra_info: "INNER\nmk.movie_id = cc.movie_id\nmk.movie_id = t.id\nmk.movie_id = mc.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.003635, cardinality: 414, extra_info: "INNER\nmk.keyword_id = k.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.000786, cardinality: 4523930, extra_info: "movie_keyword\n[INFOSEPARATOR]\nmovie_id\nkeyword_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_keyword", attributes: [movie_keyword.movie_id, movie_keyword.keyword_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.001389, cardinality: 1, extra_info: "keyword\n[INFOSEPARATOR]\nkeyword\nid\n[INFOSEPARATOR]\nFilters: keyword=computer-animation AND keyword IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "keyword", attributes: [keyword.keyword, keyword.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mk.keyword_id, right_attr: k.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.014492, cardinality: 7124, extra_info: "INNER\nmc.movie_id = cc.movie_id\nmc.movie_id = t.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.008254, cardinality: 1153798, extra_info: "INNER\nmc.company_id = cn.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.000548, cardinality: 2609129, extra_info: "movie_companies\n[INFOSEPARATOR]\nmovie_id\ncompany_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_companies", attributes: [movie_companies.movie_id, movie_companies.company_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.002241, cardinality: 84843, extra_info: "company_name\n[INFOSEPARATOR]\ncountry_code\nid\n[INFOSEPARATOR]\nFilters: country_code=[us] AND country_code IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "company_name", attributes: [company_name.country_code, company_name.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.company_id, right_attr: cn.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.00968, cardinality: 1996, extra_info: "INNER\nt.id = cc.movie_id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.033412, cardinality: 1042800, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\nid\ntitle\n[INFOSEPARATOR]\nFilters: production_year>=2000 AND production_year<=2010 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.id, title.title] })) }, TreeOp { name: "HASH_JOIN", timing: 0.000287, cardinality: 17879, extra_info: "INNER\ncc.status_id = cct2.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000145, cardinality: 85941, extra_info: "INNER\ncc.subject_id = cct1.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 3.9e-5, cardinality: 135086, extra_info: "complete_cast\n[INFOSEPARATOR]\nmovie_id\nsubject_id\nstatus_id", children: [], attr: Some(Scan(ScanAttr { table_name: "complete_cast", attributes: [complete_cast.movie_id, complete_cast.subject_id, complete_cast.status_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 4e-6, cardinality: 1, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=cast AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.subject_id, right_attr: cct1.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 1e-6, cardinality: 1, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=complete+verified AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.status_id, right_attr: cct2.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: cc.movie_id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.movie_id, right_attr: cc.movie_id }, Equalizer { left_attr: mc.movie_id, right_attr: t.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mk.movie_id, right_attr: cc.movie_id }, Equalizer { left_attr: mk.movie_id, right_attr: t.id }, Equalizer { left_attr: mk.movie_id, right_attr: mc.movie_id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi.movie_id, right_attr: cc.movie_id }, Equalizer { left_attr: mi.movie_id, right_attr: t.id }, Equalizer { left_attr: mi.movie_id, right_attr: mk.movie_id }, Equalizer { left_attr: mi.movie_id, right_attr: mc.movie_id }] })) }), [Id(1)], [Id(0), Id(2), Id(3), Id(4), Id(5), Id(6)])]
[Lookup([0 @ ci.person_role_id = 0 @ chn.id), 1 @ ci.role_id = 1 @ rt.id), 2 @ ci.person_id = 2 @ n.id), 3 @ ci.movie_id = 3 @ mc.movie_id)])]
