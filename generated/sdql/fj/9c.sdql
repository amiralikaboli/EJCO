let mc = load[{<id: int, movie_id: int, company_id: int, company_type_id: int, note: string> -> int}]("/Users/s2522996/Documents/free-join/data/imdb_csv/movie_companies.csv")
let cn = load[{<id: int, name: string, country_code: string, imdb_id: string, name_pcode_nf: string, name_pcode_sf: string, md5sum: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/9c/cn.csv")
let ci = load[{<id: int, person_id: int, movie_id: int, person_role_id: int, note: string, nr_order: int, role_id: int> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/9c/ci.csv")
let n = load[{<id: int, name: string, imdb_index: string, imdb_id: string, gender: string, name_pcode_cf: string, name_pcode_nf: string, surname_pcode: string, md5sum: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/9c/n.csv")
let rt = load[{<id: int, role: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/9c/rt.csv")
let t = load[{<id: int, title: string, imdb_index: string, kind_id: int, production_year: int, imdb_id: string, phonetic_code: string, episode_of_id: int, season_nr: int, episode_nr: int, series_years: string, md5sum: string> -> int}]("/Users/s2522996/Documents/free-join/data/imdb_csv/title.csv")
let chn = load[{<id: int, name: string, imdb_index: string, imdb_id: int, name_pcode_cf: string, surname_pcode: string, md5sum: string> -> int}]("/Users/s2522996/Documents/free-join/data/imdb_csv/char_name.csv")
let an = load[{<id: int, person_id: int, name: string, imdb_index: string, name_pcode_cf: string, name_pcode_nf: string, surname_pcode: string, md5sum: string> -> int}]("/Users/s2522996/Documents/free-join/data/imdb_csv/aka_name.csv")

let cn_trie0 = sum(<cn_tuple, _> <- cn) { cn_tuple.id -> { cn_tuple -> 1 } } in
let interm0_trie0 = sum(<mc_tuple, _> <- mc)
	let x0 = mc_tuple.company_id in
	let cn_trie1 = cn_trie0(x0) in
	if (cn_trie1 != {}) then
		{ mc_tuple.movie_id -> { <col0=mc_tuple.company_id, col1=mc_tuple.movie_id> -> 1 } }
	else
		{}
in

let n_trie0 = sum(<n_tuple, _> <- n) { n_tuple.id -> { n_tuple -> 1 } } in
let interm0_trie0 = sum(<interm0_tuple, _> <- interm0) { interm0_tuple.col1 -> { interm0_tuple -> 1 } } in
let rt_trie0 = sum(<rt_tuple, _> <- rt) { rt_tuple.id -> { rt_tuple -> 1 } } in
let t_trie0 = sum(<t_tuple, _> <- t) { t_tuple.id -> { t_tuple -> 1 } } in
let chn_trie0 = sum(<chn_tuple, _> <- chn) { chn_tuple.id -> { chn_tuple -> 1 } } in
let an_trie0 = sum(<an_tuple, _> <- an) { an_tuple.person_id -> { an_tuple -> 1 } } in
sum(<ci_tuple, _> <- ci)
	let x0 = ci_tuple.person_id in
	let n_trie1 = n_trie0(x0) in
	if (n_trie1 != {}) then
		let x1 = ci_tuple.movie_id in
		let interm0_trie1 = interm0_trie0(x1) in
		if (interm0_trie1 != {}) then
			let x2 = ci_tuple.role_id in
			let rt_trie1 = rt_trie0(x2) in
			if (rt_trie1 != {}) then
				let t_trie1 = t_trie0(x1) in
				if (t_trie1 != {}) then
					let x4 = ci_tuple.person_role_id in
					let chn_trie1 = chn_trie0(x4) in
					if (chn_trie1 != {}) then
						let an_trie1 = an_trie0(x0) in
						if (an_trie1 != {}) then
							let mn_n_name = sum(<n_tuple, _> <- n_trie1) n_tuple.name in
							let mn_t_title = sum(<t_tuple, _> <- t_trie1) t_tuple.title in
							let mn_chn_name = sum(<chn_tuple, _> <- chn_trie1) chn_tuple.name in
							let mn_an_name = sum(<an_tuple, _> <- an_trie1) an_tuple.name in
							<col4=mn_n_name, col6=mn_t_title, col7=mn_chn_name, col8=mn_an_name>
						else
							<col4={}, col6={}, col7={}, col8={}>
					else
						{}
				else
					{}
			else
				{}
		else
			{}
	else
		{}

