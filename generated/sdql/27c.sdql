let ml = load[{<id: int, movie_id: int, linked_movie_id: int, link_type_id: int> -> int}]("/Users/s2522996/Documents/free-join/data/imdb_csv/movie_link.csv")
let lt = load[{<id: int, link: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/27c/lt.csv")
let cc = load[{<id: int, movie_id: int, subject_id: int, status_id: int> -> int}]("/Users/s2522996/Documents/free-join/data/imdb_csv/complete_cast.csv")
let cct1 = load[{<id: int, kind: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/27c/cct1.csv")
let cct2 = load[{<id: int, kind: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/27c/cct2.csv")
let t = load[{<id: int, title: string, imdb_index: string, kind_id: int, production_year: int, imdb_id: string, phonetic_code: string, episode_of_id: int, season_nr: int, episode_nr: int, series_years: string, md5sum: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/27c/t.csv")
let mc = load[{<id: int, movie_id: int, company_id: int, company_type_id: int, note: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/27c/mc.csv")
let ct = load[{<id: int, kind: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/27c/ct.csv")
let cn = load[{<id: int, name: string, country_code: string, imdb_id: string, name_pcode_nf: string, name_pcode_sf: string, md5sum: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/27c/cn.csv")
let mk = load[{<id: int, movie_id: int, keyword_id: int> -> int}]("/Users/s2522996/Documents/free-join/data/imdb_csv/movie_keyword.csv")
let k = load[{<id: int, keyword: string, phonetic_code: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/27c/k.csv")
let mi = load[{<id: int, movie_id: int, info_type_id: int, info: string, note: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/27c/mi.csv")


let interm0 = sum(<x0, ml_trie1> <- ml_trie0)
	let lt_trie1 = lt_trie0(x0) in
	if (lt_trie1 != {}) then
		sum(<ml_tuple, _> <- ml_trie1)
			sum(<lt_tuple, _> <- lt_trie1)
				{ <col0=ml_tuple.link_type_id, col1=ml_tuple.movie_id, col2=lt_tuple.link> -> true }
	else
		{}
in


let interm1 = sum(<x0, cc_trie1> <- cc_trie0)
	let cct1_trie1 = cct1_trie0(x0) in
	if (cct1_trie1 != {}) then
		sum(<x1, cc_trie2> <- cc_trie1)
			let cct2_trie1 = cct2_trie0(x1) in
			if (cct2_trie1 != {}) then
				sum(<x2, cc_trie3> <- cc_trie2)
					let interm0_trie1 = interm0_trie0(x2) in
					if (interm0_trie1 != {}) then
						sum(<cc_tuple, _> <- cc_trie3)
							sum(<interm0_tuple, _> <- interm0_trie1)
								{ <col0=cc_tuple.subject_id, col1=cc_tuple.status_id, col2=cc_tuple.movie_id, col3=interm0_tuple.col0, col4=interm0_tuple.col2> -> true }
					else
						{}
			else
				{}
	else
		{}
in


let interm2 = sum(<x0, t_trie1> <- t_trie0)
	let interm1_trie1 = interm1_trie0(x0) in
	if (interm1_trie1 != {}) then
		sum(<t_tuple, _> <- t_trie1)
			sum(<interm1_tuple, _> <- interm1_trie1)
				{ <col0=t_tuple.id, col1=t_tuple.title, col2=interm1_tuple.col0, col3=interm1_tuple.col1, col4=interm1_tuple.col3, col5=interm1_tuple.col4> -> true }
	else
		{}
in


let interm3 = sum(<x0, mc_trie1> <- mc_trie0)
	let ct_trie1 = ct_trie0(x0) in
	if (ct_trie1 != {}) then
		sum(<x1, mc_trie2> <- mc_trie1)
			let cn_trie1 = cn_trie0(x1) in
			if (cn_trie1 != {}) then
				sum(<x2, mc_trie3> <- mc_trie2)
					let interm2_trie1 = interm2_trie0(x2) in
					if (interm2_trie1 != {}) then
						sum(<mc_tuple, _> <- mc_trie3)
							sum(<cn_tuple, _> <- cn_trie1)
								sum(<interm2_tuple, _> <- interm2_trie1)
									{ <col0=mc_tuple.company_type_id, col1=mc_tuple.company_id, col2=mc_tuple.movie_id, col3=cn_tuple.name, col4=interm2_tuple.col1, col5=interm2_tuple.col2, col6=interm2_tuple.col3, col7=interm2_tuple.col4, col8=interm2_tuple.col5> -> true }
					else
						{}
			else
				{}
	else
		{}
in


let interm4 = sum(<x0, mk_trie1> <- mk_trie0)
	let k_trie1 = k_trie0(x0) in
	if (k_trie1 != {}) then
		sum(<x1, mk_trie2> <- mk_trie1)
			let interm3_trie1 = interm3_trie0(x1) in
			if (interm3_trie1 != {}) then
				sum(<mk_tuple, _> <- mk_trie2)
					sum(<interm3_tuple, _> <- interm3_trie1)
						{ <col0=mk_tuple.keyword_id, col1=mk_tuple.movie_id, col2=interm3_tuple.col0, col3=interm3_tuple.col1, col4=interm3_tuple.col3, col5=interm3_tuple.col4, col6=interm3_tuple.col5, col7=interm3_tuple.col6, col8=interm3_tuple.col7, col9=interm3_tuple.col8> -> true }
			else
				{}
	else
		{}
in


sum(<x0, mi_trie1> <- mi_trie0)
	let interm4_trie1 = interm4_trie0(x0) in
	if (interm4_trie1 != {}) then
		let mn_interm4_col0 = sum(<interm4_tuple, _> <- interm4_trie1) interm4_tuple.col0 in
		let mn_interm4_col2 = sum(<interm4_tuple, _> <- interm4_trie1) interm4_tuple.col2 in
		let mn_interm4_col3 = sum(<interm4_tuple, _> <- interm4_trie1) interm4_tuple.col3 in
		let mn_interm4_col4 = sum(<interm4_tuple, _> <- interm4_trie1) interm4_tuple.col4 in
		let mn_interm4_col5 = sum(<interm4_tuple, _> <- interm4_trie1) interm4_tuple.col5 in
		let mn_interm4_col6 = sum(<interm4_tuple, _> <- interm4_trie1) interm4_tuple.col6 in
		let mn_interm4_col7 = sum(<interm4_tuple, _> <- interm4_trie1) interm4_tuple.col7 in
		let mn_interm4_col8 = sum(<interm4_tuple, _> <- interm4_trie1) interm4_tuple.col8 in
		let mn_interm4_col9 = sum(<interm4_tuple, _> <- interm4_trie1) interm4_tuple.col9 in
		<col1=mn_interm4_col0, col2=mn_interm4_col2, col3=mn_interm4_col3, col4=mn_interm4_col4, col5=mn_interm4_col5, col6=mn_interm4_col6, col7=mn_interm4_col7, col8=mn_interm4_col8, col9=mn_interm4_col9>
	else
		<col1={}, col2={}, col3={}, col4={}, col5={}, col6={}, col7={}, col8={}, col9={}>


