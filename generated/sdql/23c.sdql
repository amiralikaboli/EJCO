let cc = load[{<id: int, movie_id: int, subject_id: int, status_id: int> -> int}]("/Users/s2522996/Documents/free-join/data/imdb_csv/complete_cast.csv")
let cct1 = load[{<id: int, kind: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/23c/cct1.csv")
let t = load[{<id: int, title: string, imdb_index: string, kind_id: int, production_year: int, imdb_id: string, phonetic_code: string, episode_of_id: int, season_nr: int, episode_nr: int, series_years: string, md5sum: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/23c/t.csv")
let kt = load[{<id: int, kind: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/23c/kt.csv")
let mc = load[{<id: int, movie_id: int, company_id: int, company_type_id: int, note: string> -> int}]("/Users/s2522996/Documents/free-join/data/imdb_csv/movie_companies.csv")
let ct = load[{<id: int, kind: string> -> int}]("/Users/s2522996/Documents/free-join/data/imdb_csv/company_type.csv")
let cn = load[{<id: int, name: string, country_code: string, imdb_id: string, name_pcode_nf: string, name_pcode_sf: string, md5sum: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/23c/cn.csv")
let mk = load[{<id: int, movie_id: int, keyword_id: int> -> int}]("/Users/s2522996/Documents/free-join/data/imdb_csv/movie_keyword.csv")
let k = load[{<id: int, keyword: string, phonetic_code: string> -> int}]("/Users/s2522996/Documents/free-join/data/imdb_csv/keyword.csv")
let mi = load[{<id: int, movie_id: int, info_type_id: int, info: string, note: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/23c/mi.csv")
let it1 = load[{<id: int, info: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/23c/it1.csv")

let cc_trie0 = sum(<cc_tuple, _> <- cc) { cc_tuple.status_id -> cc_tuple } in
let cct1_trie0 = sum(<cct1_tuple, _> <- cct1) { cct1_tuple.id -> cct1_tuple } in
let t_trie0 = sum(<t_tuple, _> <- t) { t_tuple.kind_id -> { t_tuple.id -> t_tuple } } in
let kt_trie0 = sum(<kt_tuple, _> <- kt) { kt_tuple.id -> kt_tuple } in
let mc_trie0 = sum(<mc_tuple, _> <- mc) { mc_tuple.company_type_id -> { mc_tuple.company_id -> { mc_tuple.movie_id -> mc_tuple } } } in
let ct_trie0 = sum(<ct_tuple, _> <- ct) { ct_tuple.id -> ct_tuple } in
let cn_trie0 = sum(<cn_tuple, _> <- cn) { cn_tuple.id -> cn_tuple } in
let mk_trie0 = sum(<mk_tuple, _> <- mk) { mk_tuple.keyword_id -> { mk_tuple.movie_id -> mk_tuple } } in
let k_trie0 = sum(<k_tuple, _> <- k) { k_tuple.id -> k_tuple } in
let mi_trie0 = sum(<mi_tuple, _> <- mi) { mi_tuple.info_type_id -> { mi_tuple.movie_id -> mi_tuple } } in
let it1_trie0 = sum(<it1_tuple, _> <- it1) { it1_tuple.id -> it1_tuple } in

let interm0 = sum(<x0, cc_trie1> <- cc_trie0)
	let cct1_trie1 = cct1_trie0(x0) in
	if (cct1_trie1 != {}) then
		sum(<cc_tuple, _> <- cc_trie1)
			{ <col0=cc_tuple.status_id, col1=cc_tuple.movie_id> -> true }
	else
		{}
in

let interm1 = sum(<x0, t_trie1> <- t_trie0)
	let kt_trie1 = kt_trie0(x0) in
	if (kt_trie1 != {}) then
		sum(<x1, t_trie2> <- t_trie1)
			let interm0_trie1 = interm0_trie0(x1) in
			if (interm0_trie1 != {}) then
				sum(<t_tuple, _> <- t_trie2)
					sum(<kt_tuple, _> <- kt_trie1)
						sum(<interm0_tuple, _> <- interm0_trie1)
							{ <col0=t_tuple.kind_id, col1=t_tuple.id, col2=t_tuple.title, col3=kt_tuple.kind, col4=interm0_tuple.col0> -> true }
			else
				{}
	else
		{}
in

let interm2 = sum(<x0, mc_trie1> <- mc_trie0)
	let ct_trie1 = ct_trie0(x0) in
	if (ct_trie1 != {}) then
		sum(<x1, mc_trie2> <- mc_trie1)
			let cn_trie1 = cn_trie0(x1) in
			if (cn_trie1 != {}) then
				sum(<x2, mc_trie3> <- mc_trie2)
					let interm1_trie1 = interm1_trie0(x2) in
					if (interm1_trie1 != {}) then
						sum(<mc_tuple, _> <- mc_trie3)
							sum(<interm1_tuple, _> <- interm1_trie1)
								{ <col0=mc_tuple.company_type_id, col1=mc_tuple.company_id, col2=mc_tuple.movie_id, col3=interm1_tuple.col0, col4=interm1_tuple.col2, col5=interm1_tuple.col3, col6=interm1_tuple.col4> -> true }
					else
						{}
			else
				{}
	else
		{}
in

let interm3 = sum(<x0, mk_trie1> <- mk_trie0)
	let k_trie1 = k_trie0(x0) in
	if (k_trie1 != {}) then
		sum(<x1, mk_trie2> <- mk_trie1)
			let interm2_trie1 = interm2_trie0(x1) in
			if (interm2_trie1 != {}) then
				sum(<mk_tuple, _> <- mk_trie2)
					sum(<interm2_tuple, _> <- interm2_trie1)
						{ <col0=mk_tuple.keyword_id, col1=mk_tuple.movie_id, col2=interm2_tuple.col0, col3=interm2_tuple.col1, col4=interm2_tuple.col3, col5=interm2_tuple.col4, col6=interm2_tuple.col5, col7=interm2_tuple.col6> -> true }
			else
				{}
	else
		{}
in

sum(<x0, mi_trie1> <- mi_trie0)
	let it1_trie1 = it1_trie0(x0) in
	if (it1_trie1 != {}) then
		sum(<x1, mi_trie2> <- mi_trie1)
			let interm3_trie1 = interm3_trie0(x1) in
			if (interm3_trie1 != {}) then
				let mn_interm3_col0 = sum(<interm3_tuple, _> <- interm3_trie1) interm3_tuple.col0 in
				let mn_interm3_col2 = sum(<interm3_tuple, _> <- interm3_trie1) interm3_tuple.col2 in
				let mn_interm3_col3 = sum(<interm3_tuple, _> <- interm3_trie1) interm3_tuple.col3 in
				let mn_interm3_col4 = sum(<interm3_tuple, _> <- interm3_trie1) interm3_tuple.col4 in
				let mn_interm3_col5 = sum(<interm3_tuple, _> <- interm3_trie1) interm3_tuple.col5 in
				let mn_interm3_col6 = sum(<interm3_tuple, _> <- interm3_trie1) interm3_tuple.col6 in
				let mn_interm3_col7 = sum(<interm3_tuple, _> <- interm3_trie1) interm3_tuple.col7 in
				<col2=mn_interm3_col0, col3=mn_interm3_col2, col4=mn_interm3_col3, col5=mn_interm3_col4, col6=mn_interm3_col5, col7=mn_interm3_col6, col8=mn_interm3_col7>
			else
				<col2={}, col3={}, col4={}, col5={}, col6={}, col7={}, col8={}>
	else
		{}

