let mk = load[{<id: int, movie_id: int, keyword_id: int> -> int}]("/Users/s2522996/Documents/free-join/data/imdb_csv/movie_keyword.csv")
let t = load[{<id: int, title: string, imdb_index: string, kind_id: int, production_year: int, imdb_id: string, phonetic_code: string, episode_of_id: int, season_nr: int, episode_nr: int, series_years: string, md5sum: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/3a/t.csv")
let mi = load[{<id: int, movie_id: int, info_type_id: int, info: string, note: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/3a/mi.csv")
let k = load[{<id: int, keyword: string, phonetic_code: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/3a/k.csv")

let t_trie0 = sum(<t_tuple, _> <- t) { t_tuple.id -> t_tuple } in
let k_trie0 = sum(<k_tuple, _> <- k) { k_tuple.id -> k_tuple } in

let interm0_trie0 = sum(<mk_tuple, _> <- mk_tuples0)
    let x0 = mk_tuple.movie_id in
	let t_tuples1 = t_trie0(x0) in
	if (t_tuples1 != {}) then
        sum(<t_tuple, _> <- t_tuples1)
            { mk_tuple.movie_id -> { <col0=mk_tuple.movie_id, col1=mk_tuple.keyword_id, col2=t_tuple.title> -> 1 } }
	else
		{}
in

sum(<mi_tuple, _> <- mi_tuples0)
    let x0 = mi_tuple.movie_id in
	let interm0_tuples1 = interm0_trie0(x0) in
	if (interm0_tuples1 != {}) then
		sum(<interm0_tuple, _> <- interm0_tuples1)
		    let x1 = interm0_tuple.col1 in
			let k_tuples1 = k_trie0(x1) in
			if (k_tuples1 != {}) then
				let mn_interm0_col2 = interm0_tuple.col2 in
				<col2=mn_interm0_col2>
			else
				<col2={}>
	else
		{}

