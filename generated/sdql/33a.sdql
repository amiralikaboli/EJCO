let ml = load[{<id: int, movie_id: int, linked_movie_id: int, link_type_id: int> -> int}]("/Users/s2522996/Documents/free-join/data/imdb_csv/movie_link.csv")
let lt = load[{<id: int, link: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/33a/lt.csv")
let mi_idx1 = load[{<id: int, movie_id: int, info_type_id: int, info: string, note: string> -> int}]("/Users/s2522996/Documents/free-join/data/imdb_csv/movie_info_idx.csv")
let it1 = load[{<id: int, info: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/33a/it1.csv")
let mi_idx2 = load[{<id: int, movie_id: int, info_type_id: int, info: string, note: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/33a/mi_idx2.csv")
let it2 = load[{<id: int, info: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/33a/it2.csv")
let t1 = load[{<id: int, title: string, imdb_index: string, kind_id: int, production_year: int, imdb_id: string, phonetic_code: string, episode_of_id: int, season_nr: int, episode_nr: int, series_years: string, md5sum: string> -> int}]("/Users/s2522996/Documents/free-join/data/imdb_csv/title.csv")
let kt1 = load[{<id: int, kind: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/33a/kt1.csv")
let t2 = load[{<id: int, title: string, imdb_index: string, kind_id: int, production_year: int, imdb_id: string, phonetic_code: string, episode_of_id: int, season_nr: int, episode_nr: int, series_years: string, md5sum: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/33a/t2.csv")
let kt2 = load[{<id: int, kind: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/33a/kt2.csv")
let mc1 = load[{<id: int, movie_id: int, company_id: int, company_type_id: int, note: string> -> int}]("/Users/s2522996/Documents/free-join/data/imdb_csv/movie_companies.csv")
let cn1 = load[{<id: int, name: string, country_code: string, imdb_id: string, name_pcode_nf: string, name_pcode_sf: string, md5sum: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/33a/cn1.csv")
let mc2 = load[{<id: int, movie_id: int, company_id: int, company_type_id: int, note: string> -> int}]("/Users/s2522996/Documents/free-join/data/imdb_csv/movie_companies.csv")
let cn2 = load[{<id: int, name: string, country_code: string, imdb_id: string, name_pcode_nf: string, name_pcode_sf: string, md5sum: string> -> int}]("/Users/s2522996/Documents/free-join/data/imdb_csv/company_name.csv")


let interm0_trie0 = sum(<x0, ml_trie1> <- ml_trie0)
	let lt_trie1 = lt_trie0(x0) in
	if (lt_trie1 != {}) then
		sum(<ml_tuple, _> <- ml_trie1)
			{ <col0=ml_tuple.link_type_id, col1=ml_tuple.movie_id, col2=ml_tuple.linked_movie_id> -> true }
	else
		{}
in


let interm1_trie0 = sum(<x0, mi_idx1_trie1> <- mi_idx1_trie0)
	let it1_trie1 = it1_trie0(x0) in
	if (it1_trie1 != {}) then
		sum(<x1, mi_idx1_trie2> <- mi_idx1_trie1)
			let interm0_trie1 = interm0_trie0(x1) in
			if (interm0_trie1 != {}) then
				sum(<mi_idx1_tuple, _> <- mi_idx1_trie2)
					sum(<interm0_tuple, _> <- interm0_trie1)
						{ <col0=mi_idx1_tuple.info_type_id, col1=mi_idx1_tuple.movie_id, col2=mi_idx1_tuple.info, col3=interm0_tuple.col0, col4=interm0_tuple.col2> -> true }
			else
				{}
	else
		{}
in


let interm2_trie0 = sum(<x0, mi_idx2_trie1> <- mi_idx2_trie0)
	let it2_trie1 = it2_trie0(x0) in
	if (it2_trie1 != {}) then
		sum(<x1, mi_idx2_trie2> <- mi_idx2_trie1)
			let interm1_trie1 = interm1_trie0(x1) in
			if (interm1_trie1 != {}) then
				sum(<mi_idx2_tuple, _> <- mi_idx2_trie2)
					sum(<interm1_tuple, _> <- interm1_trie1)
						{ <col0=mi_idx2_tuple.info_type_id, col1=mi_idx2_tuple.movie_id, col2=mi_idx2_tuple.info, col3=interm1_tuple.col0, col4=interm1_tuple.col1, col5=interm1_tuple.col2, col6=interm1_tuple.col3> -> true }
			else
				{}
	else
		{}
in


let interm3_trie0 = sum(<x0, t1_trie1> <- t1_trie0)
	let kt1_trie1 = kt1_trie0(x0) in
	if (kt1_trie1 != {}) then
		sum(<x1, t1_trie2> <- t1_trie1)
			let interm2_trie1 = interm2_trie0(x1) in
			if (interm2_trie1 != {}) then
				sum(<t1_tuple, _> <- t1_trie2)
					sum(<interm2_tuple, _> <- interm2_trie1)
						{ <col0=t1_tuple.kind_id, col1=t1_tuple.id, col2=t1_tuple.title, col3=interm2_tuple.col0, col4=interm2_tuple.col1, col5=interm2_tuple.col2, col6=interm2_tuple.col3, col7=interm2_tuple.col5, col8=interm2_tuple.col6> -> true }
			else
				{}
	else
		{}
in


let interm4_trie0 = sum(<x0, t2_trie1> <- t2_trie0)
	let kt2_trie1 = kt2_trie0(x0) in
	if (kt2_trie1 != {}) then
		sum(<x1, t2_trie2> <- t2_trie1)
			let interm3_trie1 = interm3_trie0(x1) in
			if (interm3_trie1 != {}) then
				sum(<t2_tuple, _> <- t2_trie2)
					sum(<interm3_tuple, _> <- interm3_trie1)
						{ <col0=t2_tuple.kind_id, col1=t2_tuple.id, col2=t2_tuple.title, col3=interm3_tuple.col0, col4=interm3_tuple.col1, col5=interm3_tuple.col2, col6=interm3_tuple.col3, col7=interm3_tuple.col5, col8=interm3_tuple.col6, col9=interm3_tuple.col7, col10=interm3_tuple.col8> -> true }
			else
				{}
	else
		{}
in


let interm5_trie0 = sum(<x0, mc1_trie1> <- mc1_trie0)
	let cn1_trie1 = cn1_trie0(x0) in
	if (cn1_trie1 != {}) then
		sum(<x1, mc1_trie2> <- mc1_trie1)
			let interm4_trie1 = interm4_trie0(x1) in
			if (interm4_trie1 != {}) then
				sum(<mc1_tuple, _> <- mc1_trie2)
					sum(<cn1_tuple, _> <- cn1_trie1)
						sum(<interm4_tuple, _> <- interm4_trie1)
							{ <col0=mc1_tuple.company_id, col1=mc1_tuple.movie_id, col2=cn1_tuple.name, col3=interm4_tuple.col0, col4=interm4_tuple.col1, col5=interm4_tuple.col2, col6=interm4_tuple.col3, col7=interm4_tuple.col5, col8=interm4_tuple.col6, col9=interm4_tuple.col7, col10=interm4_tuple.col8, col11=interm4_tuple.col9, col12=interm4_tuple.col10> -> true }
			else
				{}
	else
		{}
in


sum(<x0, mc2_trie1> <- mc2_trie0)
	let cn2_trie1 = cn2_trie0(x0) in
	if (cn2_trie1 != {}) then
		sum(<x1, mc2_trie2> <- mc2_trie1)
			let interm5_trie1 = interm5_trie0(x1) in
			if (interm5_trie1 != {}) then
				let mn_cn2_name = sum(<cn2_tuple, _> <- cn2_trie1) cn2_tuple.name in
				let mn_interm5_col0 = sum(<interm5_tuple, _> <- interm5_trie1) interm5_tuple.col0 in
				let mn_interm5_col1 = sum(<interm5_tuple, _> <- interm5_trie1) interm5_tuple.col1 in
				let mn_interm5_col2 = sum(<interm5_tuple, _> <- interm5_trie1) interm5_tuple.col2 in
				let mn_interm5_col3 = sum(<interm5_tuple, _> <- interm5_trie1) interm5_tuple.col3 in
				let mn_interm5_col5 = sum(<interm5_tuple, _> <- interm5_trie1) interm5_tuple.col5 in
				let mn_interm5_col6 = sum(<interm5_tuple, _> <- interm5_trie1) interm5_tuple.col6 in
				let mn_interm5_col7 = sum(<interm5_tuple, _> <- interm5_trie1) interm5_tuple.col7 in
				let mn_interm5_col8 = sum(<interm5_tuple, _> <- interm5_trie1) interm5_tuple.col8 in
				let mn_interm5_col9 = sum(<interm5_tuple, _> <- interm5_trie1) interm5_tuple.col9 in
				let mn_interm5_col10 = sum(<interm5_tuple, _> <- interm5_trie1) interm5_tuple.col10 in
				let mn_interm5_col11 = sum(<interm5_tuple, _> <- interm5_trie1) interm5_tuple.col11 in
				let mn_interm5_col12 = sum(<interm5_tuple, _> <- interm5_trie1) interm5_tuple.col12 in
				<col2=mn_cn2_name, col3=mn_interm5_col0, col4=mn_interm5_col1, col5=mn_interm5_col2, col6=mn_interm5_col3, col7=mn_interm5_col5, col8=mn_interm5_col6, col9=mn_interm5_col7, col10=mn_interm5_col8, col11=mn_interm5_col9, col12=mn_interm5_col10, col13=mn_interm5_col11, col14=mn_interm5_col12>
			else
				<col2={}, col3={}, col4={}, col5={}, col6={}, col7={}, col8={}, col9={}, col10={}, col11={}, col12={}, col13={}, col14={}>
	else
		{}


