
TreeOp { name: "HASH_JOIN", timing: 0.001598, cardinality: 116277, extra_info: "INNER\nmc.company_id = cn.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000256, cardinality: 124224, extra_info: "INNER\nmi.info_type_id = it.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.032464, cardinality: 124234, extra_info: "INNER\nt.id = mc.movie_id\nmi.movie_id = mc.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.027478, cardinality: 298264, extra_info: "INNER\nmi.movie_id = t.id\n", children: [TreeOp { name: "PROJECTION", timing: 9.9e-5, cardinality: 451104, extra_info: "#1\n#2\n", children: [TreeOp { name: "FILTER", timing: 0.175955, cardinality: 451104, extra_info: "((mi.info ~~ 'Japan:%200%') OR (mi.info ~~ 'USA:%200%'))", children: [TreeOp { name: "SEQ_SCAN", timing: 0.084309, cardinality: 14835720, extra_info: "movie_info\n[INFOSEPARATOR]\ninfo\nmovie_id\ninfo_type_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info", attributes: [movie_info.info, movie_info.movie_id, movie_info.info_type_id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1, .#2] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.034113, cardinality: 574556, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\nid\ntitle\n[INFOSEPARATOR]\nFilters: production_year>=2005 AND production_year<=2009 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.id, title.title] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi.movie_id, right_attr: t.id }] })) }, TreeOp { name: "PROJECTION", timing: 5.4e-5, cardinality: 590994, extra_info: "#1\n#2\n", children: [TreeOp { name: "FILTER", timing: 0.057071, cardinality: 590994, extra_info: "((mc.note IS NOT NULL) AND (contains(mc.note, '(USA)') OR contains(mc.note, '(worldwide)')))", children: [TreeOp { name: "SEQ_SCAN", timing: 0.005791, cardinality: 2609129, extra_info: "movie_companies\n[INFOSEPARATOR]\nnote\nmovie_id\ncompany_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_companies", attributes: [movie_companies.note, movie_companies.movie_id, movie_companies.company_id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1, .#2] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: mc.movie_id }, Equalizer { left_attr: mi.movie_id, right_attr: mc.movie_id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 8e-6, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=release dates AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi.info_type_id, right_attr: it.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.002256, cardinality: 84843, extra_info: "company_name\n[INFOSEPARATOR]\ncountry_code\nid\n[INFOSEPARATOR]\nFilters: country_code=[us] AND country_code IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "company_name", attributes: [company_name.country_code, company_name.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.company_id, right_attr: cn.id }] })) }
[(Name("mi"), [Name("movie_id"), Name("info_type_id")], []), (Name("t"), [Name("id")], [Name("title")]), (Name("mc"), [Name("movie_id"), Name("company_id")], []), (Name("it"), [Name("id")], []), (Name("cn"), [Name("id")], [])]
[Lookup([0 @ mi.movie_id = 0 @ t.id), 0 @ mi.movie_id = 1 @ mc.movie_id), 1 @ mi.info_type_id = 2 @ it.id)]), Intersect([mc.company_id @ 1), cn.id @ 3)])]

TreeOp { name: "HASH_JOIN", timing: 0.005018, cardinality: 1558, extra_info: "INNER\nn.id = an.person_id\n", children: [TreeOp { name: "PROJECTION", timing: 0.0, cardinality: 6768, extra_info: "#1\n#2\n", children: [TreeOp { name: "FILTER", timing: 0.01044, cardinality: 6768, extra_info: "contains(n.name, 'Ang')", children: [TreeOp { name: "SEQ_SCAN", timing: 0.007756, cardinality: 961555, extra_info: "name\n[INFOSEPARATOR]\ngender\nname\nid\n[INFOSEPARATOR]\nFilters: gender=f AND gender IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "name", attributes: [name.gender, name.name, name.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1, .#2] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.0001, cardinality: 901343, extra_info: "aka_name\n[INFOSEPARATOR]\nperson_id", children: [], attr: Some(Scan(ScanAttr { table_name: "aka_name", attributes: [aka_name.person_id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: n.id, right_attr: an.person_id }] })) }
[(Name("n"), [Name("id")], [Name("name")]), (Name("an"), [Name("person_id")], [])]
[Lookup([0 @ n.id = 0 @ an.person_id)])]

TreeOp { name: "HASH_JOIN", timing: 0.003284, cardinality: 184, extra_info: "INNER\nci.movie_id = mc.movie_id\nci.movie_id = t.id\nci.movie_id = mi.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.002338, cardinality: 387, extra_info: "INNER\nci.person_id = an.person_id\nci.person_id = n.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.021909, cardinality: 255651, extra_info: "INNER\nci.person_role_id = chn.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.002697, cardinality: 276166, extra_info: "INNER\nci.role_id = rt.id\n", children: [TreeOp { name: "PROJECTION", timing: 0.000241, cardinality: 867477, extra_info: "#1\n#2\n#3\n#4\n", children: [TreeOp { name: "FILTER", timing: 0.240378, cardinality: 867477, extra_info: "(ci.note = '(voice)' OR ci.note = '(voice: Japanese version)' OR ci.note = '(voice) (uncredited)' OR ci.note = '(voice: English version)')", children: [TreeOp { name: "SEQ_SCAN", timing: 0.11902, cardinality: 36244344, extra_info: "cast_info\n[INFOSEPARATOR]\nnote\nmovie_id\nperson_id\nrole_id\nperson_role_id", children: [], attr: Some(Scan(ScanAttr { table_name: "cast_info", attributes: [cast_info.note, cast_info.movie_id, cast_info.person_id, cast_info.role_id, cast_info.person_role_id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1, .#2, .#3, .#4] })) }, TreeOp { name: "SEQ_SCAN", timing: 5e-6, cardinality: 1, extra_info: "role_type\n[INFOSEPARATOR]\nrole\nid\n[INFOSEPARATOR]\nFilters: role=actress AND role IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "role_type", attributes: [role_type.role, role_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: ci.role_id, right_attr: rt.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.0004, cardinality: 3140339, extra_info: "char_name\n[INFOSEPARATOR]\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "char_name", attributes: [char_name.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: ci.person_role_id, right_attr: chn.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.005018, cardinality: 1558, extra_info: "INNER\nn.id = an.person_id\n", children: [TreeOp { name: "PROJECTION", timing: 0.0, cardinality: 6768, extra_info: "#1\n#2\n", children: [TreeOp { name: "FILTER", timing: 0.01044, cardinality: 6768, extra_info: "contains(n.name, 'Ang')", children: [TreeOp { name: "SEQ_SCAN", timing: 0.007756, cardinality: 961555, extra_info: "name\n[INFOSEPARATOR]\ngender\nname\nid\n[INFOSEPARATOR]\nFilters: gender=f AND gender IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "name", attributes: [name.gender, name.name, name.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1, .#2] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.0001, cardinality: 901343, extra_info: "aka_name\n[INFOSEPARATOR]\nperson_id", children: [], attr: Some(Scan(ScanAttr { table_name: "aka_name", attributes: [aka_name.person_id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: n.id, right_attr: an.person_id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: ci.person_id, right_attr: an.person_id }, Equalizer { left_attr: ci.person_id, right_attr: n.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.001598, cardinality: 116277, extra_info: "INNER\nmc.company_id = cn.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000256, cardinality: 124224, extra_info: "INNER\nmi.info_type_id = it.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.032464, cardinality: 124234, extra_info: "INNER\nt.id = mc.movie_id\nmi.movie_id = mc.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.027478, cardinality: 298264, extra_info: "INNER\nmi.movie_id = t.id\n", children: [TreeOp { name: "PROJECTION", timing: 9.9e-5, cardinality: 451104, extra_info: "#1\n#2\n", children: [TreeOp { name: "FILTER", timing: 0.175955, cardinality: 451104, extra_info: "((mi.info ~~ 'Japan:%200%') OR (mi.info ~~ 'USA:%200%'))", children: [TreeOp { name: "SEQ_SCAN", timing: 0.084309, cardinality: 14835720, extra_info: "movie_info\n[INFOSEPARATOR]\ninfo\nmovie_id\ninfo_type_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info", attributes: [movie_info.info, movie_info.movie_id, movie_info.info_type_id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1, .#2] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.034113, cardinality: 574556, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\nid\ntitle\n[INFOSEPARATOR]\nFilters: production_year>=2005 AND production_year<=2009 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.id, title.title] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi.movie_id, right_attr: t.id }] })) }, TreeOp { name: "PROJECTION", timing: 5.4e-5, cardinality: 590994, extra_info: "#1\n#2\n", children: [TreeOp { name: "FILTER", timing: 0.057071, cardinality: 590994, extra_info: "((mc.note IS NOT NULL) AND (contains(mc.note, '(USA)') OR contains(mc.note, '(worldwide)')))", children: [TreeOp { name: "SEQ_SCAN", timing: 0.005791, cardinality: 2609129, extra_info: "movie_companies\n[INFOSEPARATOR]\nnote\nmovie_id\ncompany_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_companies", attributes: [movie_companies.note, movie_companies.movie_id, movie_companies.company_id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1, .#2] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: mc.movie_id }, Equalizer { left_attr: mi.movie_id, right_attr: mc.movie_id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 8e-6, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=release dates AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi.info_type_id, right_attr: it.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.002256, cardinality: 84843, extra_info: "company_name\n[INFOSEPARATOR]\ncountry_code\nid\n[INFOSEPARATOR]\nFilters: country_code=[us] AND country_code IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "company_name", attributes: [company_name.country_code, company_name.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.company_id, right_attr: cn.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: ci.movie_id, right_attr: mc.movie_id }, Equalizer { left_attr: ci.movie_id, right_attr: t.id }, Equalizer { left_attr: ci.movie_id, right_attr: mi.movie_id }] })) }
[(Name("ci"), [Name("role_id"), Name("person_role_id"), Name("person_id"), Name("movie_id")], []), (Name("rt"), [Name("id")], []), (Name("chn"), [Name("id")], []), (Node(TreeOp { name: "HASH_JOIN", timing: 0.005018, cardinality: 1558, extra_info: "INNER\nn.id = an.person_id\n", children: [TreeOp { name: "PROJECTION", timing: 0.0, cardinality: 6768, extra_info: "#1\n#2\n", children: [TreeOp { name: "FILTER", timing: 0.01044, cardinality: 6768, extra_info: "contains(n.name, 'Ang')", children: [TreeOp { name: "SEQ_SCAN", timing: 0.007756, cardinality: 961555, extra_info: "name\n[INFOSEPARATOR]\ngender\nname\nid\n[INFOSEPARATOR]\nFilters: gender=f AND gender IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "name", attributes: [name.gender, name.name, name.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1, .#2] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.0001, cardinality: 901343, extra_info: "aka_name\n[INFOSEPARATOR]\nperson_id", children: [], attr: Some(Scan(ScanAttr { table_name: "aka_name", attributes: [aka_name.person_id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: n.id, right_attr: an.person_id }] })) }), [Id(0)], [Id(1)]), (Node(TreeOp { name: "HASH_JOIN", timing: 0.001598, cardinality: 116277, extra_info: "INNER\nmc.company_id = cn.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000256, cardinality: 124224, extra_info: "INNER\nmi.info_type_id = it.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.032464, cardinality: 124234, extra_info: "INNER\nt.id = mc.movie_id\nmi.movie_id = mc.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.027478, cardinality: 298264, extra_info: "INNER\nmi.movie_id = t.id\n", children: [TreeOp { name: "PROJECTION", timing: 9.9e-5, cardinality: 451104, extra_info: "#1\n#2\n", children: [TreeOp { name: "FILTER", timing: 0.175955, cardinality: 451104, extra_info: "((mi.info ~~ 'Japan:%200%') OR (mi.info ~~ 'USA:%200%'))", children: [TreeOp { name: "SEQ_SCAN", timing: 0.084309, cardinality: 14835720, extra_info: "movie_info\n[INFOSEPARATOR]\ninfo\nmovie_id\ninfo_type_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info", attributes: [movie_info.info, movie_info.movie_id, movie_info.info_type_id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1, .#2] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.034113, cardinality: 574556, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\nid\ntitle\n[INFOSEPARATOR]\nFilters: production_year>=2005 AND production_year<=2009 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.id, title.title] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi.movie_id, right_attr: t.id }] })) }, TreeOp { name: "PROJECTION", timing: 5.4e-5, cardinality: 590994, extra_info: "#1\n#2\n", children: [TreeOp { name: "FILTER", timing: 0.057071, cardinality: 590994, extra_info: "((mc.note IS NOT NULL) AND (contains(mc.note, '(USA)') OR contains(mc.note, '(worldwide)')))", children: [TreeOp { name: "SEQ_SCAN", timing: 0.005791, cardinality: 2609129, extra_info: "movie_companies\n[INFOSEPARATOR]\nnote\nmovie_id\ncompany_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_companies", attributes: [movie_companies.note, movie_companies.movie_id, movie_companies.company_id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1, .#2] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: mc.movie_id }, Equalizer { left_attr: mi.movie_id, right_attr: mc.movie_id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 8e-6, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=release dates AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi.info_type_id, right_attr: it.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.002256, cardinality: 84843, extra_info: "company_name\n[INFOSEPARATOR]\ncountry_code\nid\n[INFOSEPARATOR]\nFilters: country_code=[us] AND country_code IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "company_name", attributes: [company_name.country_code, company_name.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.company_id, right_attr: cn.id }] })) }), [Id(0)], [Id(1), Id(2), Id(3)])]
[Lookup([0 @ ci.role_id = 0 @ rt.id), 1 @ ci.person_role_id = 1 @ chn.id), 2 @ ci.person_id = 2 @ n.id), 3 @ ci.movie_id = 3 @ mi.movie_id)])]
