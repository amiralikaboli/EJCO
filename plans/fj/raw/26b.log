
TreeOp { name: "HASH_JOIN", timing: 9.5e-5, cardinality: 85941, extra_info: "INNER\ncc.status_id = cct2.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000145, cardinality: 85941, extra_info: "INNER\ncc.subject_id = cct1.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 3.7e-5, cardinality: 135086, extra_info: "complete_cast\n[INFOSEPARATOR]\nmovie_id\nsubject_id\nstatus_id", children: [], attr: Some(Scan(ScanAttr { table_name: "complete_cast", attributes: [complete_cast.movie_id, complete_cast.subject_id, complete_cast.status_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 2e-6, cardinality: 1, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=cast AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.subject_id, right_attr: cct1.id }] })) }, TreeOp { name: "PROJECTION", timing: 0.0, cardinality: 2, extra_info: "#1\n", children: [TreeOp { name: "FILTER", timing: 1e-6, cardinality: 2, extra_info: "contains(cct2.kind, 'complete')", children: [TreeOp { name: "SEQ_SCAN", timing: 1e-6, cardinality: 4, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.status_id, right_attr: cct2.id }] })) }
[(Name("cc"), [Name("subject_id"), Name("status_id")], [Name("movie_id")]), (Name("cct1"), [Name("id")], []), (Name("cct2"), [Name("id")], [])]
[Lookup([0 @ cc.subject_id = 0 @ cct1.id), 1 @ cc.status_id = 1 @ cct2.id)])]

TreeOp { name: "HASH_JOIN", timing: 0.001497, cardinality: 2413, extra_info: "INNER\nmi_idx.movie_id = cc.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000734, cardinality: 15849, extra_info: "INNER\nmi_idx.info_type_id = it2.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.011478, cardinality: 52629, extra_info: "movie_info_idx\n[INFOSEPARATOR]\ninfo\nmovie_id\ninfo_type_id\n[INFOSEPARATOR]\nFilters: info>8.0 AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info_idx", attributes: [movie_info_idx.info, movie_info_idx.movie_id, movie_info_idx.info_type_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 4e-6, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=rating AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi_idx.info_type_id, right_attr: it2.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 9.5e-5, cardinality: 85941, extra_info: "INNER\ncc.status_id = cct2.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000145, cardinality: 85941, extra_info: "INNER\ncc.subject_id = cct1.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 3.7e-5, cardinality: 135086, extra_info: "complete_cast\n[INFOSEPARATOR]\nmovie_id\nsubject_id\nstatus_id", children: [], attr: Some(Scan(ScanAttr { table_name: "complete_cast", attributes: [complete_cast.movie_id, complete_cast.subject_id, complete_cast.status_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 2e-6, cardinality: 1, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=cast AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.subject_id, right_attr: cct1.id }] })) }, TreeOp { name: "PROJECTION", timing: 0.0, cardinality: 2, extra_info: "#1\n", children: [TreeOp { name: "FILTER", timing: 1e-6, cardinality: 2, extra_info: "contains(cct2.kind, 'complete')", children: [TreeOp { name: "SEQ_SCAN", timing: 1e-6, cardinality: 4, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.status_id, right_attr: cct2.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi_idx.movie_id, right_attr: cc.movie_id }] })) }
[(Name("mi_idx"), [Name("info_type_id"), Name("movie_id")], [Name("info")]), (Name("it2"), [Name("id")], []), (Node(TreeOp { name: "HASH_JOIN", timing: 9.5e-5, cardinality: 85941, extra_info: "INNER\ncc.status_id = cct2.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000145, cardinality: 85941, extra_info: "INNER\ncc.subject_id = cct1.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 3.7e-5, cardinality: 135086, extra_info: "complete_cast\n[INFOSEPARATOR]\nmovie_id\nsubject_id\nstatus_id", children: [], attr: Some(Scan(ScanAttr { table_name: "complete_cast", attributes: [complete_cast.movie_id, complete_cast.subject_id, complete_cast.status_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 2e-6, cardinality: 1, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=cast AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.subject_id, right_attr: cct1.id }] })) }, TreeOp { name: "PROJECTION", timing: 0.0, cardinality: 2, extra_info: "#1\n", children: [TreeOp { name: "FILTER", timing: 1e-6, cardinality: 2, extra_info: "contains(cct2.kind, 'complete')", children: [TreeOp { name: "SEQ_SCAN", timing: 1e-6, cardinality: 4, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.status_id, right_attr: cct2.id }] })) }), [Id(2)], [Id(0), Id(1)])]
[Lookup([0 @ mi_idx.info_type_id = 0 @ it2.id), 1 @ mi_idx.movie_id = 1 @ cc.movie_id)])]

TreeOp { name: "HASH_JOIN", timing: 0.003669, cardinality: 32, extra_info: "INNER\nt.id = cc.movie_id\nt.id = mi_idx.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.002669, cardinality: 216282, extra_info: "INNER\nt.kind_id = kt.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.029106, cardinality: 1012920, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\nkind_id\nid\ntitle\n[INFOSEPARATOR]\nFilters: production_year>2005 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.kind_id, title.id, title.title] })) }, TreeOp { name: "SEQ_SCAN", timing: 4e-6, cardinality: 1, extra_info: "kind_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=movie AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "kind_type", attributes: [kind_type.kind, kind_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.kind_id, right_attr: kt.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.001497, cardinality: 2413, extra_info: "INNER\nmi_idx.movie_id = cc.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000734, cardinality: 15849, extra_info: "INNER\nmi_idx.info_type_id = it2.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.011478, cardinality: 52629, extra_info: "movie_info_idx\n[INFOSEPARATOR]\ninfo\nmovie_id\ninfo_type_id\n[INFOSEPARATOR]\nFilters: info>8.0 AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info_idx", attributes: [movie_info_idx.info, movie_info_idx.movie_id, movie_info_idx.info_type_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 4e-6, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=rating AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi_idx.info_type_id, right_attr: it2.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 9.5e-5, cardinality: 85941, extra_info: "INNER\ncc.status_id = cct2.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000145, cardinality: 85941, extra_info: "INNER\ncc.subject_id = cct1.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 3.7e-5, cardinality: 135086, extra_info: "complete_cast\n[INFOSEPARATOR]\nmovie_id\nsubject_id\nstatus_id", children: [], attr: Some(Scan(ScanAttr { table_name: "complete_cast", attributes: [complete_cast.movie_id, complete_cast.subject_id, complete_cast.status_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 2e-6, cardinality: 1, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=cast AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.subject_id, right_attr: cct1.id }] })) }, TreeOp { name: "PROJECTION", timing: 0.0, cardinality: 2, extra_info: "#1\n", children: [TreeOp { name: "FILTER", timing: 1e-6, cardinality: 2, extra_info: "contains(cct2.kind, 'complete')", children: [TreeOp { name: "SEQ_SCAN", timing: 1e-6, cardinality: 4, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.status_id, right_attr: cct2.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi_idx.movie_id, right_attr: cc.movie_id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: cc.movie_id }, Equalizer { left_attr: t.id, right_attr: mi_idx.movie_id }] })) }
[(Name("t"), [Name("kind_id"), Name("id")], [Name("title")]), (Name("kt"), [Name("id")], []), (Node(TreeOp { name: "HASH_JOIN", timing: 0.001497, cardinality: 2413, extra_info: "INNER\nmi_idx.movie_id = cc.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000734, cardinality: 15849, extra_info: "INNER\nmi_idx.info_type_id = it2.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.011478, cardinality: 52629, extra_info: "movie_info_idx\n[INFOSEPARATOR]\ninfo\nmovie_id\ninfo_type_id\n[INFOSEPARATOR]\nFilters: info>8.0 AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info_idx", attributes: [movie_info_idx.info, movie_info_idx.movie_id, movie_info_idx.info_type_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 4e-6, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=rating AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi_idx.info_type_id, right_attr: it2.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 9.5e-5, cardinality: 85941, extra_info: "INNER\ncc.status_id = cct2.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000145, cardinality: 85941, extra_info: "INNER\ncc.subject_id = cct1.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 3.7e-5, cardinality: 135086, extra_info: "complete_cast\n[INFOSEPARATOR]\nmovie_id\nsubject_id\nstatus_id", children: [], attr: Some(Scan(ScanAttr { table_name: "complete_cast", attributes: [complete_cast.movie_id, complete_cast.subject_id, complete_cast.status_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 2e-6, cardinality: 1, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=cast AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.subject_id, right_attr: cct1.id }] })) }, TreeOp { name: "PROJECTION", timing: 0.0, cardinality: 2, extra_info: "#1\n", children: [TreeOp { name: "FILTER", timing: 1e-6, cardinality: 2, extra_info: "contains(cct2.kind, 'complete')", children: [TreeOp { name: "SEQ_SCAN", timing: 1e-6, cardinality: 4, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.status_id, right_attr: cct2.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi_idx.movie_id, right_attr: cc.movie_id }] })) }), [Id(1)], [Id(0), Id(2), Id(3), Id(4)])]
[Lookup([0 @ t.kind_id = 0 @ kt.id), 1 @ t.id = 1 @ cc.movie_id)])]

TreeOp { name: "HASH_JOIN", timing: 5.7e-5, cardinality: 6, extra_info: "INNER\nmk.movie_id = cc.movie_id\nmk.movie_id = t.id\nmk.movie_id = mi_idx.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.003578, cardinality: 9984, extra_info: "INNER\nmk.keyword_id = k.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.00075, cardinality: 4523930, extra_info: "movie_keyword\n[INFOSEPARATOR]\nmovie_id\nkeyword_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_keyword", attributes: [movie_keyword.movie_id, movie_keyword.keyword_id] })) }, TreeOp { name: "PROJECTION", timing: 0.0, cardinality: 4, extra_info: "#1\n", children: [TreeOp { name: "FILTER", timing: 0.00114, cardinality: 4, extra_info: "(k.keyword = 'superhero' OR k.keyword = 'marvel-comics' OR k.keyword = 'based-on-comic' OR k.keyword = 'fight')", children: [TreeOp { name: "SEQ_SCAN", timing: 0.000937, cardinality: 134170, extra_info: "keyword\n[INFOSEPARATOR]\nkeyword\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "keyword", attributes: [keyword.keyword, keyword.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mk.keyword_id, right_attr: k.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.003669, cardinality: 32, extra_info: "INNER\nt.id = cc.movie_id\nt.id = mi_idx.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.002669, cardinality: 216282, extra_info: "INNER\nt.kind_id = kt.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.029106, cardinality: 1012920, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\nkind_id\nid\ntitle\n[INFOSEPARATOR]\nFilters: production_year>2005 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.kind_id, title.id, title.title] })) }, TreeOp { name: "SEQ_SCAN", timing: 4e-6, cardinality: 1, extra_info: "kind_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=movie AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "kind_type", attributes: [kind_type.kind, kind_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.kind_id, right_attr: kt.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.001497, cardinality: 2413, extra_info: "INNER\nmi_idx.movie_id = cc.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000734, cardinality: 15849, extra_info: "INNER\nmi_idx.info_type_id = it2.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.011478, cardinality: 52629, extra_info: "movie_info_idx\n[INFOSEPARATOR]\ninfo\nmovie_id\ninfo_type_id\n[INFOSEPARATOR]\nFilters: info>8.0 AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info_idx", attributes: [movie_info_idx.info, movie_info_idx.movie_id, movie_info_idx.info_type_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 4e-6, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=rating AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi_idx.info_type_id, right_attr: it2.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 9.5e-5, cardinality: 85941, extra_info: "INNER\ncc.status_id = cct2.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000145, cardinality: 85941, extra_info: "INNER\ncc.subject_id = cct1.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 3.7e-5, cardinality: 135086, extra_info: "complete_cast\n[INFOSEPARATOR]\nmovie_id\nsubject_id\nstatus_id", children: [], attr: Some(Scan(ScanAttr { table_name: "complete_cast", attributes: [complete_cast.movie_id, complete_cast.subject_id, complete_cast.status_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 2e-6, cardinality: 1, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=cast AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.subject_id, right_attr: cct1.id }] })) }, TreeOp { name: "PROJECTION", timing: 0.0, cardinality: 2, extra_info: "#1\n", children: [TreeOp { name: "FILTER", timing: 1e-6, cardinality: 2, extra_info: "contains(cct2.kind, 'complete')", children: [TreeOp { name: "SEQ_SCAN", timing: 1e-6, cardinality: 4, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.status_id, right_attr: cct2.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi_idx.movie_id, right_attr: cc.movie_id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: cc.movie_id }, Equalizer { left_attr: t.id, right_attr: mi_idx.movie_id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mk.movie_id, right_attr: cc.movie_id }, Equalizer { left_attr: mk.movie_id, right_attr: t.id }, Equalizer { left_attr: mk.movie_id, right_attr: mi_idx.movie_id }] })) }
[(Name("mk"), [Name("keyword_id"), Name("movie_id")], []), (Name("k"), [Name("id")], []), (Node(TreeOp { name: "HASH_JOIN", timing: 0.003669, cardinality: 32, extra_info: "INNER\nt.id = cc.movie_id\nt.id = mi_idx.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.002669, cardinality: 216282, extra_info: "INNER\nt.kind_id = kt.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.029106, cardinality: 1012920, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\nkind_id\nid\ntitle\n[INFOSEPARATOR]\nFilters: production_year>2005 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.kind_id, title.id, title.title] })) }, TreeOp { name: "SEQ_SCAN", timing: 4e-6, cardinality: 1, extra_info: "kind_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=movie AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "kind_type", attributes: [kind_type.kind, kind_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.kind_id, right_attr: kt.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.001497, cardinality: 2413, extra_info: "INNER\nmi_idx.movie_id = cc.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000734, cardinality: 15849, extra_info: "INNER\nmi_idx.info_type_id = it2.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.011478, cardinality: 52629, extra_info: "movie_info_idx\n[INFOSEPARATOR]\ninfo\nmovie_id\ninfo_type_id\n[INFOSEPARATOR]\nFilters: info>8.0 AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info_idx", attributes: [movie_info_idx.info, movie_info_idx.movie_id, movie_info_idx.info_type_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 4e-6, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=rating AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi_idx.info_type_id, right_attr: it2.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 9.5e-5, cardinality: 85941, extra_info: "INNER\ncc.status_id = cct2.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000145, cardinality: 85941, extra_info: "INNER\ncc.subject_id = cct1.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 3.7e-5, cardinality: 135086, extra_info: "complete_cast\n[INFOSEPARATOR]\nmovie_id\nsubject_id\nstatus_id", children: [], attr: Some(Scan(ScanAttr { table_name: "complete_cast", attributes: [complete_cast.movie_id, complete_cast.subject_id, complete_cast.status_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 2e-6, cardinality: 1, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=cast AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.subject_id, right_attr: cct1.id }] })) }, TreeOp { name: "PROJECTION", timing: 0.0, cardinality: 2, extra_info: "#1\n", children: [TreeOp { name: "FILTER", timing: 1e-6, cardinality: 2, extra_info: "contains(cct2.kind, 'complete')", children: [TreeOp { name: "SEQ_SCAN", timing: 1e-6, cardinality: 4, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.status_id, right_attr: cct2.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi_idx.movie_id, right_attr: cc.movie_id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: cc.movie_id }, Equalizer { left_attr: t.id, right_attr: mi_idx.movie_id }] })) }), [Id(1)], [Id(0), Id(2), Id(3), Id(4), Id(5), Id(6)])]
[Lookup([0 @ mk.keyword_id = 0 @ k.id), 1 @ mk.movie_id = 1 @ cc.movie_id)])]

TreeOp { name: "HASH_JOIN", timing: 0.003962, cardinality: 93, extra_info: "INNER\nci.movie_id = cc.movie_id\nci.movie_id = t.id\nci.movie_id = mk.movie_id\nci.movie_id = mi_idx.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.182788, cardinality: 623586, extra_info: "INNER\nci.person_role_id = chn.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.311479, cardinality: 36244344, extra_info: "INNER\nci.person_id = n.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.016201, cardinality: 36244344, extra_info: "cast_info\n[INFOSEPARATOR]\nmovie_id\nperson_role_id\nperson_id", children: [], attr: Some(Scan(ScanAttr { table_name: "cast_info", attributes: [cast_info.movie_id, cast_info.person_role_id, cast_info.person_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.000515, cardinality: 4167491, extra_info: "name\n[INFOSEPARATOR]\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "name", attributes: [name.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: ci.person_id, right_attr: n.id }] })) }, TreeOp { name: "FILTER", timing: 0.084186, cardinality: 180152, extra_info: "(contains(chn.name, 'man') OR contains(chn.name, 'Man'))", children: [TreeOp { name: "SEQ_SCAN", timing: 0.020876, cardinality: 3140339, extra_info: "char_name\n[INFOSEPARATOR]\nname\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "char_name", attributes: [char_name.name, char_name.id] })) }], attr: Some(Filter) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: ci.person_role_id, right_attr: chn.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 5.7e-5, cardinality: 6, extra_info: "INNER\nmk.movie_id = cc.movie_id\nmk.movie_id = t.id\nmk.movie_id = mi_idx.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.003578, cardinality: 9984, extra_info: "INNER\nmk.keyword_id = k.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.00075, cardinality: 4523930, extra_info: "movie_keyword\n[INFOSEPARATOR]\nmovie_id\nkeyword_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_keyword", attributes: [movie_keyword.movie_id, movie_keyword.keyword_id] })) }, TreeOp { name: "PROJECTION", timing: 0.0, cardinality: 4, extra_info: "#1\n", children: [TreeOp { name: "FILTER", timing: 0.00114, cardinality: 4, extra_info: "(k.keyword = 'superhero' OR k.keyword = 'marvel-comics' OR k.keyword = 'based-on-comic' OR k.keyword = 'fight')", children: [TreeOp { name: "SEQ_SCAN", timing: 0.000937, cardinality: 134170, extra_info: "keyword\n[INFOSEPARATOR]\nkeyword\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "keyword", attributes: [keyword.keyword, keyword.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mk.keyword_id, right_attr: k.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.003669, cardinality: 32, extra_info: "INNER\nt.id = cc.movie_id\nt.id = mi_idx.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.002669, cardinality: 216282, extra_info: "INNER\nt.kind_id = kt.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.029106, cardinality: 1012920, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\nkind_id\nid\ntitle\n[INFOSEPARATOR]\nFilters: production_year>2005 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.kind_id, title.id, title.title] })) }, TreeOp { name: "SEQ_SCAN", timing: 4e-6, cardinality: 1, extra_info: "kind_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=movie AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "kind_type", attributes: [kind_type.kind, kind_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.kind_id, right_attr: kt.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.001497, cardinality: 2413, extra_info: "INNER\nmi_idx.movie_id = cc.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000734, cardinality: 15849, extra_info: "INNER\nmi_idx.info_type_id = it2.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.011478, cardinality: 52629, extra_info: "movie_info_idx\n[INFOSEPARATOR]\ninfo\nmovie_id\ninfo_type_id\n[INFOSEPARATOR]\nFilters: info>8.0 AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info_idx", attributes: [movie_info_idx.info, movie_info_idx.movie_id, movie_info_idx.info_type_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 4e-6, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=rating AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi_idx.info_type_id, right_attr: it2.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 9.5e-5, cardinality: 85941, extra_info: "INNER\ncc.status_id = cct2.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000145, cardinality: 85941, extra_info: "INNER\ncc.subject_id = cct1.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 3.7e-5, cardinality: 135086, extra_info: "complete_cast\n[INFOSEPARATOR]\nmovie_id\nsubject_id\nstatus_id", children: [], attr: Some(Scan(ScanAttr { table_name: "complete_cast", attributes: [complete_cast.movie_id, complete_cast.subject_id, complete_cast.status_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 2e-6, cardinality: 1, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=cast AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.subject_id, right_attr: cct1.id }] })) }, TreeOp { name: "PROJECTION", timing: 0.0, cardinality: 2, extra_info: "#1\n", children: [TreeOp { name: "FILTER", timing: 1e-6, cardinality: 2, extra_info: "contains(cct2.kind, 'complete')", children: [TreeOp { name: "SEQ_SCAN", timing: 1e-6, cardinality: 4, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.status_id, right_attr: cct2.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi_idx.movie_id, right_attr: cc.movie_id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: cc.movie_id }, Equalizer { left_attr: t.id, right_attr: mi_idx.movie_id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mk.movie_id, right_attr: cc.movie_id }, Equalizer { left_attr: mk.movie_id, right_attr: t.id }, Equalizer { left_attr: mk.movie_id, right_attr: mi_idx.movie_id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: ci.movie_id, right_attr: cc.movie_id }, Equalizer { left_attr: ci.movie_id, right_attr: t.id }, Equalizer { left_attr: ci.movie_id, right_attr: mk.movie_id }, Equalizer { left_attr: ci.movie_id, right_attr: mi_idx.movie_id }] })) }
[(Name("ci"), [Name("person_id"), Name("person_role_id"), Name("movie_id")], []), (Name("n"), [Name("id")], []), (Name("chn"), [Name("id")], [Name("name")]), (Node(TreeOp { name: "HASH_JOIN", timing: 5.7e-5, cardinality: 6, extra_info: "INNER\nmk.movie_id = cc.movie_id\nmk.movie_id = t.id\nmk.movie_id = mi_idx.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.003578, cardinality: 9984, extra_info: "INNER\nmk.keyword_id = k.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.00075, cardinality: 4523930, extra_info: "movie_keyword\n[INFOSEPARATOR]\nmovie_id\nkeyword_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_keyword", attributes: [movie_keyword.movie_id, movie_keyword.keyword_id] })) }, TreeOp { name: "PROJECTION", timing: 0.0, cardinality: 4, extra_info: "#1\n", children: [TreeOp { name: "FILTER", timing: 0.00114, cardinality: 4, extra_info: "(k.keyword = 'superhero' OR k.keyword = 'marvel-comics' OR k.keyword = 'based-on-comic' OR k.keyword = 'fight')", children: [TreeOp { name: "SEQ_SCAN", timing: 0.000937, cardinality: 134170, extra_info: "keyword\n[INFOSEPARATOR]\nkeyword\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "keyword", attributes: [keyword.keyword, keyword.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mk.keyword_id, right_attr: k.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.003669, cardinality: 32, extra_info: "INNER\nt.id = cc.movie_id\nt.id = mi_idx.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.002669, cardinality: 216282, extra_info: "INNER\nt.kind_id = kt.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.029106, cardinality: 1012920, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\nkind_id\nid\ntitle\n[INFOSEPARATOR]\nFilters: production_year>2005 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.kind_id, title.id, title.title] })) }, TreeOp { name: "SEQ_SCAN", timing: 4e-6, cardinality: 1, extra_info: "kind_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=movie AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "kind_type", attributes: [kind_type.kind, kind_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.kind_id, right_attr: kt.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.001497, cardinality: 2413, extra_info: "INNER\nmi_idx.movie_id = cc.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000734, cardinality: 15849, extra_info: "INNER\nmi_idx.info_type_id = it2.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.011478, cardinality: 52629, extra_info: "movie_info_idx\n[INFOSEPARATOR]\ninfo\nmovie_id\ninfo_type_id\n[INFOSEPARATOR]\nFilters: info>8.0 AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info_idx", attributes: [movie_info_idx.info, movie_info_idx.movie_id, movie_info_idx.info_type_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 4e-6, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=rating AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi_idx.info_type_id, right_attr: it2.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 9.5e-5, cardinality: 85941, extra_info: "INNER\ncc.status_id = cct2.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000145, cardinality: 85941, extra_info: "INNER\ncc.subject_id = cct1.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 3.7e-5, cardinality: 135086, extra_info: "complete_cast\n[INFOSEPARATOR]\nmovie_id\nsubject_id\nstatus_id", children: [], attr: Some(Scan(ScanAttr { table_name: "complete_cast", attributes: [complete_cast.movie_id, complete_cast.subject_id, complete_cast.status_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 2e-6, cardinality: 1, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=cast AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.subject_id, right_attr: cct1.id }] })) }, TreeOp { name: "PROJECTION", timing: 0.0, cardinality: 2, extra_info: "#1\n", children: [TreeOp { name: "FILTER", timing: 1e-6, cardinality: 2, extra_info: "contains(cct2.kind, 'complete')", children: [TreeOp { name: "SEQ_SCAN", timing: 1e-6, cardinality: 4, extra_info: "comp_cast_type\n[INFOSEPARATOR]\nkind\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "comp_cast_type", attributes: [comp_cast_type.kind, comp_cast_type.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: cc.status_id, right_attr: cct2.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi_idx.movie_id, right_attr: cc.movie_id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: cc.movie_id }, Equalizer { left_attr: t.id, right_attr: mi_idx.movie_id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mk.movie_id, right_attr: cc.movie_id }, Equalizer { left_attr: mk.movie_id, right_attr: t.id }, Equalizer { left_attr: mk.movie_id, right_attr: mi_idx.movie_id }] })) }), [Id(1)], [Id(0), Id(2), Id(3), Id(4), Id(5), Id(6), Id(7)])]
[Lookup([2 @ ci.movie_id = 2 @ cc.movie_id), 1 @ ci.person_role_id = 1 @ chn.id), 0 @ ci.person_id = 0 @ n.id)])]
