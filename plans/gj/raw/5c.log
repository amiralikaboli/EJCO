
TreeOp { name: "HASH_JOIN", timing: 0.000196, cardinality: 669, extra_info: "INNER\nmc.company_type_id = ct.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000144, cardinality: 99367, extra_info: "INNER\nmi.info_type_id = it.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.031782, cardinality: 99367, extra_info: "INNER\nt.id = mc.movie_id\nmi.movie_id = mc.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.056718, cardinality: 476405, extra_info: "INNER\nmi.movie_id = t.id\n", children: [TreeOp { name: "PROJECTION", timing: 8.1e-5, cardinality: 706674, extra_info: "#1\n#2\n", children: [TreeOp { name: "FILTER", timing: 0.009977, cardinality: 706674, extra_info: "IN (...)", children: [TreeOp { name: "HASH_JOIN", timing: 0.20261, cardinality: 14835720, extra_info: "MARK\nmi.info = #0\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.084471, cardinality: 14835720, extra_info: "movie_info\n[INFOSEPARATOR]\ninfo\nmovie_id\ninfo_type_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info", attributes: [movie_info.info, movie_info.movie_id, movie_info.info_type_id] })) }, TreeOp { name: "CHUNK_SCAN", timing: 0.0, cardinality: 10, extra_info: "", children: [], attr: None }], attr: None }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1, .#2] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.027609, cardinality: 1749032, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\nid\ntitle\n[INFOSEPARATOR]\nFilters: production_year>1990 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.id, title.title] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi.movie_id, right_attr: t.id }] })) }, TreeOp { name: "PROJECTION", timing: 4.2e-5, cardinality: 295628, extra_info: "#1\n#2\n", children: [TreeOp { name: "FILTER", timing: 0.043793, cardinality: 295628, extra_info: "(contains(mc.note, '(USA)') AND NOT(contains(mc.note, '(TV)')))", children: [TreeOp { name: "SEQ_SCAN", timing: 0.005712, cardinality: 2609129, extra_info: "movie_companies\n[INFOSEPARATOR]\nnote\nmovie_id\ncompany_type_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_companies", attributes: [movie_companies.note, movie_companies.movie_id, movie_companies.company_type_id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1, .#2] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: mc.movie_id }, Equalizer { left_attr: mi.movie_id, right_attr: mc.movie_id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 1e-6, cardinality: 113, extra_info: "info_type\n[INFOSEPARATOR]\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi.info_type_id, right_attr: it.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 5e-6, cardinality: 1, extra_info: "company_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=production companies AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "company_type", attributes: [company_type.kind, company_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.company_type_id, right_attr: ct.id }] })) }
[(Name("mi"), [Name("movie_id"), Name("info_type_id")], []), (Name("t"), [Name("id")], [Name("title")]), (Name("mc"), [Name("movie_id"), Name("company_type_id")], []), (Name("it"), [Name("id")], []), (Name("ct"), [Name("id")], [])]
[Lookup([0 @ mi.movie_id = 0 @ t.id), 0 @ mi.movie_id = 1 @ mc.movie_id), 1 @ mi.info_type_id = 2 @ it.id)]), Intersect([mc.company_type_id @ 1), ct.id @ 3)])]
