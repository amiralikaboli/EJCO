let mk = load[{<id: int, movie_id: int, keyword_id: int> -> int}]("/Users/s2522996/Documents/free-join/data/imdb_csv/movie_keyword.csv")
let t = load[{<id: int, title: string, imdb_index: string, kind_id: int, production_year: int, imdb_id: string, phonetic_code: string, episode_of_id: int, season_nr: int, episode_nr: int, series_years: string, md5sum: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/15a/t.csv")
let mi = load[{<id: int, movie_id: int, info_type_id: int, info: string, note: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/15a/mi.csv")
let mc = load[{<id: int, movie_id: int, company_id: int, company_type_id: int, note: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/15a/mc.csv")
let k = load[{<id: int, keyword: string, phonetic_code: string> -> int}]("/Users/s2522996/Documents/free-join/data/imdb_csv/keyword.csv")
let it1 = load[{<id: int, info: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/15a/it1.csv")
let ct = load[{<id: int, kind: string> -> int}]("/Users/s2522996/Documents/free-join/data/imdb_csv/company_type.csv")
let cn = load[{<id: int, name: string, country_code: string, imdb_id: string, name_pcode_nf: string, name_pcode_sf: string, md5sum: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/15a/cn.csv")
let at = load[{<id: int, movie_id: int, title: string, imdb_index: string, kind_id: int, production_year: int, phonetic_code: string, episode_of_id: int, season_nr: int, episode_nr: int, note: string, md5sum: string> -> int}]("/Users/s2522996/Documents/free-join/data/imdb_csv/aka_title.csv")


let interm0 = sum(<x0, mk_trie1> <- mk_trie0)
	let t_trie1 = t_trie0(x0) in
	if (t_trie1 != {}) then
		sum(<mk_tuple, _> <- mk_trie1)
			sum(<t_tuple, _> <- t_trie1)
				{ <col0=mk_tuple.movie_id, col1=mk_tuple.keyword_id, col2=t_tuple.title> -> true }
	else
		{}
in


sum(<x0, mi_trie1> <- mi_trie0)
	let interm0_trie1 = interm0_trie0(x0) in
	let mc_trie1 = mc_trie0(x0) in
	if (interm0_trie1 != {} && mc_trie1 != {}) then
		sum(<x1, interm0_trie2> <- interm0_trie1)
			let k_trie1 = k_trie0(x1) in
			if (k_trie1 != {}) then
				sum(<x2, mi_trie2> <- mi_trie1)
					let it1_trie1 = it1_trie0(x2) in
					if (it1_trie1 != {}) then
						sum(<x3, mc_trie2> <- mc_trie1)
							let ct_trie1 = ct_trie0(x3) in
							if (ct_trie1 != {}) then
								sum(<x4, mc_trie3> <- mc_trie2)
									let cn_trie1 = cn_trie0(x4) in
									if (cn_trie1 != {}) then
										let at_trie1 = at_trie0(x0) in
										if (at_trie1 != {}) then
											let mn_mi_info = sum(<mi_tuple, _> <- mi_trie2) mi_tuple.info in
											let mn_interm0_col2 = sum(<interm0_tuple, _> <- interm0_trie2) interm0_tuple.col2 in
											<col2=mn_mi_info, col4=mn_interm0_col2>
										else
											<col2={}, col4={}>
									else
										{}
							else
								{}
					else
						{}
			else
				{}
	else
		{}


