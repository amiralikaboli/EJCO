
TreeOp { name: "HASH_JOIN", timing: 2.5e-5, cardinality: 13063, extra_info: "INNER\npi.info_type_id = it.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.011403, cardinality: 13063, extra_info: "INNER\nn.id = pi.person_id\n", children: [TreeOp { name: "PROJECTION", timing: 1.7e-5, cardinality: 507621, extra_info: "#2\n#3\n", children: [TreeOp { name: "FILTER", timing: 0.00385, cardinality: 507621, extra_info: "(n.gender = 'm' OR (n.gender = 'f' AND prefix(n.name, 'A')))", children: [TreeOp { name: "SEQ_SCAN", timing: 0.027974, cardinality: 1103278, extra_info: "name\n[INFOSEPARATOR]\nname_pcode_cf\ngender\nname\nid\n[INFOSEPARATOR]\nFilters: name_pcode_cf>=A AND name_pcode_cf<=F AND name_pcode_cf IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "name", attributes: [name.name_pcode_cf, name.gender, name.name, name.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#2, .#3] })) }, TreeOp { name: "PROJECTION", timing: 9e-6, cardinality: 84183, extra_info: "#1\n#2\n#3\n", children: [TreeOp { name: "FILTER", timing: 0.003316, cardinality: 84183, extra_info: "(pi.note IS NOT NULL)", children: [TreeOp { name: "SEQ_SCAN", timing: 0.042011, cardinality: 2963664, extra_info: "person_info\n[INFOSEPARATOR]\nnote\nperson_id\ninfo_type_id\ninfo", children: [], attr: Some(Scan(ScanAttr { table_name: "person_info", attributes: [person_info.note, person_info.person_id, person_info.info_type_id, person_info.info] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1, .#2, .#3] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: n.id, right_attr: pi.person_id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 8e-6, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=mini biography AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: pi.info_type_id, right_attr: it.id }] })) }
[(Name("n"), [Name("id")], [Name("name")]), (Name("pi"), [Name("person_id"), Name("info_type_id")], [Name("info")]), (Name("it"), [Name("id")], [])]
[Lookup([0 @ n.id = 0 @ pi.person_id)]), Intersect([pi.info_type_id @ 0), it.id @ 1)])]

TreeOp { name: "HASH_JOIN", timing: 5.8e-5, cardinality: 14194, extra_info: "INNER\nml.link_type_id = lt.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.013917, cardinality: 19906, extra_info: "INNER\nt.id = ml.linked_movie_id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.011542, cardinality: 1555597, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\nid\n[INFOSEPARATOR]\nFilters: production_year>=1980 AND production_year<=2010 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.id] })) }, TreeOp { name: "SEQ_SCAN", timing: 1.4e-5, cardinality: 29997, extra_info: "movie_link\n[INFOSEPARATOR]\nlinked_movie_id\nlink_type_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_link", attributes: [movie_link.linked_movie_id, movie_link.link_type_id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: ml.linked_movie_id }] })) }, TreeOp { name: "PROJECTION", timing: 0.0, cardinality: 4, extra_info: "#1\n", children: [TreeOp { name: "FILTER", timing: 3e-6, cardinality: 4, extra_info: "(lt.link = 'references' OR lt.link = 'referenced in' OR lt.link = 'features' OR lt.link = 'featured in')", children: [TreeOp { name: "SEQ_SCAN", timing: 3e-6, cardinality: 18, extra_info: "link_type\n[INFOSEPARATOR]\nlink\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "link_type", attributes: [link_type.link, link_type.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: ml.link_type_id, right_attr: lt.id }] })) }
[(Name("t"), [Name("id")], []), (Name("ml"), [Name("linked_movie_id"), Name("link_type_id")], []), (Name("lt"), [Name("id")], [])]
[Lookup([0 @ t.id = 0 @ ml.linked_movie_id)]), Intersect([ml.link_type_id @ 0), lt.id @ 1)])]

TreeOp { name: "HASH_JOIN", timing: 0.00739, cardinality: 68185, extra_info: "INNER\npi.person_id = an.person_id\nn.id = an.person_id\nci.person_id = an.person_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.028082, cardinality: 40157, extra_info: "INNER\nci.person_id = pi.person_id\nci.person_id = n.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 1.053995, cardinality: 1097209, extra_info: "INNER\nci.movie_id = t.id\nci.movie_id = ml.linked_movie_id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.011641, cardinality: 36244344, extra_info: "cast_info\n[INFOSEPARATOR]\nperson_id\nmovie_id", children: [], attr: Some(Scan(ScanAttr { table_name: "cast_info", attributes: [cast_info.person_id, cast_info.movie_id] })) }, TreeOp { name: "HASH_JOIN", timing: 5.8e-5, cardinality: 14194, extra_info: "INNER\nml.link_type_id = lt.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.013917, cardinality: 19906, extra_info: "INNER\nt.id = ml.linked_movie_id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.011542, cardinality: 1555597, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\nid\n[INFOSEPARATOR]\nFilters: production_year>=1980 AND production_year<=2010 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.id] })) }, TreeOp { name: "SEQ_SCAN", timing: 1.4e-5, cardinality: 29997, extra_info: "movie_link\n[INFOSEPARATOR]\nlinked_movie_id\nlink_type_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_link", attributes: [movie_link.linked_movie_id, movie_link.link_type_id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: ml.linked_movie_id }] })) }, TreeOp { name: "PROJECTION", timing: 0.0, cardinality: 4, extra_info: "#1\n", children: [TreeOp { name: "FILTER", timing: 3e-6, cardinality: 4, extra_info: "(lt.link = 'references' OR lt.link = 'referenced in' OR lt.link = 'features' OR lt.link = 'featured in')", children: [TreeOp { name: "SEQ_SCAN", timing: 3e-6, cardinality: 18, extra_info: "link_type\n[INFOSEPARATOR]\nlink\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "link_type", attributes: [link_type.link, link_type.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: ml.link_type_id, right_attr: lt.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: ci.movie_id, right_attr: t.id }, Equalizer { left_attr: ci.movie_id, right_attr: ml.linked_movie_id }] })) }, TreeOp { name: "HASH_JOIN", timing: 2.5e-5, cardinality: 13063, extra_info: "INNER\npi.info_type_id = it.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.011403, cardinality: 13063, extra_info: "INNER\nn.id = pi.person_id\n", children: [TreeOp { name: "PROJECTION", timing: 1.7e-5, cardinality: 507621, extra_info: "#2\n#3\n", children: [TreeOp { name: "FILTER", timing: 0.00385, cardinality: 507621, extra_info: "(n.gender = 'm' OR (n.gender = 'f' AND prefix(n.name, 'A')))", children: [TreeOp { name: "SEQ_SCAN", timing: 0.027974, cardinality: 1103278, extra_info: "name\n[INFOSEPARATOR]\nname_pcode_cf\ngender\nname\nid\n[INFOSEPARATOR]\nFilters: name_pcode_cf>=A AND name_pcode_cf<=F AND name_pcode_cf IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "name", attributes: [name.name_pcode_cf, name.gender, name.name, name.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#2, .#3] })) }, TreeOp { name: "PROJECTION", timing: 9e-6, cardinality: 84183, extra_info: "#1\n#2\n#3\n", children: [TreeOp { name: "FILTER", timing: 0.003316, cardinality: 84183, extra_info: "(pi.note IS NOT NULL)", children: [TreeOp { name: "SEQ_SCAN", timing: 0.042011, cardinality: 2963664, extra_info: "person_info\n[INFOSEPARATOR]\nnote\nperson_id\ninfo_type_id\ninfo", children: [], attr: Some(Scan(ScanAttr { table_name: "person_info", attributes: [person_info.note, person_info.person_id, person_info.info_type_id, person_info.info] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1, .#2, .#3] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: n.id, right_attr: pi.person_id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 8e-6, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=mini biography AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: pi.info_type_id, right_attr: it.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: ci.person_id, right_attr: pi.person_id }, Equalizer { left_attr: ci.person_id, right_attr: n.id }] })) }, TreeOp { name: "PROJECTION", timing: 3.4e-5, cardinality: 686095, extra_info: "#1\n", children: [TreeOp { name: "FILTER", timing: 0.01122, cardinality: 686095, extra_info: "(contains(an.name, 'a') OR prefix(an.name, 'A'))", children: [TreeOp { name: "SEQ_SCAN", timing: 0.004555, cardinality: 901343, extra_info: "aka_name\n[INFOSEPARATOR]\nname\nperson_id", children: [], attr: Some(Scan(ScanAttr { table_name: "aka_name", attributes: [aka_name.name, aka_name.person_id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: pi.person_id, right_attr: an.person_id }, Equalizer { left_attr: n.id, right_attr: an.person_id }, Equalizer { left_attr: ci.person_id, right_attr: an.person_id }] })) }
[(Name("ci"), [Name("movie_id"), Name("person_id")], []), (Node(TreeOp { name: "HASH_JOIN", timing: 5.8e-5, cardinality: 14194, extra_info: "INNER\nml.link_type_id = lt.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.013917, cardinality: 19906, extra_info: "INNER\nt.id = ml.linked_movie_id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.011542, cardinality: 1555597, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\nid\n[INFOSEPARATOR]\nFilters: production_year>=1980 AND production_year<=2010 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.id] })) }, TreeOp { name: "SEQ_SCAN", timing: 1.4e-5, cardinality: 29997, extra_info: "movie_link\n[INFOSEPARATOR]\nlinked_movie_id\nlink_type_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_link", attributes: [movie_link.linked_movie_id, movie_link.link_type_id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: ml.linked_movie_id }] })) }, TreeOp { name: "PROJECTION", timing: 0.0, cardinality: 4, extra_info: "#1\n", children: [TreeOp { name: "FILTER", timing: 3e-6, cardinality: 4, extra_info: "(lt.link = 'references' OR lt.link = 'referenced in' OR lt.link = 'features' OR lt.link = 'featured in')", children: [TreeOp { name: "SEQ_SCAN", timing: 3e-6, cardinality: 18, extra_info: "link_type\n[INFOSEPARATOR]\nlink\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "link_type", attributes: [link_type.link, link_type.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: ml.link_type_id, right_attr: lt.id }] })) }), [Id(0)], [Id(1)]), (Node(TreeOp { name: "HASH_JOIN", timing: 2.5e-5, cardinality: 13063, extra_info: "INNER\npi.info_type_id = it.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.011403, cardinality: 13063, extra_info: "INNER\nn.id = pi.person_id\n", children: [TreeOp { name: "PROJECTION", timing: 1.7e-5, cardinality: 507621, extra_info: "#2\n#3\n", children: [TreeOp { name: "FILTER", timing: 0.00385, cardinality: 507621, extra_info: "(n.gender = 'm' OR (n.gender = 'f' AND prefix(n.name, 'A')))", children: [TreeOp { name: "SEQ_SCAN", timing: 0.027974, cardinality: 1103278, extra_info: "name\n[INFOSEPARATOR]\nname_pcode_cf\ngender\nname\nid\n[INFOSEPARATOR]\nFilters: name_pcode_cf>=A AND name_pcode_cf<=F AND name_pcode_cf IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "name", attributes: [name.name_pcode_cf, name.gender, name.name, name.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#2, .#3] })) }, TreeOp { name: "PROJECTION", timing: 9e-6, cardinality: 84183, extra_info: "#1\n#2\n#3\n", children: [TreeOp { name: "FILTER", timing: 0.003316, cardinality: 84183, extra_info: "(pi.note IS NOT NULL)", children: [TreeOp { name: "SEQ_SCAN", timing: 0.042011, cardinality: 2963664, extra_info: "person_info\n[INFOSEPARATOR]\nnote\nperson_id\ninfo_type_id\ninfo", children: [], attr: Some(Scan(ScanAttr { table_name: "person_info", attributes: [person_info.note, person_info.person_id, person_info.info_type_id, person_info.info] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1, .#2, .#3] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: n.id, right_attr: pi.person_id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 8e-6, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=mini biography AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: pi.info_type_id, right_attr: it.id }] })) }), [Id(0)], [Id(1), Id(2), Id(3)]), (Name("an"), [Name("person_id")], [])]
[Lookup([0 @ ci.movie_id = 0 @ t.id), 1 @ ci.person_id = 1 @ pi.person_id), 1 @ ci.person_id = 2 @ an.person_id)])]
