let n = load[{<id: int, name: string, imdb_index: string, imdb_id: string, gender: string, name_pcode_cf: string, name_pcode_nf: string, surname_pcode: string, md5sum: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/7a/n.csv")
let pi = load[{<id: int, person_id: int, info_type_id: int, info: string, note: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/7a/pi.csv")
let it = load[{<id: int, info: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/7a/it.csv")
let t = load[{<id: int, title: string, imdb_index: string, kind_id: int, production_year: int, imdb_id: string, phonetic_code: string, episode_of_id: int, season_nr: int, episode_nr: int, series_years: string, md5sum: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/7a/t.csv")
let ml = load[{<id: int, movie_id: int, linked_movie_id: int, link_type_id: int> -> int}]("/Users/s2522996/Documents/free-join/data/imdb_csv/movie_link.csv")
let lt = load[{<id: int, link: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/7a/lt.csv")
let ci = load[{<id: int, person_id: int, movie_id: int, person_role_id: int, note: string, nr_order: int, role_id: int> -> int}]("/Users/s2522996/Documents/free-join/data/imdb_csv/cast_info.csv")
let an = load[{<id: int, person_id: int, name: string, imdb_index: string, name_pcode_cf: string, name_pcode_nf: string, surname_pcode: string, md5sum: string> -> int}]("/Users/s2522996/Documents/free-join/queries/preprocessed/join-order-benchmark/data/7a/an.csv")


let interm0_trie0 = sum(<x0, n_trie1> <- n_trie0)
	let pi_trie1 = pi_trie0(x0) in
	if (pi_trie1 != {}) then
		sum(<x1, pi_trie2> <- pi_trie1)
			let it_trie1 = it_trie0(x1) in
			if (it_trie1 != {}) then
				sum(<n_off, _> <- n_trie1)
					sum(<pi_off, _> <- pi_trie2)
						{ <col0=n_id(n_off), col1=n_name(n_off), col2=pi_info_type_id(pi_off)> -> true }
			else
				{}
	else
		{}
in


let interm1_trie0 = sum(<x0, t_trie1> <- t_trie0)
	let ml_trie1 = ml_trie0(x0) in
	if (ml_trie1 != {}) then
		sum(<x1, ml_trie2> <- ml_trie1)
			let lt_trie1 = lt_trie0(x1) in
			if (lt_trie1 != {}) then
				sum(<t_off, _> <- t_trie1)
					sum(<ml_off, _> <- ml_trie2)
						{ <col0=t_id(t_off), col1=t_title(t_off), col2=ml_link_type_id(ml_off)> -> true }
			else
				{}
	else
		{}
in


sum(<x0, ci_trie1> <- ci_trie0)
	let interm1_trie1 = interm1_trie0(x0) in
	if (interm1_trie1 != {}) then
		sum(<x1, ci_trie2> <- ci_trie1)
			let interm0_trie1 = interm0_trie0(x1) in
			let an_trie1 = an_trie0(x1) in
			if (interm0_trie1 != {} && an_trie1 != {}) then
				let mn_interm1_col1 = sum(<interm1_off, _> <- interm1_trie1) { interm1_col1(interm1_off) -> true } in
				let mn_interm1_col2 = sum(<interm1_off, _> <- interm1_trie1) { interm1_col2(interm1_off) -> true } in
				let mn_interm0_col1 = sum(<interm0_off, _> <- interm0_trie1) { interm0_col1(interm0_off) -> true } in
				let mn_interm0_col2 = sum(<interm0_off, _> <- interm0_trie1) { interm0_col2(interm0_off) -> true } in
				<col2=mn_interm1_col1, col3=mn_interm1_col2, col4=mn_interm0_col1, col5=mn_interm0_col2>
			else
				<col2={}, col3={}, col4={}, col5={}>
	else
		{}


