
TreeOp { name: "HASH_JOIN", timing: 0.014976, cardinality: 1056, extra_info: "INNER\nt.id = miidx.movie_id\n", children: [TreeOp { name: "FILTER", timing: 0.050975, cardinality: 2218, extra_info: "(t.title != '' AND (contains(t.title, 'Champion') OR contains(t.title, 'Loser')))", children: [TreeOp { name: "SEQ_SCAN", timing: 0.019951, cardinality: 2528312, extra_info: "title\n[INFOSEPARATOR]\ntitle\nid\nkind_id", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.title, title.id, title.kind_id] })) }], attr: Some(Filter) }, TreeOp { name: "SEQ_SCAN", timing: 0.006304, cardinality: 1380035, extra_info: "movie_info_idx\n[INFOSEPARATOR]\nmovie_id\ninfo_type_id\ninfo", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info_idx", attributes: [movie_info_idx.movie_id, movie_info_idx.info_type_id, movie_info_idx.info] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: miidx.movie_id }] })) }
[(Name("t"), [Name("id")], [Name("title"), Name("kind_id")]), (Name("miidx"), [Name("movie_id")], [Name("info"), Name("info_type_id")])]
[Lookup([0 @ t.id = 0 @ miidx.movie_id)])]

TreeOp { name: "HASH_JOIN", timing: 0.002311, cardinality: 372, extra_info: "INNER\nmc.company_id = cn.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 2.4e-5, cardinality: 626, extra_info: "INNER\nmc.company_type_id = ct.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 4.2e-5, cardinality: 2474, extra_info: "INNER\nmiidx.info_type_id = it.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.00014, cardinality: 7422, extra_info: "INNER\nmi.info_type_id = it2.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000202, cardinality: 40605, extra_info: "INNER\nt.kind_id = kt.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.022455, cardinality: 55728, extra_info: "INNER\nt.id = mc.movie_id\nmiidx.movie_id = mc.movie_id\nmi.movie_id = mc.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.074433, cardinality: 11445, extra_info: "INNER\nmi.movie_id = t.id\nmi.movie_id = miidx.movie_id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.00346, cardinality: 14835720, extra_info: "movie_info\n[INFOSEPARATOR]\nmovie_id\ninfo_type_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info", attributes: [movie_info.movie_id, movie_info.info_type_id] })) }, TreeOp { name: "HASH_JOIN", timing: 0.014976, cardinality: 1056, extra_info: "INNER\nt.id = miidx.movie_id\n", children: [TreeOp { name: "FILTER", timing: 0.050975, cardinality: 2218, extra_info: "(t.title != '' AND (contains(t.title, 'Champion') OR contains(t.title, 'Loser')))", children: [TreeOp { name: "SEQ_SCAN", timing: 0.019951, cardinality: 2528312, extra_info: "title\n[INFOSEPARATOR]\ntitle\nid\nkind_id", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.title, title.id, title.kind_id] })) }], attr: Some(Filter) }, TreeOp { name: "SEQ_SCAN", timing: 0.006304, cardinality: 1380035, extra_info: "movie_info_idx\n[INFOSEPARATOR]\nmovie_id\ninfo_type_id\ninfo", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info_idx", attributes: [movie_info_idx.movie_id, movie_info_idx.info_type_id, movie_info_idx.info] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: miidx.movie_id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi.movie_id, right_attr: t.id }, Equalizer { left_attr: mi.movie_id, right_attr: miidx.movie_id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.000587, cardinality: 2609129, extra_info: "movie_companies\n[INFOSEPARATOR]\nmovie_id\ncompany_id\ncompany_type_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_companies", attributes: [movie_companies.movie_id, movie_companies.company_id, movie_companies.company_type_id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: mc.movie_id }, Equalizer { left_attr: miidx.movie_id, right_attr: mc.movie_id }, Equalizer { left_attr: mi.movie_id, right_attr: mc.movie_id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 6e-6, cardinality: 1, extra_info: "kind_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=movie AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "kind_type", attributes: [kind_type.kind, kind_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.kind_id, right_attr: kt.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 6e-6, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=release dates AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi.info_type_id, right_attr: it2.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 3e-6, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=rating AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: miidx.info_type_id, right_attr: it.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 3e-6, cardinality: 1, extra_info: "company_type\n[INFOSEPARATOR]\nkind\nid\n[INFOSEPARATOR]\nFilters: kind=production companies AND kind IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "company_type", attributes: [company_type.kind, company_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.company_type_id, right_attr: ct.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.003411, cardinality: 84843, extra_info: "company_name\n[INFOSEPARATOR]\ncountry_code\nid\nname\n[INFOSEPARATOR]\nFilters: country_code=[us] AND country_code IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "company_name", attributes: [company_name.country_code, company_name.id, company_name.name] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.company_id, right_attr: cn.id }] })) }
[(Name("mi"), [Name("movie_id"), Name("info_type_id")], []), (Node(TreeOp { name: "HASH_JOIN", timing: 0.014976, cardinality: 1056, extra_info: "INNER\nt.id = miidx.movie_id\n", children: [TreeOp { name: "FILTER", timing: 0.050975, cardinality: 2218, extra_info: "(t.title != '' AND (contains(t.title, 'Champion') OR contains(t.title, 'Loser')))", children: [TreeOp { name: "SEQ_SCAN", timing: 0.019951, cardinality: 2528312, extra_info: "title\n[INFOSEPARATOR]\ntitle\nid\nkind_id", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.title, title.id, title.kind_id] })) }], attr: Some(Filter) }, TreeOp { name: "SEQ_SCAN", timing: 0.006304, cardinality: 1380035, extra_info: "movie_info_idx\n[INFOSEPARATOR]\nmovie_id\ninfo_type_id\ninfo", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info_idx", attributes: [movie_info_idx.movie_id, movie_info_idx.info_type_id, movie_info_idx.info] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: miidx.movie_id }] })) }), [Id(0), Id(2), Id(4)], [Id(1), Id(3)]), (Name("mc"), [Name("movie_id"), Name("company_type_id"), Name("company_id")], []), (Name("kt"), [Name("id")], []), (Name("it2"), [Name("id")], []), (Name("it"), [Name("id")], []), (Name("ct"), [Name("id")], []), (Name("cn"), [Name("id")], [Name("name")])]
[Lookup([0 @ mi.movie_id = 0 @ t.id), 0 @ mi.movie_id = 1 @ mc.movie_id)]), Intersect([t.kind_id @ 0), kt.id @ 2)]), Lookup([1 @ mi.info_type_id = 3 @ it2.id)]), Intersect([miidx.info_type_id @ 0), it.id @ 4)]), Intersect([mc.company_type_id @ 1), ct.id @ 5)]), Intersect([mc.company_id @ 1), cn.id @ 6)])]
