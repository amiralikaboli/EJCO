
TreeOp { name: "HASH_JOIN", timing: 0.007411, cardinality: 2645, extra_info: "INNER\nt.id = mi_idx.movie_id\n", children: [TreeOp { name: "PROJECTION", timing: 1e-6, cardinality: 2536, extra_info: "#1\n#2\n", children: [TreeOp { name: "FILTER", timing: 0.022957, cardinality: 2536, extra_info: "(prefix(t.title, 'Birdemic') OR contains(t.title, 'Movie'))", children: [TreeOp { name: "SEQ_SCAN", timing: 0.029042, cardinality: 1381453, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\ntitle\nid\n[INFOSEPARATOR]\nFilters: production_year>2000 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.title, title.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1, .#2] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.000212, cardinality: 1380035, extra_info: "movie_info_idx\n[INFOSEPARATOR]\nmovie_id\ninfo_type_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info_idx", attributes: [movie_info_idx.movie_id, movie_info_idx.info_type_id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: mi_idx.movie_id }] })) }
[(Name("t"), [Name("id")], [Name("title")]), (Name("mi_idx"), [Name("movie_id")], [Name("info_type_id")])]
[Lookup([0 @ t.id = 0 @ mi_idx.movie_id)])]

TreeOp { name: "HASH_JOIN", timing: 0.00112, cardinality: 10, extra_info: "INNER\nmc.company_id = cn.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 5e-6, cardinality: 33, extra_info: "INNER\nmc.company_type_id = ct.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 1.3e-5, cardinality: 33, extra_info: "INNER\nmi.info_type_id = it1.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.001187, cardinality: 4959, extra_info: "INNER\nmi_idx.info_type_id = it2.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.026492, cardinality: 477273, extra_info: "INNER\nt.id = mc.movie_id\nmi_idx.movie_id = mc.movie_id\nmi.movie_id = mc.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.13281, cardinality: 49580, extra_info: "INNER\nmi.movie_id = t.id\nmi.movie_id = mi_idx.movie_id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.084039, cardinality: 14835720, extra_info: "movie_info\n[INFOSEPARATOR]\nmovie_id\ninfo_type_id\ninfo", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info", attributes: [movie_info.movie_id, movie_info.info_type_id, movie_info.info] })) }, TreeOp { name: "HASH_JOIN", timing: 0.007411, cardinality: 2645, extra_info: "INNER\nt.id = mi_idx.movie_id\n", children: [TreeOp { name: "PROJECTION", timing: 1e-6, cardinality: 2536, extra_info: "#1\n#2\n", children: [TreeOp { name: "FILTER", timing: 0.022957, cardinality: 2536, extra_info: "(prefix(t.title, 'Birdemic') OR contains(t.title, 'Movie'))", children: [TreeOp { name: "SEQ_SCAN", timing: 0.029042, cardinality: 1381453, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\ntitle\nid\n[INFOSEPARATOR]\nFilters: production_year>2000 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.title, title.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1, .#2] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.000212, cardinality: 1380035, extra_info: "movie_info_idx\n[INFOSEPARATOR]\nmovie_id\ninfo_type_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info_idx", attributes: [movie_info_idx.movie_id, movie_info_idx.info_type_id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: mi_idx.movie_id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi.movie_id, right_attr: t.id }, Equalizer { left_attr: mi.movie_id, right_attr: mi_idx.movie_id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.000558, cardinality: 2609129, extra_info: "movie_companies\n[INFOSEPARATOR]\nmovie_id\ncompany_type_id\ncompany_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_companies", attributes: [movie_companies.movie_id, movie_companies.company_type_id, movie_companies.company_id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: mc.movie_id }, Equalizer { left_attr: mi_idx.movie_id, right_attr: mc.movie_id }, Equalizer { left_attr: mi.movie_id, right_attr: mc.movie_id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 9e-6, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=bottom 10 rank AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi_idx.info_type_id, right_attr: it2.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 1e-6, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=budget AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi.info_type_id, right_attr: it1.id }] })) }, TreeOp { name: "PROJECTION", timing: 0.0, cardinality: 2, extra_info: "#1\n", children: [TreeOp { name: "FILTER", timing: 6e-6, cardinality: 2, extra_info: "(ct.kind = 'production companies' OR ct.kind = 'distributors')", children: [TreeOp { name: "SEQ_SCAN", timing: 2e-6, cardinality: 4, extra_info: "company_type\n[INFOSEPARATOR]\nkind\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "company_type", attributes: [company_type.kind, company_type.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.company_type_id, right_attr: ct.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.002236, cardinality: 84843, extra_info: "company_name\n[INFOSEPARATOR]\ncountry_code\nid\n[INFOSEPARATOR]\nFilters: country_code=[us] AND country_code IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "company_name", attributes: [company_name.country_code, company_name.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.company_id, right_attr: cn.id }] })) }
[(Name("mi"), [Name("movie_id"), Name("info_type_id")], [Name("info")]), (Node(TreeOp { name: "HASH_JOIN", timing: 0.007411, cardinality: 2645, extra_info: "INNER\nt.id = mi_idx.movie_id\n", children: [TreeOp { name: "PROJECTION", timing: 1e-6, cardinality: 2536, extra_info: "#1\n#2\n", children: [TreeOp { name: "FILTER", timing: 0.022957, cardinality: 2536, extra_info: "(prefix(t.title, 'Birdemic') OR contains(t.title, 'Movie'))", children: [TreeOp { name: "SEQ_SCAN", timing: 0.029042, cardinality: 1381453, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\ntitle\nid\n[INFOSEPARATOR]\nFilters: production_year>2000 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.title, title.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1, .#2] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.000212, cardinality: 1380035, extra_info: "movie_info_idx\n[INFOSEPARATOR]\nmovie_id\ninfo_type_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info_idx", attributes: [movie_info_idx.movie_id, movie_info_idx.info_type_id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: mi_idx.movie_id }] })) }), [Id(0), Id(2)], [Id(1)]), (Name("mc"), [Name("movie_id"), Name("company_type_id"), Name("company_id")], []), (Name("it2"), [Name("id")], []), (Name("it1"), [Name("id")], []), (Name("ct"), [Name("id")], []), (Name("cn"), [Name("id")], [])]
[Lookup([0 @ mi.movie_id = 0 @ t.id), 0 @ mi.movie_id = 1 @ mc.movie_id)]), Intersect([mi_idx.info_type_id @ 0), it2.id @ 2)]), Lookup([1 @ mi.info_type_id = 3 @ it1.id)]), Intersect([mc.company_type_id @ 1), ct.id @ 4)]), Intersect([mc.company_id @ 1), cn.id @ 5)])]
