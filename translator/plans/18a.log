
TreeOp { name: "HASH_JOIN", timing: 0.056202, cardinality: 1380035, extra_info: "INNER\nt.id = mi_idx.movie_id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.020634, cardinality: 2528312, extra_info: "title\n[INFOSEPARATOR]\nid\ntitle", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.id, title.title] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.006585, cardinality: 1380035, extra_info: "movie_info_idx\n[INFOSEPARATOR]\nmovie_id\ninfo_type_id\ninfo", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info_idx", attributes: [movie_info_idx.movie_id, movie_info_idx.info_type_id, movie_info_idx.info] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: mi_idx.movie_id }] })) }
[(Name("t"), [Name("id")], [Name("title")]), (Name("mi_idx"), [Name("movie_id")], [Name("info_type_id"), Name("info")])]
[Lookup([0 @ t.id = 0 @ mi_idx.movie_id)])]

TreeOp { name: "HASH_JOIN", timing: 0.030705, cardinality: 45431, extra_info: "INNER\nmi.info_type_id = it1.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.062201, cardinality: 6930334, extra_info: "INNER\nmi_idx.info_type_id = it2.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 2.085581, cardinality: 20885030, extra_info: "INNER\nmi.movie_id = t.id\nmi.movie_id = mi_idx.movie_id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.094086, cardinality: 14835720, extra_info: "movie_info\n[INFOSEPARATOR]\nmovie_id\ninfo_type_id\ninfo", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info", attributes: [movie_info.movie_id, movie_info.info_type_id, movie_info.info] })) }, TreeOp { name: "HASH_JOIN", timing: 0.056202, cardinality: 1380035, extra_info: "INNER\nt.id = mi_idx.movie_id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.020634, cardinality: 2528312, extra_info: "title\n[INFOSEPARATOR]\nid\ntitle", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.id, title.title] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.006585, cardinality: 1380035, extra_info: "movie_info_idx\n[INFOSEPARATOR]\nmovie_id\ninfo_type_id\ninfo", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info_idx", attributes: [movie_info_idx.movie_id, movie_info_idx.info_type_id, movie_info_idx.info] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: mi_idx.movie_id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi.movie_id, right_attr: t.id }, Equalizer { left_attr: mi.movie_id, right_attr: mi_idx.movie_id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 9e-6, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=votes AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi_idx.info_type_id, right_attr: it2.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 2e-6, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=budget AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi.info_type_id, right_attr: it1.id }] })) }
[(Name("mi"), [Name("movie_id"), Name("info_type_id")], [Name("info")]), (Node(TreeOp { name: "HASH_JOIN", timing: 0.056202, cardinality: 1380035, extra_info: "INNER\nt.id = mi_idx.movie_id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.020634, cardinality: 2528312, extra_info: "title\n[INFOSEPARATOR]\nid\ntitle", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.id, title.title] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.006585, cardinality: 1380035, extra_info: "movie_info_idx\n[INFOSEPARATOR]\nmovie_id\ninfo_type_id\ninfo", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info_idx", attributes: [movie_info_idx.movie_id, movie_info_idx.info_type_id, movie_info_idx.info] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: mi_idx.movie_id }] })) }), [Id(0), Id(2)], [Id(1), Id(3)]), (Name("it2"), [Name("id")], []), (Name("it1"), [Name("id")], [])]
[Lookup([0 @ mi.movie_id = 0 @ t.id)]), Intersect([mi_idx.info_type_id @ 0), it2.id @ 1)]), Lookup([1 @ mi.info_type_id = 2 @ it1.id)])]

TreeOp { name: "HASH_JOIN", timing: 0.002746, cardinality: 410, extra_info: "INNER\nci.movie_id = t.id\nci.movie_id = mi_idx.movie_id\nci.movie_id = mi.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.009818, cardinality: 6719, extra_info: "INNER\nci.person_id = n.id\n", children: [TreeOp { name: "PROJECTION", timing: 0.000157, cardinality: 2379271, extra_info: "#1\n#2\n", children: [TreeOp { name: "FILTER", timing: 0.122948, cardinality: 2379271, extra_info: "(ci.note = '(producer)' OR ci.note = '(executive producer)')", children: [TreeOp { name: "SEQ_SCAN", timing: 0.107676, cardinality: 36244344, extra_info: "cast_info\n[INFOSEPARATOR]\nnote\nmovie_id\nperson_id", children: [], attr: Some(Scan(ScanAttr { table_name: "cast_info", attributes: [cast_info.note, cast_info.movie_id, cast_info.person_id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1, .#2] })) }, TreeOp { name: "PROJECTION", timing: 0.0, cardinality: 9062, extra_info: "#2\n", children: [TreeOp { name: "FILTER", timing: 0.017536, cardinality: 9062, extra_info: "contains(n.name, 'Tim')", children: [TreeOp { name: "SEQ_SCAN", timing: 0.016282, cardinality: 1739579, extra_info: "name\n[INFOSEPARATOR]\ngender\nname\nid\n[INFOSEPARATOR]\nFilters: gender=m AND gender IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "name", attributes: [name.gender, name.name, name.id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#2] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: ci.person_id, right_attr: n.id }] })) }, TreeOp { name: "HASH_JOIN", timing: 0.030705, cardinality: 45431, extra_info: "INNER\nmi.info_type_id = it1.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.062201, cardinality: 6930334, extra_info: "INNER\nmi_idx.info_type_id = it2.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 2.085581, cardinality: 20885030, extra_info: "INNER\nmi.movie_id = t.id\nmi.movie_id = mi_idx.movie_id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.094086, cardinality: 14835720, extra_info: "movie_info\n[INFOSEPARATOR]\nmovie_id\ninfo_type_id\ninfo", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info", attributes: [movie_info.movie_id, movie_info.info_type_id, movie_info.info] })) }, TreeOp { name: "HASH_JOIN", timing: 0.056202, cardinality: 1380035, extra_info: "INNER\nt.id = mi_idx.movie_id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.020634, cardinality: 2528312, extra_info: "title\n[INFOSEPARATOR]\nid\ntitle", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.id, title.title] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.006585, cardinality: 1380035, extra_info: "movie_info_idx\n[INFOSEPARATOR]\nmovie_id\ninfo_type_id\ninfo", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info_idx", attributes: [movie_info_idx.movie_id, movie_info_idx.info_type_id, movie_info_idx.info] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: mi_idx.movie_id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi.movie_id, right_attr: t.id }, Equalizer { left_attr: mi.movie_id, right_attr: mi_idx.movie_id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 9e-6, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=votes AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi_idx.info_type_id, right_attr: it2.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 2e-6, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=budget AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi.info_type_id, right_attr: it1.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: ci.movie_id, right_attr: t.id }, Equalizer { left_attr: ci.movie_id, right_attr: mi_idx.movie_id }, Equalizer { left_attr: ci.movie_id, right_attr: mi.movie_id }] })) }
[(Name("ci"), [Name("person_id"), Name("movie_id")], []), (Name("n"), [Name("id")], []), (Node(TreeOp { name: "HASH_JOIN", timing: 0.030705, cardinality: 45431, extra_info: "INNER\nmi.info_type_id = it1.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.062201, cardinality: 6930334, extra_info: "INNER\nmi_idx.info_type_id = it2.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 2.085581, cardinality: 20885030, extra_info: "INNER\nmi.movie_id = t.id\nmi.movie_id = mi_idx.movie_id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.094086, cardinality: 14835720, extra_info: "movie_info\n[INFOSEPARATOR]\nmovie_id\ninfo_type_id\ninfo", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info", attributes: [movie_info.movie_id, movie_info.info_type_id, movie_info.info] })) }, TreeOp { name: "HASH_JOIN", timing: 0.056202, cardinality: 1380035, extra_info: "INNER\nt.id = mi_idx.movie_id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.020634, cardinality: 2528312, extra_info: "title\n[INFOSEPARATOR]\nid\ntitle", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.id, title.title] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.006585, cardinality: 1380035, extra_info: "movie_info_idx\n[INFOSEPARATOR]\nmovie_id\ninfo_type_id\ninfo", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info_idx", attributes: [movie_info_idx.movie_id, movie_info_idx.info_type_id, movie_info_idx.info] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: mi_idx.movie_id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi.movie_id, right_attr: t.id }, Equalizer { left_attr: mi.movie_id, right_attr: mi_idx.movie_id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 9e-6, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=votes AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi_idx.info_type_id, right_attr: it2.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 2e-6, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=budget AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi.info_type_id, right_attr: it1.id }] })) }), [Id(0)], [Id(1), Id(2), Id(3), Id(4), Id(5)])]
[Lookup([0 @ ci.person_id = 0 @ n.id), 1 @ ci.movie_id = 1 @ mi_idx.movie_id)])]
