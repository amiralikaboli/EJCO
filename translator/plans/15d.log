
TreeOp { name: "HASH_JOIN", timing: 0.078947, cardinality: 2742670, extra_info: "INNER\nmk.movie_id = t.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.001162, cardinality: 4523930, extra_info: "movie_keyword\n[INFOSEPARATOR]\nmovie_id\nkeyword_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_keyword", attributes: [movie_keyword.movie_id, movie_keyword.keyword_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.028055, cardinality: 1749032, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\nid\ntitle\n[INFOSEPARATOR]\nFilters: production_year>1990 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.id, title.title] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mk.movie_id, right_attr: t.id }] })) }
[(Name("mk"), [Name("movie_id")], [Name("keyword_id")]), (Name("t"), [Name("id")], [Name("title")])]
[Lookup([0 @ mk.movie_id = 0 @ t.id)])]

TreeOp { name: "HASH_JOIN", timing: 0.01358, cardinality: 11347, extra_info: "INNER\nt.id = at.movie_id\nmk.movie_id = at.movie_id\nmi.movie_id = at.movie_id\nmc.movie_id = at.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.001673, cardinality: 25564, extra_info: "INNER\nmc.company_id = cn.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 9.7e-5, cardinality: 52513, extra_info: "INNER\nmc.company_type_id = ct.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000314, cardinality: 52513, extra_info: "INNER\nmi.info_type_id = it1.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.000886, cardinality: 69079, extra_info: "INNER\nmk.keyword_id = k.id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.025051, cardinality: 69079, extra_info: "INNER\nt.id = mc.movie_id\nmk.movie_id = mc.movie_id\nmi.movie_id = mc.movie_id\n", children: [TreeOp { name: "HASH_JOIN", timing: 0.055055, cardinality: 19250, extra_info: "INNER\nmi.movie_id = t.id\nmi.movie_id = mk.movie_id\n", children: [TreeOp { name: "PROJECTION", timing: 3e-6, cardinality: 10810, extra_info: "#1\n#2\n", children: [TreeOp { name: "FILTER", timing: 0.049604, cardinality: 10810, extra_info: "contains(mi.note, 'internet')", children: [TreeOp { name: "SEQ_SCAN", timing: 0.033935, cardinality: 14835720, extra_info: "movie_info\n[INFOSEPARATOR]\nnote\nmovie_id\ninfo_type_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_info", attributes: [movie_info.note, movie_info.movie_id, movie_info.info_type_id] })) }], attr: Some(Filter) }], attr: Some(Project(ProjectAttr { columns: [.#1, .#2] })) }, TreeOp { name: "HASH_JOIN", timing: 0.078947, cardinality: 2742670, extra_info: "INNER\nmk.movie_id = t.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.001162, cardinality: 4523930, extra_info: "movie_keyword\n[INFOSEPARATOR]\nmovie_id\nkeyword_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_keyword", attributes: [movie_keyword.movie_id, movie_keyword.keyword_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.028055, cardinality: 1749032, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\nid\ntitle\n[INFOSEPARATOR]\nFilters: production_year>1990 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.id, title.title] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mk.movie_id, right_attr: t.id }] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi.movie_id, right_attr: t.id }, Equalizer { left_attr: mi.movie_id, right_attr: mk.movie_id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.000666, cardinality: 2609129, extra_info: "movie_companies\n[INFOSEPARATOR]\nmovie_id\ncompany_id\ncompany_type_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_companies", attributes: [movie_companies.movie_id, movie_companies.company_id, movie_companies.company_type_id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: mc.movie_id }, Equalizer { left_attr: mk.movie_id, right_attr: mc.movie_id }, Equalizer { left_attr: mi.movie_id, right_attr: mc.movie_id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 2.2e-5, cardinality: 134170, extra_info: "keyword\n[INFOSEPARATOR]\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "keyword", attributes: [keyword.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mk.keyword_id, right_attr: k.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 7e-6, cardinality: 1, extra_info: "info_type\n[INFOSEPARATOR]\ninfo\nid\n[INFOSEPARATOR]\nFilters: info=release dates AND info IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "info_type", attributes: [info_type.info, info_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mi.info_type_id, right_attr: it1.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 1e-6, cardinality: 4, extra_info: "company_type\n[INFOSEPARATOR]\nid", children: [], attr: Some(Scan(ScanAttr { table_name: "company_type", attributes: [company_type.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.company_type_id, right_attr: ct.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.002273, cardinality: 84843, extra_info: "company_name\n[INFOSEPARATOR]\ncountry_code\nid\n[INFOSEPARATOR]\nFilters: country_code=[us] AND country_code IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "company_name", attributes: [company_name.country_code, company_name.id] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mc.company_id, right_attr: cn.id }] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.003712, cardinality: 361472, extra_info: "aka_title\n[INFOSEPARATOR]\nmovie_id\ntitle", children: [], attr: Some(Scan(ScanAttr { table_name: "aka_title", attributes: [aka_title.movie_id, aka_title.title] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: t.id, right_attr: at.movie_id }, Equalizer { left_attr: mk.movie_id, right_attr: at.movie_id }, Equalizer { left_attr: mi.movie_id, right_attr: at.movie_id }, Equalizer { left_attr: mc.movie_id, right_attr: at.movie_id }] })) }
[(Name("mi"), [Name("movie_id"), Name("info_type_id")], []), (Node(TreeOp { name: "HASH_JOIN", timing: 0.078947, cardinality: 2742670, extra_info: "INNER\nmk.movie_id = t.id\n", children: [TreeOp { name: "SEQ_SCAN", timing: 0.001162, cardinality: 4523930, extra_info: "movie_keyword\n[INFOSEPARATOR]\nmovie_id\nkeyword_id", children: [], attr: Some(Scan(ScanAttr { table_name: "movie_keyword", attributes: [movie_keyword.movie_id, movie_keyword.keyword_id] })) }, TreeOp { name: "SEQ_SCAN", timing: 0.028055, cardinality: 1749032, extra_info: "title\n[INFOSEPARATOR]\nproduction_year\nid\ntitle\n[INFOSEPARATOR]\nFilters: production_year>1990 AND production_year IS NOT NULL\n", children: [], attr: Some(Scan(ScanAttr { table_name: "title", attributes: [title.production_year, title.id, title.title] })) }], attr: Some(Join(JoinAttr { join_type: Inner, equalizers: [Equalizer { left_attr: mk.movie_id, right_attr: t.id }] })) }), [Id(0), Id(1)], [Id(2)]), (Name("mc"), [Name("movie_id"), Name("company_type_id"), Name("company_id")], []), (Name("k"), [Name("id")], []), (Name("it1"), [Name("id")], []), (Name("ct"), [Name("id")], []), (Name("cn"), [Name("id")], []), (Name("at"), [Name("movie_id")], [Name("title")])]
[Lookup([0 @ mi.movie_id = 0 @ t.id), 0 @ mi.movie_id = 1 @ mc.movie_id)]), Intersect([mk.keyword_id @ 0), k.id @ 2)]), Lookup([1 @ mi.info_type_id = 3 @ it1.id)]), Intersect([mc.company_type_id @ 1), ct.id @ 4)]), Intersect([mc.company_id @ 1), cn.id @ 5)]), Lookup([0 @ mi.movie_id = 6 @ at.movie_id)])]
